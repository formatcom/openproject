{"version":3,"sources":["./node_modules/@sentry/utils/esm/string.js","./node_modules/@sentry/utils/esm/logger.js","./node_modules/@sentry/utils/esm/misc.js","./node_modules/@sentry/utils/esm/is.js","./node_modules/@sentry/utils/esm/syncpromise.js","./node_modules/@sentry/hub/esm/scope.js","./node_modules/@sentry/types/esm/status.js","./node_modules/@sentry/minimal/esm/index.js","./node_modules/@sentry/utils/esm/polyfill.js","./node_modules/@sentry/utils/esm/error.js","./node_modules/@sentry/utils/esm/dsn.js","./node_modules/@sentry/utils/esm/memo.js","./node_modules/@sentry/utils/esm/object.js","./node_modules/@sentry/core/esm/api.js","./node_modules/@sentry/core/esm/integration.js","./node_modules/@sentry/core/esm/baseclient.js","./node_modules/@sentry/core/esm/transports/noop.js","./node_modules/@sentry/core/esm/basebackend.js","./node_modules/@sentry/utils/esm/supports.js","./node_modules/@sentry/browser/esm/tracekit.js","./node_modules/@sentry/browser/esm/parsers.js","./node_modules/@sentry/browser/esm/eventbuilder.js","./node_modules/@sentry/utils/esm/promisebuffer.js","./node_modules/@sentry/core/esm/integrations/functiontostring.js","./node_modules/@sentry/browser/esm/transports/base.js","./node_modules/@sentry/browser/esm/transports/fetch.js","./node_modules/@sentry/browser/esm/transports/xhr.js","./node_modules/@sentry/browser/esm/backend.js","./node_modules/@sentry/browser/esm/version.js","./node_modules/@sentry/browser/esm/client.js","./node_modules/@sentry/core/esm/integrations/inboundfilters.js","./node_modules/@sentry/browser/esm/helpers.js","./node_modules/@sentry/browser/esm/integrations/trycatch.js","./node_modules/@sentry/utils/esm/instrument.js","./node_modules/@sentry/browser/esm/integrations/breadcrumbs.js","./node_modules/@sentry/browser/esm/integrations/globalhandlers.js","./node_modules/@sentry/browser/esm/integrations/linkederrors.js","./node_modules/@sentry/browser/esm/integrations/useragent.js","./node_modules/@sentry/browser/esm/sdk.js","./node_modules/@sentry/core/esm/sdk.js","./node_modules/@sentry/browser/esm/index.js","./node_modules/@sentry/hub/esm/hub.js"],"names":["truncate","str","max","length","substr","snipLine","line","colno","newLine","ll","start","Math","end","min","slice","safeJoin","input","delimiter","Array","isArray","output","i","value","push","String","e","join","isMatchingPattern","pattern","test","indexOf","global","PREFIX","Logger","this","_enabled","prototype","disable","enable","log","args","_i","arguments","console","warn","error","__SENTRY__","logger","dynamicRequire","mod","request","require","isNodeEnv","Object","toString","call","process","fallbackGlobalObject","getGlobalObject","window","self","uuid4","crypto","msCrypto","getRandomValues","arr","Uint16Array","pad","num","v","replace","c","r","random","parseUrl","url","match","query","fragment","host","path","protocol","relative","getEventDescription","event","message","exception","values","type","event_id","consoleSandbox","callback","originalConsole","wrappedLevels","forEach","level","__sentry_original__","result","keys","addExceptionTypeValue","addExceptionMechanism","mechanism","key","_oO","getLocationHref","document","location","href","oO","htmlTreeAsString","elem","currentElem","out","height","len","sepLength","nextStr","_htmlElementAsString","parentNode","reverse","el","className","classes","attr","tagName","toLowerCase","id","split","attrWhitelist","getAttribute","timestampWithMs","Date","now","parseRetryAfterHeader","header","headerDelay","parseInt","isNaN","headerDate","parse","defaultFunctionName","getFunctionName","fn","name","isError","wat","isInstanceOf","Error","isErrorEvent","isDOMError","isDOMException","isString","isPrimitive","isPlainObject","isEvent","Event","isElement","Element","isRegExp","isThenable","Boolean","then","isSyntheticEvent","base","_e","States","SyncPromise","executor","_this","_state","PENDING","_handlers","_resolve","_setResult","RESOLVED","_reject","reason","REJECTED","state","_value","_executeHandlers","_attachHandler","handler","concat","onrejected","onfulfilled","resolve","reject","_","all","collection","counter","resolvedCollection","item","index","TypeError","catch","val","finally","onfinally","isRejected","Scope","_notifyingListeners","_scopeListeners","_eventProcessors","_breadcrumbs","_user","_tags","_extra","_context","addScopeListener","addEventProcessor","_notifyScopeListeners","setTimeout","_notifyEventProcessors","processors","hint","processor","final","setUser","user","setTags","tags","setTag","_a","setExtras","extras","setExtra","extra","setFingerprint","fingerprint","_fingerprint","setLevel","_level","setTransaction","transaction","_transaction","_span","setContext","context","setSpan","span","getSpan","clone","scope","newScope","clear","undefined","addBreadcrumb","breadcrumb","maxBreadcrumbs","mergedBreadcrumb","timestamp","clearBreadcrumbs","_applyFingerprint","applyToEvent","contexts","breadcrumbs","getGlobalEventProcessors","globalEventProcessors","addGlobalEventProcessor","Status","fromHttpCode","code","Success","RateLimit","Invalid","Failed","Unknown","callOnHub","method","hub","apply","captureException","syntheticException","originalException","captureMessage","captureEvent","configureScope","withScope","setPrototypeOf","__proto__","obj","proto","prop","hasOwnProperty","_super","SentryError","_newTarget","constructor","DSN_REGEX","ERROR_MESSAGE","Dsn","from","_fromString","_fromComponents","_validate","withPassword","pass","port","projectId","exec","_b","_c","pop","components","component","Memo","_hasWeakSet","WeakSet","_inner","memoize","has","add","unmemoize","delete","splice","fill","source","replacement","original","wrapped","defineProperties","enumerable","_Oo","getWalkSource","is","err","stack","event_1","target","currentTarget","CustomEvent","detail","jsonSize","encodeURI","utf8Length","JSON","stringify","normalizeToSize","object","depth","maxSize","serialized","normalize","normalizeValue","_events","walk","memo","Infinity","normalized","serializeValue","toJSON","acc","innerKey","extractExceptionKeysForMessage","maxLength","sort","includedKeys","API","dsn","_dsnObject","getDsn","getStoreEndpoint","_getBaseUrl","getStoreEndpointPath","getStoreEndpointWithUrlEncodedAuth","auth","sentry_key","sentry_version","map","encodeURIComponent","getRequestHeaders","clientName","clientVersion","getReportDialogEndpoint","dialogOptions","endpoint","encodedOptions","email","installedIntegrations","setupIntegrations","options","integrations","defaultIntegrations","userIntegrations","userIntegrationsNames_1","pickedIntegrationsNames_1","defaultIntegration","userIntegration","integrationsNames","alwaysLastToRun","getIntegrationsToSetup","integration","setupOnce","setupIntegration","BaseClient","backendClass","_integrations","_processing","_backend","_options","_dsn","_isEnabled","eventId","_getBackend","eventFromException","_processEvent","finalEvent","eventFromMessage","getOptions","flush","timeout","_isClientProcessing","status","clearInterval","interval","getTransport","close","transportFlushed","ready","enabled","getIntegrations","getIntegration","ticked","setInterval","_prepareEvent","environment","release","dist","maxValueLength","normalizeDepth","prepared","_addIntegrations","sdk","evt","_normalizeEvent","b","data","sdkInfo","integrationsArray","beforeSend","sampleRate","__sentry__","sendEvent","beforeSendResult","_handleAsyncBeforeSend","processedEvent","NoopTransport","Skipped","BaseBackend","_transport","_setupTransport","_exception","_hint","_message","supportsFetch","Headers","Request","Response","isNativeFetch","func","supportsReferrerPolicy","referrerPolicy","UNKNOWN_FUNCTION","gecko","winjs","geckoEval","chromeEval","computeStackTrace","ex","popSize","framesToPop","stacktrace","parts","opera10Regex","opera11Regex","lines","element","column","extractMessage","computeStackTraceFromStacktraceProp","popFrames","submatch","isNative","columnNumber","computeStackTraceFromStackProp","failed","exceptionFromStacktrace","frames","prepareFramesForEvent","eventFromStacktrace","localStack","firstFrameFunction","lastFrameFunction","frame","filename","function","in_app","lineno","eventFromUnknownInput","domException","name_1","eventFromString","rejection","__serialized__","frames_1","eventFromPlainObject","synthetic","attachStacktrace","originalFunctionToString","PromiseBuffer","_limit","_buffer","isReady","task","remove","drain","capturedSetTimeout","clearTimeout","BaseTransport","FetchTransport","_disabledUntil","Promise","defaultOptions","body","headers","fetch","response","get","XHRTransport","XMLHttpRequest","onreadystatechange","readyState","getResponseHeader","open","setRequestHeader","send","BrowserBackend","transportOptions","transport","handled","Info","SDK_NAME","SDK_VERSION","BrowserClient","platform","packages","version","showReportDialog","script","createElement","async","src","onLoad","onload","head","appendChild","FunctionToString","Function","DEFAULT_IGNORE_ERRORS","InboundFilters","client","getClient","clientOptions","_mergeOptions","_shouldDropEvent","_isSentryError","_isIgnoredError","_isBlacklistedUrl","_getEventFilterUrl","_isWhitelistedUrl","ignoreInternal","ignoreErrors","_getPossibleEventMessages","some","blacklistUrls","whitelistUrls","frames_2","ignoreOnError","shouldIgnoreOnError","ignoreNextOnError","wrap","before","__sentry_wrapped__","sentryWrapped","wrappedArguments","arg","handleEvent","property","defineProperty","getOwnPropertyDescriptor","configurable","lastHref","TryCatch","_ignoreOnError","_wrapTimeFunction","originalCallback","_wrapRAF","_wrapEventTarget","eventName","bind","_wrapXHR","originalSend","xhr","xmlHttpRequestProps","wrapOptions","handlers","instrumented","instrument","originalConsoleLevel","triggerHandlers","instrumentConsole","addEventListener","domEventHandler","keypressEventHandler","innerOriginal","instrumentDOM","xhrproto","originalOpen","__sentry_xhr__","toUpperCase","__sentry_own_request__","commonHandlerData","startTimestamp","status_code","endTimestamp","instrumentXHR","doc","sandbox","hidden","contentWindow","removeChild","supportsNativeFetch","originalFetch","fetchData","getFetchMethod","getFetchUrl","instrumentFetch","chrome","isChromePackagedApp","app","runtime","hasHistoryApi","history","pushState","replaceState","supportsHistory","oldOnPopState","onpopstate","historyReplacementFunction","originalHistoryFunction","to","instrumentHistory","addInstrumentationHandler","e_1","next","done","e_1_1","return","fetchArgs","keypressTimeout","lastCapturedEvent","debounceTimer","debounce","isContentEditable","Breadcrumbs","dom","sentry","_consoleBreadcrumb","handlerData","category","fromString","_domBreadcrumb","_xhrBreadcrumb","addSentryBreadcrumb","_fetchBreadcrumb","filterUrl","_historyBreadcrumb","parsedLoc","parsedFrom","parsedTo","serializedData","GlobalHandlers","_global","_oldOnErrorHandler","_oldOnUnhandledRejectionHandler","_onErrorHandlerInstalled","_onUnhandledRejectionHandlerInstalled","onerror","onunhandledrejection","stackTraceLimit","_installGlobalOnErrorHandler","_installGlobalOnUnhandledRejectionHandler","msg","currentHub","hasIntegration","isFailedOwnDelivery","_eventFromIncompleteOnError","_enhanceEventWithInitialFrame","_eventFromIncompleteRejection","groups","LinkedErrors","_key","limit","_handler","linkedErrors","_walkErrorTree","UserAgent","navigator","userAgent","init","window_1","SENTRY_RELEASE","clientClass","debug","bindClient","initAndBind","lastEventId","forceLoad","windowIntegrations","_window","Sentry","Integrations","INTEGRATIONS","Hub","_version","_stack","_invokeClient","top","getStackTop","isOlderThan","pushScope","getStack","parentScope","popScope","getScope","_lastEventId","finalHint","beforeBreadcrumb","finalBreadcrumb","run","oldHub","makeMain","startSpan","spanOrSpanContext","forceNoChild","_callExtensionMethod","traceHeaders","carrier","getMainCarrier","extensions","registry","getHubFromCarrier","setHubOnCarrier","getCurrentHub","hasHubOnCarrier","activeDomain","module","active","registryHubTopStack","getHubFromActiveDomain"],"mappings":"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","file":"sentry-browser.0032b8bf42812d98956d.js","sourcesContent":["import { isRegExp } from './is';\n/**\n * Truncates given string to the maximum characters count\n *\n * @param str An object that contains serializable values\n * @param max Maximum number of characters in truncated string\n * @returns string Encoded\n */\nexport function truncate(str, max) {\n    if (max === void 0) { max = 0; }\n    // tslint:disable-next-line:strict-type-predicates\n    if (typeof str !== 'string' || max === 0) {\n        return str;\n    }\n    return str.length <= max ? str : str.substr(0, max) + \"...\";\n}\n/**\n * This is basically just `trim_line` from\n * https://github.com/getsentry/sentry/blob/master/src/sentry/lang/javascript/processor.py#L67\n *\n * @param str An object that contains serializable values\n * @param max Maximum number of characters in truncated string\n * @returns string Encoded\n */\nexport function snipLine(line, colno) {\n    var newLine = line;\n    var ll = newLine.length;\n    if (ll <= 150) {\n        return newLine;\n    }\n    if (colno > ll) {\n        colno = ll; // tslint:disable-line:no-parameter-reassignment\n    }\n    var start = Math.max(colno - 60, 0);\n    if (start < 5) {\n        start = 0;\n    }\n    var end = Math.min(start + 140, ll);\n    if (end > ll - 5) {\n        end = ll;\n    }\n    if (end === ll) {\n        start = Math.max(end - 140, 0);\n    }\n    newLine = newLine.slice(start, end);\n    if (start > 0) {\n        newLine = \"'{snip} \" + newLine;\n    }\n    if (end < ll) {\n        newLine += ' {snip}';\n    }\n    return newLine;\n}\n/**\n * Join values in array\n * @param input array of values to be joined together\n * @param delimiter string to be placed in-between values\n * @returns Joined values\n */\nexport function safeJoin(input, delimiter) {\n    if (!Array.isArray(input)) {\n        return '';\n    }\n    var output = [];\n    // tslint:disable-next-line:prefer-for-of\n    for (var i = 0; i < input.length; i++) {\n        var value = input[i];\n        try {\n            output.push(String(value));\n        }\n        catch (e) {\n            output.push('[value cannot be serialized]');\n        }\n    }\n    return output.join(delimiter);\n}\n/**\n * Checks if the value matches a regex or includes the string\n * @param value The string value to be checked against\n * @param pattern Either a regex or a string that must be contained in value\n */\nexport function isMatchingPattern(value, pattern) {\n    if (isRegExp(pattern)) {\n        return pattern.test(value);\n    }\n    if (typeof pattern === 'string') {\n        return value.indexOf(pattern) !== -1;\n    }\n    return false;\n}\n//# sourceMappingURL=string.js.map","import { consoleSandbox, getGlobalObject } from './misc';\n// TODO: Implement different loggers for different environments\nvar global = getGlobalObject();\n/** Prefix for logging strings */\nvar PREFIX = 'Sentry Logger ';\n/** JSDoc */\nvar Logger = /** @class */ (function () {\n    /** JSDoc */\n    function Logger() {\n        this._enabled = false;\n    }\n    /** JSDoc */\n    Logger.prototype.disable = function () {\n        this._enabled = false;\n    };\n    /** JSDoc */\n    Logger.prototype.enable = function () {\n        this._enabled = true;\n    };\n    /** JSDoc */\n    Logger.prototype.log = function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        if (!this._enabled) {\n            return;\n        }\n        consoleSandbox(function () {\n            global.console.log(PREFIX + \"[Log]: \" + args.join(' ')); // tslint:disable-line:no-console\n        });\n    };\n    /** JSDoc */\n    Logger.prototype.warn = function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        if (!this._enabled) {\n            return;\n        }\n        consoleSandbox(function () {\n            global.console.warn(PREFIX + \"[Warn]: \" + args.join(' ')); // tslint:disable-line:no-console\n        });\n    };\n    /** JSDoc */\n    Logger.prototype.error = function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        if (!this._enabled) {\n            return;\n        }\n        consoleSandbox(function () {\n            global.console.error(PREFIX + \"[Error]: \" + args.join(' ')); // tslint:disable-line:no-console\n        });\n    };\n    return Logger;\n}());\n// Ensure we only have a single logger instance, even if multiple versions of @sentry/utils are being used\nglobal.__SENTRY__ = global.__SENTRY__ || {};\nvar logger = global.__SENTRY__.logger || (global.__SENTRY__.logger = new Logger());\nexport { logger };\n//# sourceMappingURL=logger.js.map","import { isString } from './is';\nimport { snipLine } from './string';\n/**\n * Requires a module which is protected _against bundler minification.\n *\n * @param request The module path to resolve\n */\nexport function dynamicRequire(mod, request) {\n    // tslint:disable-next-line: no-unsafe-any\n    return mod.require(request);\n}\n/**\n * Checks whether we're in the Node.js or Browser environment\n *\n * @returns Answer to given question\n */\nexport function isNodeEnv() {\n    // tslint:disable:strict-type-predicates\n    return Object.prototype.toString.call(typeof process !== 'undefined' ? process : 0) === '[object process]';\n}\nvar fallbackGlobalObject = {};\n/**\n * Safely get global scope object\n *\n * @returns Global scope object\n */\nexport function getGlobalObject() {\n    return (isNodeEnv()\n        ? global\n        : typeof window !== 'undefined'\n            ? window\n            : typeof self !== 'undefined'\n                ? self\n                : fallbackGlobalObject);\n}\n/**\n * UUID4 generator\n *\n * @returns string Generated UUID4.\n */\nexport function uuid4() {\n    var global = getGlobalObject();\n    var crypto = global.crypto || global.msCrypto;\n    if (!(crypto === void 0) && crypto.getRandomValues) {\n        // Use window.crypto API if available\n        var arr = new Uint16Array(8);\n        crypto.getRandomValues(arr);\n        // set 4 in byte 7\n        // tslint:disable-next-line:no-bitwise\n        arr[3] = (arr[3] & 0xfff) | 0x4000;\n        // set 2 most significant bits of byte 9 to '10'\n        // tslint:disable-next-line:no-bitwise\n        arr[4] = (arr[4] & 0x3fff) | 0x8000;\n        var pad = function (num) {\n            var v = num.toString(16);\n            while (v.length < 4) {\n                v = \"0\" + v;\n            }\n            return v;\n        };\n        return (pad(arr[0]) + pad(arr[1]) + pad(arr[2]) + pad(arr[3]) + pad(arr[4]) + pad(arr[5]) + pad(arr[6]) + pad(arr[7]));\n    }\n    // http://stackoverflow.com/questions/105034/how-to-create-a-guid-uuid-in-javascript/2117523#2117523\n    return 'xxxxxxxxxxxx4xxxyxxxxxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n        // tslint:disable-next-line:no-bitwise\n        var r = (Math.random() * 16) | 0;\n        // tslint:disable-next-line:no-bitwise\n        var v = c === 'x' ? r : (r & 0x3) | 0x8;\n        return v.toString(16);\n    });\n}\n/**\n * Parses string form of URL into an object\n * // borrowed from https://tools.ietf.org/html/rfc3986#appendix-B\n * // intentionally using regex and not <a/> href parsing trick because React Native and other\n * // environments where DOM might not be available\n * @returns parsed URL object\n */\nexport function parseUrl(url) {\n    if (!url) {\n        return {};\n    }\n    var match = url.match(/^(([^:\\/?#]+):)?(\\/\\/([^\\/?#]*))?([^?#]*)(\\?([^#]*))?(#(.*))?$/);\n    if (!match) {\n        return {};\n    }\n    // coerce to undefined values to empty string so we don't get 'undefined'\n    var query = match[6] || '';\n    var fragment = match[8] || '';\n    return {\n        host: match[4],\n        path: match[5],\n        protocol: match[2],\n        relative: match[5] + query + fragment,\n    };\n}\n/**\n * Extracts either message or type+value from an event that can be used for user-facing logs\n * @returns event's description\n */\nexport function getEventDescription(event) {\n    if (event.message) {\n        return event.message;\n    }\n    if (event.exception && event.exception.values && event.exception.values[0]) {\n        var exception = event.exception.values[0];\n        if (exception.type && exception.value) {\n            return exception.type + \": \" + exception.value;\n        }\n        return exception.type || exception.value || event.event_id || '<unknown>';\n    }\n    return event.event_id || '<unknown>';\n}\n/** JSDoc */\nexport function consoleSandbox(callback) {\n    var global = getGlobalObject();\n    var levels = ['debug', 'info', 'warn', 'error', 'log', 'assert'];\n    if (!('console' in global)) {\n        return callback();\n    }\n    var originalConsole = global.console;\n    var wrappedLevels = {};\n    // Restore all wrapped console methods\n    levels.forEach(function (level) {\n        if (level in global.console && originalConsole[level].__sentry_original__) {\n            wrappedLevels[level] = originalConsole[level];\n            originalConsole[level] = originalConsole[level].__sentry_original__;\n        }\n    });\n    // Perform callback manipulations\n    var result = callback();\n    // Revert restoration to wrapped state\n    Object.keys(wrappedLevels).forEach(function (level) {\n        originalConsole[level] = wrappedLevels[level];\n    });\n    return result;\n}\n/**\n * Adds exception values, type and value to an synthetic Exception.\n * @param event The event to modify.\n * @param value Value of the exception.\n * @param type Type of the exception.\n * @hidden\n */\nexport function addExceptionTypeValue(event, value, type) {\n    event.exception = event.exception || {};\n    event.exception.values = event.exception.values || [];\n    event.exception.values[0] = event.exception.values[0] || {};\n    event.exception.values[0].value = event.exception.values[0].value || value || '';\n    event.exception.values[0].type = event.exception.values[0].type || type || 'Error';\n}\n/**\n * Adds exception mechanism to a given event.\n * @param event The event to modify.\n * @param mechanism Mechanism of the mechanism.\n * @hidden\n */\nexport function addExceptionMechanism(event, mechanism) {\n    if (mechanism === void 0) { mechanism = {}; }\n    // TODO: Use real type with `keyof Mechanism` thingy and maybe make it better?\n    try {\n        // @ts-ignore\n        // tslint:disable:no-non-null-assertion\n        event.exception.values[0].mechanism = event.exception.values[0].mechanism || {};\n        Object.keys(mechanism).forEach(function (key) {\n            // @ts-ignore\n            event.exception.values[0].mechanism[key] = mechanism[key];\n        });\n    }\n    catch (_oO) {\n        // no-empty\n    }\n}\n/**\n * A safe form of location.href\n */\nexport function getLocationHref() {\n    try {\n        return document.location.href;\n    }\n    catch (oO) {\n        return '';\n    }\n}\n/**\n * Given a child DOM element, returns a query-selector statement describing that\n * and its ancestors\n * e.g. [HTMLElement] => body > div > input#foo.btn[name=baz]\n * @returns generated DOM path\n */\nexport function htmlTreeAsString(elem) {\n    // try/catch both:\n    // - accessing event.target (see getsentry/raven-js#838, #768)\n    // - `htmlTreeAsString` because it's complex, and just accessing the DOM incorrectly\n    // - can throw an exception in some circumstances.\n    try {\n        var currentElem = elem;\n        var MAX_TRAVERSE_HEIGHT = 5;\n        var MAX_OUTPUT_LEN = 80;\n        var out = [];\n        var height = 0;\n        var len = 0;\n        var separator = ' > ';\n        var sepLength = separator.length;\n        var nextStr = void 0;\n        while (currentElem && height++ < MAX_TRAVERSE_HEIGHT) {\n            nextStr = _htmlElementAsString(currentElem);\n            // bail out if\n            // - nextStr is the 'html' element\n            // - the length of the string that would be created exceeds MAX_OUTPUT_LEN\n            //   (ignore this limit if we are on the first iteration)\n            if (nextStr === 'html' || (height > 1 && len + out.length * sepLength + nextStr.length >= MAX_OUTPUT_LEN)) {\n                break;\n            }\n            out.push(nextStr);\n            len += nextStr.length;\n            currentElem = currentElem.parentNode;\n        }\n        return out.reverse().join(separator);\n    }\n    catch (_oO) {\n        return '<unknown>';\n    }\n}\n/**\n * Returns a simple, query-selector representation of a DOM element\n * e.g. [HTMLElement] => input#foo.btn[name=baz]\n * @returns generated DOM path\n */\nfunction _htmlElementAsString(el) {\n    var elem = el;\n    var out = [];\n    var className;\n    var classes;\n    var key;\n    var attr;\n    var i;\n    if (!elem || !elem.tagName) {\n        return '';\n    }\n    out.push(elem.tagName.toLowerCase());\n    if (elem.id) {\n        out.push(\"#\" + elem.id);\n    }\n    className = elem.className;\n    if (className && isString(className)) {\n        classes = className.split(/\\s+/);\n        for (i = 0; i < classes.length; i++) {\n            out.push(\".\" + classes[i]);\n        }\n    }\n    var attrWhitelist = ['type', 'name', 'title', 'alt'];\n    for (i = 0; i < attrWhitelist.length; i++) {\n        key = attrWhitelist[i];\n        attr = elem.getAttribute(key);\n        if (attr) {\n            out.push(\"[\" + key + \"=\\\"\" + attr + \"\\\"]\");\n        }\n    }\n    return out.join('');\n}\n/**\n * Returns a timestamp in seconds with milliseconds precision.\n */\nexport function timestampWithMs() {\n    return Date.now() / 1000;\n}\n// https://semver.org/#is-there-a-suggested-regular-expression-regex-to-check-a-semver-string\nvar SEMVER_REGEXP = /^(0|[1-9]\\d*)\\.(0|[1-9]\\d*)\\.(0|[1-9]\\d*)(?:-((?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*)(?:\\.(?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*))*))?(?:\\+([0-9a-zA-Z-]+(?:\\.[0-9a-zA-Z-]+)*))?$/;\n/**\n * Parses input into a SemVer interface\n * @param input string representation of a semver version\n */\nexport function parseSemver(input) {\n    var match = input.match(SEMVER_REGEXP) || [];\n    var major = parseInt(match[1], 10);\n    var minor = parseInt(match[2], 10);\n    var patch = parseInt(match[3], 10);\n    return {\n        buildmetadata: match[5],\n        major: isNaN(major) ? undefined : major,\n        minor: isNaN(minor) ? undefined : minor,\n        patch: isNaN(patch) ? undefined : patch,\n        prerelease: match[4],\n    };\n}\nvar defaultRetryAfter = 60 * 1000; // 60 seconds\n/**\n * Extracts Retry-After value from the request header or returns default value\n * @param now current unix timestamp\n * @param header string representation of 'Retry-After' header\n */\nexport function parseRetryAfterHeader(now, header) {\n    if (!header) {\n        return defaultRetryAfter;\n    }\n    var headerDelay = parseInt(\"\" + header, 10);\n    if (!isNaN(headerDelay)) {\n        return headerDelay * 1000;\n    }\n    var headerDate = Date.parse(\"\" + header);\n    if (!isNaN(headerDate)) {\n        return headerDate - now;\n    }\n    return defaultRetryAfter;\n}\nvar defaultFunctionName = '<anonymous>';\n/**\n * Safely extract function name from itself\n */\nexport function getFunctionName(fn) {\n    try {\n        if (!fn || typeof fn !== 'function') {\n            return defaultFunctionName;\n        }\n        return fn.name || defaultFunctionName;\n    }\n    catch (e) {\n        // Just accessing custom props in some Selenium environments\n        // can cause a \"Permission denied\" exception (see raven-js#495).\n        return defaultFunctionName;\n    }\n}\n/**\n * This function adds context (pre/post/line) lines to the provided frame\n *\n * @param lines string[] containing all lines\n * @param frame StackFrame that will be mutated\n * @param linesOfContext number of context lines we want to add pre/post\n */\nexport function addContextToFrame(lines, frame, linesOfContext) {\n    if (linesOfContext === void 0) { linesOfContext = 5; }\n    var lineno = frame.lineno || 0;\n    var maxLines = lines.length;\n    var sourceLine = Math.max(Math.min(maxLines, lineno - 1), 0);\n    frame.pre_context = lines\n        .slice(Math.max(0, sourceLine - linesOfContext), sourceLine)\n        .map(function (line) { return snipLine(line, 0); });\n    frame.context_line = snipLine(lines[Math.min(maxLines - 1, sourceLine)], frame.colno || 0);\n    frame.post_context = lines\n        .slice(Math.min(sourceLine + 1, maxLines), sourceLine + 1 + linesOfContext)\n        .map(function (line) { return snipLine(line, 0); });\n}\n//# sourceMappingURL=misc.js.map","/**\n * Checks whether given value's type is one of a few Error or Error-like\n * {@link isError}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isError(wat) {\n    switch (Object.prototype.toString.call(wat)) {\n        case '[object Error]':\n            return true;\n        case '[object Exception]':\n            return true;\n        case '[object DOMException]':\n            return true;\n        default:\n            return isInstanceOf(wat, Error);\n    }\n}\n/**\n * Checks whether given value's type is ErrorEvent\n * {@link isErrorEvent}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isErrorEvent(wat) {\n    return Object.prototype.toString.call(wat) === '[object ErrorEvent]';\n}\n/**\n * Checks whether given value's type is DOMError\n * {@link isDOMError}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isDOMError(wat) {\n    return Object.prototype.toString.call(wat) === '[object DOMError]';\n}\n/**\n * Checks whether given value's type is DOMException\n * {@link isDOMException}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isDOMException(wat) {\n    return Object.prototype.toString.call(wat) === '[object DOMException]';\n}\n/**\n * Checks whether given value's type is a string\n * {@link isString}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isString(wat) {\n    return Object.prototype.toString.call(wat) === '[object String]';\n}\n/**\n * Checks whether given value's is a primitive (undefined, null, number, boolean, string)\n * {@link isPrimitive}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isPrimitive(wat) {\n    return wat === null || (typeof wat !== 'object' && typeof wat !== 'function');\n}\n/**\n * Checks whether given value's type is an object literal\n * {@link isPlainObject}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isPlainObject(wat) {\n    return Object.prototype.toString.call(wat) === '[object Object]';\n}\n/**\n * Checks whether given value's type is an Event instance\n * {@link isEvent}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isEvent(wat) {\n    // tslint:disable-next-line:strict-type-predicates\n    return typeof Event !== 'undefined' && isInstanceOf(wat, Event);\n}\n/**\n * Checks whether given value's type is an Element instance\n * {@link isElement}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isElement(wat) {\n    // tslint:disable-next-line:strict-type-predicates\n    return typeof Element !== 'undefined' && isInstanceOf(wat, Element);\n}\n/**\n * Checks whether given value's type is an regexp\n * {@link isRegExp}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isRegExp(wat) {\n    return Object.prototype.toString.call(wat) === '[object RegExp]';\n}\n/**\n * Checks whether given value has a then function.\n * @param wat A value to be checked.\n */\nexport function isThenable(wat) {\n    // tslint:disable:no-unsafe-any\n    return Boolean(wat && wat.then && typeof wat.then === 'function');\n    // tslint:enable:no-unsafe-any\n}\n/**\n * Checks whether given value's type is a SyntheticEvent\n * {@link isSyntheticEvent}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isSyntheticEvent(wat) {\n    // tslint:disable-next-line:no-unsafe-any\n    return isPlainObject(wat) && 'nativeEvent' in wat && 'preventDefault' in wat && 'stopPropagation' in wat;\n}\n/**\n * Checks whether given value's type is an instance of provided constructor.\n * {@link isInstanceOf}.\n *\n * @param wat A value to be checked.\n * @param base A constructor to be used in a check.\n * @returns A boolean representing the result.\n */\nexport function isInstanceOf(wat, base) {\n    try {\n        // tslint:disable-next-line:no-unsafe-any\n        return wat instanceof base;\n    }\n    catch (_e) {\n        return false;\n    }\n}\n//# sourceMappingURL=is.js.map","import { isThenable } from './is';\n/** SyncPromise internal states */\nvar States;\n(function (States) {\n    /** Pending */\n    States[\"PENDING\"] = \"PENDING\";\n    /** Resolved / OK */\n    States[\"RESOLVED\"] = \"RESOLVED\";\n    /** Rejected / Error */\n    States[\"REJECTED\"] = \"REJECTED\";\n})(States || (States = {}));\n/**\n * Thenable class that behaves like a Promise and follows it's interface\n * but is not async internally\n */\nvar SyncPromise = /** @class */ (function () {\n    function SyncPromise(executor) {\n        var _this = this;\n        this._state = States.PENDING;\n        this._handlers = [];\n        /** JSDoc */\n        this._resolve = function (value) {\n            _this._setResult(States.RESOLVED, value);\n        };\n        /** JSDoc */\n        this._reject = function (reason) {\n            _this._setResult(States.REJECTED, reason);\n        };\n        /** JSDoc */\n        this._setResult = function (state, value) {\n            if (_this._state !== States.PENDING) {\n                return;\n            }\n            if (isThenable(value)) {\n                value.then(_this._resolve, _this._reject);\n                return;\n            }\n            _this._state = state;\n            _this._value = value;\n            _this._executeHandlers();\n        };\n        // TODO: FIXME\n        /** JSDoc */\n        this._attachHandler = function (handler) {\n            _this._handlers = _this._handlers.concat(handler);\n            _this._executeHandlers();\n        };\n        /** JSDoc */\n        this._executeHandlers = function () {\n            if (_this._state === States.PENDING) {\n                return;\n            }\n            if (_this._state === States.REJECTED) {\n                _this._handlers.forEach(function (handler) {\n                    if (handler.onrejected) {\n                        handler.onrejected(_this._value);\n                    }\n                });\n            }\n            else {\n                _this._handlers.forEach(function (handler) {\n                    if (handler.onfulfilled) {\n                        // tslint:disable-next-line:no-unsafe-any\n                        handler.onfulfilled(_this._value);\n                    }\n                });\n            }\n            _this._handlers = [];\n        };\n        try {\n            executor(this._resolve, this._reject);\n        }\n        catch (e) {\n            this._reject(e);\n        }\n    }\n    /** JSDoc */\n    SyncPromise.prototype.toString = function () {\n        return '[object SyncPromise]';\n    };\n    /** JSDoc */\n    SyncPromise.resolve = function (value) {\n        return new SyncPromise(function (resolve) {\n            resolve(value);\n        });\n    };\n    /** JSDoc */\n    SyncPromise.reject = function (reason) {\n        return new SyncPromise(function (_, reject) {\n            reject(reason);\n        });\n    };\n    /** JSDoc */\n    SyncPromise.all = function (collection) {\n        return new SyncPromise(function (resolve, reject) {\n            if (!Array.isArray(collection)) {\n                reject(new TypeError(\"Promise.all requires an array as input.\"));\n                return;\n            }\n            if (collection.length === 0) {\n                resolve([]);\n                return;\n            }\n            var counter = collection.length;\n            var resolvedCollection = [];\n            collection.forEach(function (item, index) {\n                SyncPromise.resolve(item)\n                    .then(function (value) {\n                    resolvedCollection[index] = value;\n                    counter -= 1;\n                    if (counter !== 0) {\n                        return;\n                    }\n                    resolve(resolvedCollection);\n                })\n                    .then(null, reject);\n            });\n        });\n    };\n    /** JSDoc */\n    SyncPromise.prototype.then = function (onfulfilled, onrejected) {\n        var _this = this;\n        return new SyncPromise(function (resolve, reject) {\n            _this._attachHandler({\n                onfulfilled: function (result) {\n                    if (!onfulfilled) {\n                        // TODO: ¯\\_(ツ)_/¯\n                        // TODO: FIXME\n                        resolve(result);\n                        return;\n                    }\n                    try {\n                        resolve(onfulfilled(result));\n                        return;\n                    }\n                    catch (e) {\n                        reject(e);\n                        return;\n                    }\n                },\n                onrejected: function (reason) {\n                    if (!onrejected) {\n                        reject(reason);\n                        return;\n                    }\n                    try {\n                        resolve(onrejected(reason));\n                        return;\n                    }\n                    catch (e) {\n                        reject(e);\n                        return;\n                    }\n                },\n            });\n        });\n    };\n    /** JSDoc */\n    SyncPromise.prototype.catch = function (onrejected) {\n        return this.then(function (val) { return val; }, onrejected);\n    };\n    /** JSDoc */\n    SyncPromise.prototype.finally = function (onfinally) {\n        var _this = this;\n        return new SyncPromise(function (resolve, reject) {\n            var val;\n            var isRejected;\n            return _this.then(function (value) {\n                isRejected = false;\n                val = value;\n                if (onfinally) {\n                    onfinally();\n                }\n            }, function (reason) {\n                isRejected = true;\n                val = reason;\n                if (onfinally) {\n                    onfinally();\n                }\n            }).then(function () {\n                if (isRejected) {\n                    reject(val);\n                    return;\n                }\n                // tslint:disable-next-line:no-unsafe-any\n                resolve(val);\n            });\n        });\n    };\n    return SyncPromise;\n}());\nexport { SyncPromise };\n//# sourceMappingURL=syncpromise.js.map","import * as tslib_1 from \"tslib\";\nimport { getGlobalObject, isThenable, SyncPromise, timestampWithMs } from '@sentry/utils';\n/**\n * Holds additional event information. {@link Scope.applyToEvent} will be\n * called by the client before an event will be sent.\n */\nvar Scope = /** @class */ (function () {\n    function Scope() {\n        /** Flag if notifiying is happening. */\n        this._notifyingListeners = false;\n        /** Callback for client to receive scope changes. */\n        this._scopeListeners = [];\n        /** Callback list that will be called after {@link applyToEvent}. */\n        this._eventProcessors = [];\n        /** Array of breadcrumbs. */\n        this._breadcrumbs = [];\n        /** User */\n        this._user = {};\n        /** Tags */\n        this._tags = {};\n        /** Extra */\n        this._extra = {};\n        /** Contexts */\n        this._context = {};\n    }\n    /**\n     * Add internal on change listener. Used for sub SDKs that need to store the scope.\n     * @hidden\n     */\n    Scope.prototype.addScopeListener = function (callback) {\n        this._scopeListeners.push(callback);\n    };\n    /**\n     * @inheritDoc\n     */\n    Scope.prototype.addEventProcessor = function (callback) {\n        this._eventProcessors.push(callback);\n        return this;\n    };\n    /**\n     * This will be called on every set call.\n     */\n    Scope.prototype._notifyScopeListeners = function () {\n        var _this = this;\n        if (!this._notifyingListeners) {\n            this._notifyingListeners = true;\n            setTimeout(function () {\n                _this._scopeListeners.forEach(function (callback) {\n                    callback(_this);\n                });\n                _this._notifyingListeners = false;\n            });\n        }\n    };\n    /**\n     * This will be called after {@link applyToEvent} is finished.\n     */\n    Scope.prototype._notifyEventProcessors = function (processors, event, hint, index) {\n        var _this = this;\n        if (index === void 0) { index = 0; }\n        return new SyncPromise(function (resolve, reject) {\n            var processor = processors[index];\n            // tslint:disable-next-line:strict-type-predicates\n            if (event === null || typeof processor !== 'function') {\n                resolve(event);\n            }\n            else {\n                var result = processor(tslib_1.__assign({}, event), hint);\n                if (isThenable(result)) {\n                    result\n                        .then(function (final) { return _this._notifyEventProcessors(processors, final, hint, index + 1).then(resolve); })\n                        .then(null, reject);\n                }\n                else {\n                    _this._notifyEventProcessors(processors, result, hint, index + 1)\n                        .then(resolve)\n                        .then(null, reject);\n                }\n            }\n        });\n    };\n    /**\n     * @inheritDoc\n     */\n    Scope.prototype.setUser = function (user) {\n        this._user = user || {};\n        this._notifyScopeListeners();\n        return this;\n    };\n    /**\n     * @inheritDoc\n     */\n    Scope.prototype.setTags = function (tags) {\n        this._tags = tslib_1.__assign({}, this._tags, tags);\n        this._notifyScopeListeners();\n        return this;\n    };\n    /**\n     * @inheritDoc\n     */\n    Scope.prototype.setTag = function (key, value) {\n        var _a;\n        this._tags = tslib_1.__assign({}, this._tags, (_a = {}, _a[key] = value, _a));\n        this._notifyScopeListeners();\n        return this;\n    };\n    /**\n     * @inheritDoc\n     */\n    Scope.prototype.setExtras = function (extras) {\n        this._extra = tslib_1.__assign({}, this._extra, extras);\n        this._notifyScopeListeners();\n        return this;\n    };\n    /**\n     * @inheritDoc\n     */\n    Scope.prototype.setExtra = function (key, extra) {\n        var _a;\n        this._extra = tslib_1.__assign({}, this._extra, (_a = {}, _a[key] = extra, _a));\n        this._notifyScopeListeners();\n        return this;\n    };\n    /**\n     * @inheritDoc\n     */\n    Scope.prototype.setFingerprint = function (fingerprint) {\n        this._fingerprint = fingerprint;\n        this._notifyScopeListeners();\n        return this;\n    };\n    /**\n     * @inheritDoc\n     */\n    Scope.prototype.setLevel = function (level) {\n        this._level = level;\n        this._notifyScopeListeners();\n        return this;\n    };\n    /**\n     * @inheritDoc\n     */\n    Scope.prototype.setTransaction = function (transaction) {\n        this._transaction = transaction;\n        if (this._span) {\n            this._span.transaction = transaction;\n        }\n        this._notifyScopeListeners();\n        return this;\n    };\n    /**\n     * @inheritDoc\n     */\n    Scope.prototype.setContext = function (key, context) {\n        var _a;\n        this._context = tslib_1.__assign({}, this._context, (_a = {}, _a[key] = context, _a));\n        this._notifyScopeListeners();\n        return this;\n    };\n    /**\n     * @inheritDoc\n     */\n    Scope.prototype.setSpan = function (span) {\n        this._span = span;\n        this._notifyScopeListeners();\n        return this;\n    };\n    /**\n     * Internal getter for Span, used in Hub.\n     * @hidden\n     */\n    Scope.prototype.getSpan = function () {\n        return this._span;\n    };\n    /**\n     * Inherit values from the parent scope.\n     * @param scope to clone.\n     */\n    Scope.clone = function (scope) {\n        var newScope = new Scope();\n        if (scope) {\n            newScope._breadcrumbs = tslib_1.__spread(scope._breadcrumbs);\n            newScope._tags = tslib_1.__assign({}, scope._tags);\n            newScope._extra = tslib_1.__assign({}, scope._extra);\n            newScope._context = tslib_1.__assign({}, scope._context);\n            newScope._user = scope._user;\n            newScope._level = scope._level;\n            newScope._span = scope._span;\n            newScope._transaction = scope._transaction;\n            newScope._fingerprint = scope._fingerprint;\n            newScope._eventProcessors = tslib_1.__spread(scope._eventProcessors);\n        }\n        return newScope;\n    };\n    /**\n     * @inheritDoc\n     */\n    Scope.prototype.clear = function () {\n        this._breadcrumbs = [];\n        this._tags = {};\n        this._extra = {};\n        this._user = {};\n        this._context = {};\n        this._level = undefined;\n        this._transaction = undefined;\n        this._fingerprint = undefined;\n        this._span = undefined;\n        this._notifyScopeListeners();\n        return this;\n    };\n    /**\n     * @inheritDoc\n     */\n    Scope.prototype.addBreadcrumb = function (breadcrumb, maxBreadcrumbs) {\n        var mergedBreadcrumb = tslib_1.__assign({ timestamp: timestampWithMs() }, breadcrumb);\n        this._breadcrumbs =\n            maxBreadcrumbs !== undefined && maxBreadcrumbs >= 0\n                ? tslib_1.__spread(this._breadcrumbs, [mergedBreadcrumb]).slice(-maxBreadcrumbs)\n                : tslib_1.__spread(this._breadcrumbs, [mergedBreadcrumb]);\n        this._notifyScopeListeners();\n        return this;\n    };\n    /**\n     * @inheritDoc\n     */\n    Scope.prototype.clearBreadcrumbs = function () {\n        this._breadcrumbs = [];\n        this._notifyScopeListeners();\n        return this;\n    };\n    /**\n     * Applies fingerprint from the scope to the event if there's one,\n     * uses message if there's one instead or get rid of empty fingerprint\n     */\n    Scope.prototype._applyFingerprint = function (event) {\n        // Make sure it's an array first and we actually have something in place\n        event.fingerprint = event.fingerprint\n            ? Array.isArray(event.fingerprint)\n                ? event.fingerprint\n                : [event.fingerprint]\n            : [];\n        // If we have something on the scope, then merge it with event\n        if (this._fingerprint) {\n            event.fingerprint = event.fingerprint.concat(this._fingerprint);\n        }\n        // If we have no data at all, remove empty array default\n        if (event.fingerprint && !event.fingerprint.length) {\n            delete event.fingerprint;\n        }\n    };\n    /**\n     * Applies the current context and fingerprint to the event.\n     * Note that breadcrumbs will be added by the client.\n     * Also if the event has already breadcrumbs on it, we do not merge them.\n     * @param event Event\n     * @param hint May contain additional informartion about the original exception.\n     * @hidden\n     */\n    Scope.prototype.applyToEvent = function (event, hint) {\n        if (this._extra && Object.keys(this._extra).length) {\n            event.extra = tslib_1.__assign({}, this._extra, event.extra);\n        }\n        if (this._tags && Object.keys(this._tags).length) {\n            event.tags = tslib_1.__assign({}, this._tags, event.tags);\n        }\n        if (this._user && Object.keys(this._user).length) {\n            event.user = tslib_1.__assign({}, this._user, event.user);\n        }\n        if (this._context && Object.keys(this._context).length) {\n            event.contexts = tslib_1.__assign({}, this._context, event.contexts);\n        }\n        if (this._level) {\n            event.level = this._level;\n        }\n        if (this._transaction) {\n            event.transaction = this._transaction;\n        }\n        this._applyFingerprint(event);\n        event.breadcrumbs = tslib_1.__spread((event.breadcrumbs || []), this._breadcrumbs);\n        event.breadcrumbs = event.breadcrumbs.length > 0 ? event.breadcrumbs : undefined;\n        return this._notifyEventProcessors(tslib_1.__spread(getGlobalEventProcessors(), this._eventProcessors), event, hint);\n    };\n    return Scope;\n}());\nexport { Scope };\n/**\n * Retruns the global event processors.\n */\nfunction getGlobalEventProcessors() {\n    var global = getGlobalObject();\n    global.__SENTRY__ = global.__SENTRY__ || {};\n    global.__SENTRY__.globalEventProcessors = global.__SENTRY__.globalEventProcessors || [];\n    return global.__SENTRY__.globalEventProcessors;\n}\n/**\n * Add a EventProcessor to be kept globally.\n * @param callback EventProcessor to add\n */\nexport function addGlobalEventProcessor(callback) {\n    getGlobalEventProcessors().push(callback);\n}\n//# sourceMappingURL=scope.js.map","/** The status of an event. */\nexport var Status;\n(function (Status) {\n    /** The status could not be determined. */\n    Status[\"Unknown\"] = \"unknown\";\n    /** The event was skipped due to configuration or callbacks. */\n    Status[\"Skipped\"] = \"skipped\";\n    /** The event was sent to Sentry successfully. */\n    Status[\"Success\"] = \"success\";\n    /** The client is currently rate limited and will try again later. */\n    Status[\"RateLimit\"] = \"rate_limit\";\n    /** The event could not be processed. */\n    Status[\"Invalid\"] = \"invalid\";\n    /** A server-side error ocurred during submission. */\n    Status[\"Failed\"] = \"failed\";\n})(Status || (Status = {}));\n// tslint:disable:completed-docs\n// tslint:disable:no-unnecessary-qualifier no-namespace\n(function (Status) {\n    /**\n     * Converts a HTTP status code into a {@link Status}.\n     *\n     * @param code The HTTP response status code.\n     * @returns The send status or {@link Status.Unknown}.\n     */\n    function fromHttpCode(code) {\n        if (code >= 200 && code < 300) {\n            return Status.Success;\n        }\n        if (code === 429) {\n            return Status.RateLimit;\n        }\n        if (code >= 400 && code < 500) {\n            return Status.Invalid;\n        }\n        if (code >= 500) {\n            return Status.Failed;\n        }\n        return Status.Unknown;\n    }\n    Status.fromHttpCode = fromHttpCode;\n})(Status || (Status = {}));\n//# sourceMappingURL=status.js.map","import * as tslib_1 from \"tslib\";\nimport { getCurrentHub } from '@sentry/hub';\n/**\n * This calls a function on the current hub.\n * @param method function to call on hub.\n * @param args to pass to function.\n */\nfunction callOnHub(method) {\n    var args = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n        args[_i - 1] = arguments[_i];\n    }\n    var hub = getCurrentHub();\n    if (hub && hub[method]) {\n        // tslint:disable-next-line:no-unsafe-any\n        return hub[method].apply(hub, tslib_1.__spread(args));\n    }\n    throw new Error(\"No hub defined or \" + method + \" was not found on the hub, please open a bug report.\");\n}\n/**\n * Captures an exception event and sends it to Sentry.\n *\n * @param exception An exception-like object.\n * @returns The generated eventId.\n */\nexport function captureException(exception) {\n    var syntheticException;\n    try {\n        throw new Error('Sentry syntheticException');\n    }\n    catch (exception) {\n        syntheticException = exception;\n    }\n    return callOnHub('captureException', exception, {\n        originalException: exception,\n        syntheticException: syntheticException,\n    });\n}\n/**\n * Captures a message event and sends it to Sentry.\n *\n * @param message The message to send to Sentry.\n * @param level Define the level of the message.\n * @returns The generated eventId.\n */\nexport function captureMessage(message, level) {\n    var syntheticException;\n    try {\n        throw new Error(message);\n    }\n    catch (exception) {\n        syntheticException = exception;\n    }\n    return callOnHub('captureMessage', message, level, {\n        originalException: message,\n        syntheticException: syntheticException,\n    });\n}\n/**\n * Captures a manually created event and sends it to Sentry.\n *\n * @param event The event to send to Sentry.\n * @returns The generated eventId.\n */\nexport function captureEvent(event) {\n    return callOnHub('captureEvent', event);\n}\n/**\n * Callback to set context information onto the scope.\n * @param callback Callback function that receives Scope.\n */\nexport function configureScope(callback) {\n    callOnHub('configureScope', callback);\n}\n/**\n * Records a new breadcrumb which will be attached to future events.\n *\n * Breadcrumbs will be added to subsequent events to provide more context on\n * user's actions prior to an error or crash.\n *\n * @param breadcrumb The breadcrumb to record.\n */\nexport function addBreadcrumb(breadcrumb) {\n    callOnHub('addBreadcrumb', breadcrumb);\n}\n/**\n * Sets context data with the given name.\n * @param name of the context\n * @param context Any kind of data. This data will be normailzed.\n */\nexport function setContext(name, context) {\n    callOnHub('setContext', name, context);\n}\n/**\n * Set an object that will be merged sent as extra data with the event.\n * @param extras Extras object to merge into current context.\n */\nexport function setExtras(extras) {\n    callOnHub('setExtras', extras);\n}\n/**\n * Set an object that will be merged sent as tags data with the event.\n * @param tags Tags context object to merge into current context.\n */\nexport function setTags(tags) {\n    callOnHub('setTags', tags);\n}\n/**\n * Set key:value that will be sent as extra data with the event.\n * @param key String of extra\n * @param extra Any kind of data. This data will be normailzed.\n */\nexport function setExtra(key, extra) {\n    callOnHub('setExtra', key, extra);\n}\n/**\n * Set key:value that will be sent as tags data with the event.\n * @param key String key of tag\n * @param value String value of tag\n */\nexport function setTag(key, value) {\n    callOnHub('setTag', key, value);\n}\n/**\n * Updates user context information for future events.\n *\n * @param user User context object to be set in the current context. Pass `null` to unset the user.\n */\nexport function setUser(user) {\n    callOnHub('setUser', user);\n}\n/**\n * Creates a new scope with and executes the given operation within.\n * The scope is automatically removed once the operation\n * finishes or throws.\n *\n * This is essentially a convenience function for:\n *\n *     pushScope();\n *     callback();\n *     popScope();\n *\n * @param callback that will be enclosed into push/popScope.\n */\nexport function withScope(callback) {\n    callOnHub('withScope', callback);\n}\n/**\n * Calls a function on the latest client. Use this with caution, it's meant as\n * in \"internal\" helper so we don't need to expose every possible function in\n * the shim. It is not guaranteed that the client actually implements the\n * function.\n *\n * @param method The method to call on the client/client.\n * @param args Arguments to pass to the client/fontend.\n * @hidden\n */\nexport function _callOnClient(method) {\n    var args = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n        args[_i - 1] = arguments[_i];\n    }\n    callOnHub.apply(void 0, tslib_1.__spread(['_invokeClient', method], args));\n}\n//# sourceMappingURL=index.js.map","export var setPrototypeOf = Object.setPrototypeOf || ({ __proto__: [] } instanceof Array ? setProtoOf : mixinProperties); // tslint:disable-line:no-unbound-method\n/**\n * setPrototypeOf polyfill using __proto__\n */\nfunction setProtoOf(obj, proto) {\n    // @ts-ignore\n    obj.__proto__ = proto;\n    return obj;\n}\n/**\n * setPrototypeOf polyfill using mixin\n */\nfunction mixinProperties(obj, proto) {\n    for (var prop in proto) {\n        if (!obj.hasOwnProperty(prop)) {\n            // @ts-ignore\n            obj[prop] = proto[prop];\n        }\n    }\n    return obj;\n}\n//# sourceMappingURL=polyfill.js.map","import * as tslib_1 from \"tslib\";\nimport { setPrototypeOf } from './polyfill';\n/** An error emitted by Sentry SDKs and related utilities. */\nvar SentryError = /** @class */ (function (_super) {\n    tslib_1.__extends(SentryError, _super);\n    function SentryError(message) {\n        var _newTarget = this.constructor;\n        var _this = _super.call(this, message) || this;\n        _this.message = message;\n        // tslint:disable:no-unsafe-any\n        _this.name = _newTarget.prototype.constructor.name;\n        setPrototypeOf(_this, _newTarget.prototype);\n        return _this;\n    }\n    return SentryError;\n}(Error));\nexport { SentryError };\n//# sourceMappingURL=error.js.map","import * as tslib_1 from \"tslib\";\nimport { SentryError } from './error';\n/** Regular expression used to parse a Dsn. */\nvar DSN_REGEX = /^(?:(\\w+):)\\/\\/(?:(\\w+)(?::(\\w+))?@)([\\w\\.-]+)(?::(\\d+))?\\/(.+)/;\n/** Error message */\nvar ERROR_MESSAGE = 'Invalid Dsn';\n/** The Sentry Dsn, identifying a Sentry instance and project. */\nvar Dsn = /** @class */ (function () {\n    /** Creates a new Dsn component */\n    function Dsn(from) {\n        if (typeof from === 'string') {\n            this._fromString(from);\n        }\n        else {\n            this._fromComponents(from);\n        }\n        this._validate();\n    }\n    /**\n     * Renders the string representation of this Dsn.\n     *\n     * By default, this will render the public representation without the password\n     * component. To get the deprecated private _representation, set `withPassword`\n     * to true.\n     *\n     * @param withPassword When set to true, the password will be included.\n     */\n    Dsn.prototype.toString = function (withPassword) {\n        if (withPassword === void 0) { withPassword = false; }\n        // tslint:disable-next-line:no-this-assignment\n        var _a = this, host = _a.host, path = _a.path, pass = _a.pass, port = _a.port, projectId = _a.projectId, protocol = _a.protocol, user = _a.user;\n        return (protocol + \"://\" + user + (withPassword && pass ? \":\" + pass : '') +\n            (\"@\" + host + (port ? \":\" + port : '') + \"/\" + (path ? path + \"/\" : path) + projectId));\n    };\n    /** Parses a string into this Dsn. */\n    Dsn.prototype._fromString = function (str) {\n        var match = DSN_REGEX.exec(str);\n        if (!match) {\n            throw new SentryError(ERROR_MESSAGE);\n        }\n        var _a = tslib_1.__read(match.slice(1), 6), protocol = _a[0], user = _a[1], _b = _a[2], pass = _b === void 0 ? '' : _b, host = _a[3], _c = _a[4], port = _c === void 0 ? '' : _c, lastPath = _a[5];\n        var path = '';\n        var projectId = lastPath;\n        var split = projectId.split('/');\n        if (split.length > 1) {\n            path = split.slice(0, -1).join('/');\n            projectId = split.pop();\n        }\n        this._fromComponents({ host: host, pass: pass, path: path, projectId: projectId, port: port, protocol: protocol, user: user });\n    };\n    /** Maps Dsn components into this instance. */\n    Dsn.prototype._fromComponents = function (components) {\n        this.protocol = components.protocol;\n        this.user = components.user;\n        this.pass = components.pass || '';\n        this.host = components.host;\n        this.port = components.port || '';\n        this.path = components.path || '';\n        this.projectId = components.projectId;\n    };\n    /** Validates this Dsn and throws on error. */\n    Dsn.prototype._validate = function () {\n        var _this = this;\n        ['protocol', 'user', 'host', 'projectId'].forEach(function (component) {\n            if (!_this[component]) {\n                throw new SentryError(ERROR_MESSAGE);\n            }\n        });\n        if (this.protocol !== 'http' && this.protocol !== 'https') {\n            throw new SentryError(ERROR_MESSAGE);\n        }\n        if (this.port && isNaN(parseInt(this.port, 10))) {\n            throw new SentryError(ERROR_MESSAGE);\n        }\n    };\n    return Dsn;\n}());\nexport { Dsn };\n//# sourceMappingURL=dsn.js.map","// tslint:disable:no-unsafe-any\n/**\n * Memo class used for decycle json objects. Uses WeakSet if available otherwise array.\n */\nvar Memo = /** @class */ (function () {\n    function Memo() {\n        // tslint:disable-next-line\n        this._hasWeakSet = typeof WeakSet === 'function';\n        this._inner = this._hasWeakSet ? new WeakSet() : [];\n    }\n    /**\n     * Sets obj to remember.\n     * @param obj Object to remember\n     */\n    Memo.prototype.memoize = function (obj) {\n        if (this._hasWeakSet) {\n            if (this._inner.has(obj)) {\n                return true;\n            }\n            this._inner.add(obj);\n            return false;\n        }\n        // tslint:disable-next-line:prefer-for-of\n        for (var i = 0; i < this._inner.length; i++) {\n            var value = this._inner[i];\n            if (value === obj) {\n                return true;\n            }\n        }\n        this._inner.push(obj);\n        return false;\n    };\n    /**\n     * Removes object from internal storage.\n     * @param obj Object to forget\n     */\n    Memo.prototype.unmemoize = function (obj) {\n        if (this._hasWeakSet) {\n            this._inner.delete(obj);\n        }\n        else {\n            for (var i = 0; i < this._inner.length; i++) {\n                if (this._inner[i] === obj) {\n                    this._inner.splice(i, 1);\n                    break;\n                }\n            }\n        }\n    };\n    return Memo;\n}());\nexport { Memo };\n//# sourceMappingURL=memo.js.map","import * as tslib_1 from \"tslib\";\nimport { isElement, isError, isEvent, isInstanceOf, isPlainObject, isPrimitive, isSyntheticEvent } from './is';\nimport { Memo } from './memo';\nimport { getFunctionName, htmlTreeAsString } from './misc';\nimport { truncate } from './string';\n/**\n * Wrap a given object method with a higher-order function\n *\n * @param source An object that contains a method to be wrapped.\n * @param name A name of method to be wrapped.\n * @param replacement A function that should be used to wrap a given method.\n * @returns void\n */\nexport function fill(source, name, replacement) {\n    if (!(name in source)) {\n        return;\n    }\n    var original = source[name];\n    var wrapped = replacement(original);\n    // Make sure it's a function first, as we need to attach an empty prototype for `defineProperties` to work\n    // otherwise it'll throw \"TypeError: Object.defineProperties called on non-object\"\n    // tslint:disable-next-line:strict-type-predicates\n    if (typeof wrapped === 'function') {\n        try {\n            wrapped.prototype = wrapped.prototype || {};\n            Object.defineProperties(wrapped, {\n                __sentry_original__: {\n                    enumerable: false,\n                    value: original,\n                },\n            });\n        }\n        catch (_Oo) {\n            // This can throw if multiple fill happens on a global object like XMLHttpRequest\n            // Fixes https://github.com/getsentry/sentry-javascript/issues/2043\n        }\n    }\n    source[name] = wrapped;\n}\n/**\n * Encodes given object into url-friendly format\n *\n * @param object An object that contains serializable values\n * @returns string Encoded\n */\nexport function urlEncode(object) {\n    return Object.keys(object)\n        .map(\n    // tslint:disable-next-line:no-unsafe-any\n    function (key) { return encodeURIComponent(key) + \"=\" + encodeURIComponent(object[key]); })\n        .join('&');\n}\n/**\n * Transforms any object into an object literal with all it's attributes\n * attached to it.\n *\n * @param value Initial source that we have to transform in order to be usable by the serializer\n */\nfunction getWalkSource(value) {\n    if (isError(value)) {\n        var error = value;\n        var err = {\n            message: error.message,\n            name: error.name,\n            stack: error.stack,\n        };\n        for (var i in error) {\n            if (Object.prototype.hasOwnProperty.call(error, i)) {\n                err[i] = error[i];\n            }\n        }\n        return err;\n    }\n    if (isEvent(value)) {\n        var event_1 = value;\n        var source = {};\n        source.type = event_1.type;\n        // Accessing event.target can throw (see getsentry/raven-js#838, #768)\n        try {\n            source.target = isElement(event_1.target)\n                ? htmlTreeAsString(event_1.target)\n                : Object.prototype.toString.call(event_1.target);\n        }\n        catch (_oO) {\n            source.target = '<unknown>';\n        }\n        try {\n            source.currentTarget = isElement(event_1.currentTarget)\n                ? htmlTreeAsString(event_1.currentTarget)\n                : Object.prototype.toString.call(event_1.currentTarget);\n        }\n        catch (_oO) {\n            source.currentTarget = '<unknown>';\n        }\n        // tslint:disable-next-line:strict-type-predicates\n        if (typeof CustomEvent !== 'undefined' && isInstanceOf(value, CustomEvent)) {\n            source.detail = event_1.detail;\n        }\n        for (var i in event_1) {\n            if (Object.prototype.hasOwnProperty.call(event_1, i)) {\n                source[i] = event_1;\n            }\n        }\n        return source;\n    }\n    return value;\n}\n/** Calculates bytes size of input string */\nfunction utf8Length(value) {\n    // tslint:disable-next-line:no-bitwise\n    return ~-encodeURI(value).split(/%..|./).length;\n}\n/** Calculates bytes size of input object */\nfunction jsonSize(value) {\n    return utf8Length(JSON.stringify(value));\n}\n/** JSDoc */\nexport function normalizeToSize(object, \n// Default Node.js REPL depth\ndepth, \n// 100kB, as 200kB is max payload size, so half sounds reasonable\nmaxSize) {\n    if (depth === void 0) { depth = 3; }\n    if (maxSize === void 0) { maxSize = 100 * 1024; }\n    var serialized = normalize(object, depth);\n    if (jsonSize(serialized) > maxSize) {\n        return normalizeToSize(object, depth - 1, maxSize);\n    }\n    return serialized;\n}\n/** Transforms any input value into a string form, either primitive value or a type of the input */\nfunction serializeValue(value) {\n    var type = Object.prototype.toString.call(value);\n    // Node.js REPL notation\n    if (typeof value === 'string') {\n        return value;\n    }\n    if (type === '[object Object]') {\n        return '[Object]';\n    }\n    if (type === '[object Array]') {\n        return '[Array]';\n    }\n    var normalized = normalizeValue(value);\n    return isPrimitive(normalized) ? normalized : type;\n}\n/**\n * normalizeValue()\n *\n * Takes unserializable input and make it serializable friendly\n *\n * - translates undefined/NaN values to \"[undefined]\"/\"[NaN]\" respectively,\n * - serializes Error objects\n * - filter global objects\n */\n// tslint:disable-next-line:cyclomatic-complexity\nfunction normalizeValue(value, key) {\n    if (key === 'domain' && value && typeof value === 'object' && value._events) {\n        return '[Domain]';\n    }\n    if (key === 'domainEmitter') {\n        return '[DomainEmitter]';\n    }\n    if (typeof global !== 'undefined' && value === global) {\n        return '[Global]';\n    }\n    if (typeof window !== 'undefined' && value === window) {\n        return '[Window]';\n    }\n    if (typeof document !== 'undefined' && value === document) {\n        return '[Document]';\n    }\n    // React's SyntheticEvent thingy\n    if (isSyntheticEvent(value)) {\n        return '[SyntheticEvent]';\n    }\n    // tslint:disable-next-line:no-tautology-expression\n    if (typeof value === 'number' && value !== value) {\n        return '[NaN]';\n    }\n    if (value === void 0) {\n        return '[undefined]';\n    }\n    if (typeof value === 'function') {\n        return \"[Function: \" + getFunctionName(value) + \"]\";\n    }\n    return value;\n}\n/**\n * Walks an object to perform a normalization on it\n *\n * @param key of object that's walked in current iteration\n * @param value object to be walked\n * @param depth Optional number indicating how deep should walking be performed\n * @param memo Optional Memo class handling decycling\n */\nexport function walk(key, value, depth, memo) {\n    if (depth === void 0) { depth = +Infinity; }\n    if (memo === void 0) { memo = new Memo(); }\n    // If we reach the maximum depth, serialize whatever has left\n    if (depth === 0) {\n        return serializeValue(value);\n    }\n    // If value implements `toJSON` method, call it and return early\n    // tslint:disable:no-unsafe-any\n    if (value !== null && value !== undefined && typeof value.toJSON === 'function') {\n        return value.toJSON();\n    }\n    // tslint:enable:no-unsafe-any\n    // If normalized value is a primitive, there are no branches left to walk, so we can just bail out, as theres no point in going down that branch any further\n    var normalized = normalizeValue(value, key);\n    if (isPrimitive(normalized)) {\n        return normalized;\n    }\n    // Create source that we will use for next itterations, either objectified error object (Error type with extracted keys:value pairs) or the input itself\n    var source = getWalkSource(value);\n    // Create an accumulator that will act as a parent for all future itterations of that branch\n    var acc = Array.isArray(value) ? [] : {};\n    // If we already walked that branch, bail out, as it's circular reference\n    if (memo.memoize(value)) {\n        return '[Circular ~]';\n    }\n    // Walk all keys of the source\n    for (var innerKey in source) {\n        // Avoid iterating over fields in the prototype if they've somehow been exposed to enumeration.\n        if (!Object.prototype.hasOwnProperty.call(source, innerKey)) {\n            continue;\n        }\n        // Recursively walk through all the child nodes\n        acc[innerKey] = walk(innerKey, source[innerKey], depth - 1, memo);\n    }\n    // Once walked through all the branches, remove the parent from memo storage\n    memo.unmemoize(value);\n    // Return accumulated values\n    return acc;\n}\n/**\n * normalize()\n *\n * - Creates a copy to prevent original input mutation\n * - Skip non-enumerablers\n * - Calls `toJSON` if implemented\n * - Removes circular references\n * - Translates non-serializeable values (undefined/NaN/Functions) to serializable format\n * - Translates known global objects/Classes to a string representations\n * - Takes care of Error objects serialization\n * - Optionally limit depth of final output\n */\nexport function normalize(input, depth) {\n    try {\n        // tslint:disable-next-line:no-unsafe-any\n        return JSON.parse(JSON.stringify(input, function (key, value) { return walk(key, value, depth); }));\n    }\n    catch (_oO) {\n        return '**non-serializable**';\n    }\n}\n/**\n * Given any captured exception, extract its keys and create a sorted\n * and truncated list that will be used inside the event message.\n * eg. `Non-error exception captured with keys: foo, bar, baz`\n */\nexport function extractExceptionKeysForMessage(exception, maxLength) {\n    if (maxLength === void 0) { maxLength = 40; }\n    // tslint:disable:strict-type-predicates\n    var keys = Object.keys(getWalkSource(exception));\n    keys.sort();\n    if (!keys.length) {\n        return '[object has no keys]';\n    }\n    if (keys[0].length >= maxLength) {\n        return truncate(keys[0], maxLength);\n    }\n    for (var includedKeys = keys.length; includedKeys > 0; includedKeys--) {\n        var serialized = keys.slice(0, includedKeys).join(', ');\n        if (serialized.length > maxLength) {\n            continue;\n        }\n        if (includedKeys === keys.length) {\n            return serialized;\n        }\n        return truncate(serialized, maxLength);\n    }\n    return '';\n}\n/**\n * Given any object, return the new object with removed keys that value was `undefined`.\n * Works recursively on objects and arrays.\n */\nexport function dropUndefinedKeys(val) {\n    var e_1, _a;\n    if (isPlainObject(val)) {\n        var obj = val;\n        var rv = {};\n        try {\n            for (var _b = tslib_1.__values(Object.keys(obj)), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var key = _c.value;\n                if (typeof obj[key] !== 'undefined') {\n                    rv[key] = dropUndefinedKeys(obj[key]);\n                }\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n        return rv;\n    }\n    if (Array.isArray(val)) {\n        return val.map(dropUndefinedKeys);\n    }\n    return val;\n}\n//# sourceMappingURL=object.js.map","import { Dsn, urlEncode } from '@sentry/utils';\nvar SENTRY_API_VERSION = '7';\n/** Helper class to provide urls to different Sentry endpoints. */\nvar API = /** @class */ (function () {\n    /** Create a new instance of API */\n    function API(dsn) {\n        this.dsn = dsn;\n        this._dsnObject = new Dsn(dsn);\n    }\n    /** Returns the Dsn object. */\n    API.prototype.getDsn = function () {\n        return this._dsnObject;\n    };\n    /** Returns a string with auth headers in the url to the store endpoint. */\n    API.prototype.getStoreEndpoint = function () {\n        return \"\" + this._getBaseUrl() + this.getStoreEndpointPath();\n    };\n    /** Returns the store endpoint with auth added in url encoded. */\n    API.prototype.getStoreEndpointWithUrlEncodedAuth = function () {\n        var dsn = this._dsnObject;\n        var auth = {\n            sentry_key: dsn.user,\n            sentry_version: SENTRY_API_VERSION,\n        };\n        // Auth is intentionally sent as part of query string (NOT as custom HTTP header)\n        // to avoid preflight CORS requests\n        return this.getStoreEndpoint() + \"?\" + urlEncode(auth);\n    };\n    /** Returns the base path of the url including the port. */\n    API.prototype._getBaseUrl = function () {\n        var dsn = this._dsnObject;\n        var protocol = dsn.protocol ? dsn.protocol + \":\" : '';\n        var port = dsn.port ? \":\" + dsn.port : '';\n        return protocol + \"//\" + dsn.host + port;\n    };\n    /** Returns only the path component for the store endpoint. */\n    API.prototype.getStoreEndpointPath = function () {\n        var dsn = this._dsnObject;\n        return (dsn.path ? \"/\" + dsn.path : '') + \"/api/\" + dsn.projectId + \"/store/\";\n    };\n    /** Returns an object that can be used in request headers. */\n    API.prototype.getRequestHeaders = function (clientName, clientVersion) {\n        var dsn = this._dsnObject;\n        var header = [\"Sentry sentry_version=\" + SENTRY_API_VERSION];\n        header.push(\"sentry_client=\" + clientName + \"/\" + clientVersion);\n        header.push(\"sentry_key=\" + dsn.user);\n        if (dsn.pass) {\n            header.push(\"sentry_secret=\" + dsn.pass);\n        }\n        return {\n            'Content-Type': 'application/json',\n            'X-Sentry-Auth': header.join(', '),\n        };\n    };\n    /** Returns the url to the report dialog endpoint. */\n    API.prototype.getReportDialogEndpoint = function (dialogOptions) {\n        if (dialogOptions === void 0) { dialogOptions = {}; }\n        var dsn = this._dsnObject;\n        var endpoint = \"\" + this._getBaseUrl() + (dsn.path ? \"/\" + dsn.path : '') + \"/api/embed/error-page/\";\n        var encodedOptions = [];\n        encodedOptions.push(\"dsn=\" + dsn.toString());\n        for (var key in dialogOptions) {\n            if (key === 'user') {\n                if (!dialogOptions.user) {\n                    continue;\n                }\n                if (dialogOptions.user.name) {\n                    encodedOptions.push(\"name=\" + encodeURIComponent(dialogOptions.user.name));\n                }\n                if (dialogOptions.user.email) {\n                    encodedOptions.push(\"email=\" + encodeURIComponent(dialogOptions.user.email));\n                }\n            }\n            else {\n                encodedOptions.push(encodeURIComponent(key) + \"=\" + encodeURIComponent(dialogOptions[key]));\n            }\n        }\n        if (encodedOptions.length) {\n            return endpoint + \"?\" + encodedOptions.join('&');\n        }\n        return endpoint;\n    };\n    return API;\n}());\nexport { API };\n//# sourceMappingURL=api.js.map","import * as tslib_1 from \"tslib\";\nimport { addGlobalEventProcessor, getCurrentHub } from '@sentry/hub';\nimport { logger } from '@sentry/utils';\nexport var installedIntegrations = [];\n/** Gets integration to install */\nexport function getIntegrationsToSetup(options) {\n    var defaultIntegrations = (options.defaultIntegrations && tslib_1.__spread(options.defaultIntegrations)) || [];\n    var userIntegrations = options.integrations;\n    var integrations = [];\n    if (Array.isArray(userIntegrations)) {\n        var userIntegrationsNames_1 = userIntegrations.map(function (i) { return i.name; });\n        var pickedIntegrationsNames_1 = [];\n        // Leave only unique default integrations, that were not overridden with provided user integrations\n        defaultIntegrations.forEach(function (defaultIntegration) {\n            if (userIntegrationsNames_1.indexOf(defaultIntegration.name) === -1 &&\n                pickedIntegrationsNames_1.indexOf(defaultIntegration.name) === -1) {\n                integrations.push(defaultIntegration);\n                pickedIntegrationsNames_1.push(defaultIntegration.name);\n            }\n        });\n        // Don't add same user integration twice\n        userIntegrations.forEach(function (userIntegration) {\n            if (pickedIntegrationsNames_1.indexOf(userIntegration.name) === -1) {\n                integrations.push(userIntegration);\n                pickedIntegrationsNames_1.push(userIntegration.name);\n            }\n        });\n    }\n    else if (typeof userIntegrations === 'function') {\n        integrations = userIntegrations(defaultIntegrations);\n        integrations = Array.isArray(integrations) ? integrations : [integrations];\n    }\n    else {\n        integrations = tslib_1.__spread(defaultIntegrations);\n    }\n    // Make sure that if present, `Debug` integration will always run last\n    var integrationsNames = integrations.map(function (i) { return i.name; });\n    var alwaysLastToRun = 'Debug';\n    if (integrationsNames.indexOf(alwaysLastToRun) !== -1) {\n        integrations.push.apply(integrations, tslib_1.__spread(integrations.splice(integrationsNames.indexOf(alwaysLastToRun), 1)));\n    }\n    return integrations;\n}\n/** Setup given integration */\nexport function setupIntegration(integration) {\n    if (installedIntegrations.indexOf(integration.name) !== -1) {\n        return;\n    }\n    integration.setupOnce(addGlobalEventProcessor, getCurrentHub);\n    installedIntegrations.push(integration.name);\n    logger.log(\"Integration installed: \" + integration.name);\n}\n/**\n * Given a list of integration instances this installs them all. When `withDefaults` is set to `true` then all default\n * integrations are added unless they were already provided before.\n * @param integrations array of integration instances\n * @param withDefault should enable default integrations\n */\nexport function setupIntegrations(options) {\n    var integrations = {};\n    getIntegrationsToSetup(options).forEach(function (integration) {\n        integrations[integration.name] = integration;\n        setupIntegration(integration);\n    });\n    return integrations;\n}\n//# sourceMappingURL=integration.js.map","import * as tslib_1 from \"tslib\";\nimport { Dsn, isPrimitive, isThenable, logger, normalize, SyncPromise, truncate, uuid4 } from '@sentry/utils';\nimport { setupIntegrations } from './integration';\n/**\n * Base implementation for all JavaScript SDK clients.\n *\n * Call the constructor with the corresponding backend constructor and options\n * specific to the client subclass. To access these options later, use\n * {@link Client.getOptions}. Also, the Backend instance is available via\n * {@link Client.getBackend}.\n *\n * If a Dsn is specified in the options, it will be parsed and stored. Use\n * {@link Client.getDsn} to retrieve the Dsn at any moment. In case the Dsn is\n * invalid, the constructor will throw a {@link SentryException}. Note that\n * without a valid Dsn, the SDK will not send any events to Sentry.\n *\n * Before sending an event via the backend, it is passed through\n * {@link BaseClient.prepareEvent} to add SDK information and scope data\n * (breadcrumbs and context). To add more custom information, override this\n * method and extend the resulting prepared event.\n *\n * To issue automatically created events (e.g. via instrumentation), use\n * {@link Client.captureEvent}. It will prepare the event and pass it through\n * the callback lifecycle. To issue auto-breadcrumbs, use\n * {@link Client.addBreadcrumb}.\n *\n * @example\n * class NodeClient extends BaseClient<NodeBackend, NodeOptions> {\n *   public constructor(options: NodeOptions) {\n *     super(NodeBackend, options);\n *   }\n *\n *   // ...\n * }\n */\nvar BaseClient = /** @class */ (function () {\n    /**\n     * Initializes this client instance.\n     *\n     * @param backendClass A constructor function to create the backend.\n     * @param options Options for the client.\n     */\n    function BaseClient(backendClass, options) {\n        /** Array of used integrations. */\n        this._integrations = {};\n        /** Is the client still processing a call? */\n        this._processing = false;\n        this._backend = new backendClass(options);\n        this._options = options;\n        if (options.dsn) {\n            this._dsn = new Dsn(options.dsn);\n        }\n        if (this._isEnabled()) {\n            this._integrations = setupIntegrations(this._options);\n        }\n    }\n    /**\n     * @inheritDoc\n     */\n    BaseClient.prototype.captureException = function (exception, hint, scope) {\n        var _this = this;\n        var eventId = hint && hint.event_id;\n        this._processing = true;\n        this._getBackend()\n            .eventFromException(exception, hint)\n            .then(function (event) { return _this._processEvent(event, hint, scope); })\n            .then(function (finalEvent) {\n            // We need to check for finalEvent in case beforeSend returned null\n            eventId = finalEvent && finalEvent.event_id;\n            _this._processing = false;\n        })\n            .then(null, function (reason) {\n            logger.error(reason);\n            _this._processing = false;\n        });\n        return eventId;\n    };\n    /**\n     * @inheritDoc\n     */\n    BaseClient.prototype.captureMessage = function (message, level, hint, scope) {\n        var _this = this;\n        var eventId = hint && hint.event_id;\n        this._processing = true;\n        var promisedEvent = isPrimitive(message)\n            ? this._getBackend().eventFromMessage(\"\" + message, level, hint)\n            : this._getBackend().eventFromException(message, hint);\n        promisedEvent\n            .then(function (event) { return _this._processEvent(event, hint, scope); })\n            .then(function (finalEvent) {\n            // We need to check for finalEvent in case beforeSend returned null\n            eventId = finalEvent && finalEvent.event_id;\n            _this._processing = false;\n        })\n            .then(null, function (reason) {\n            logger.error(reason);\n            _this._processing = false;\n        });\n        return eventId;\n    };\n    /**\n     * @inheritDoc\n     */\n    BaseClient.prototype.captureEvent = function (event, hint, scope) {\n        var _this = this;\n        var eventId = hint && hint.event_id;\n        this._processing = true;\n        this._processEvent(event, hint, scope)\n            .then(function (finalEvent) {\n            // We need to check for finalEvent in case beforeSend returned null\n            eventId = finalEvent && finalEvent.event_id;\n            _this._processing = false;\n        })\n            .then(null, function (reason) {\n            logger.error(reason);\n            _this._processing = false;\n        });\n        return eventId;\n    };\n    /**\n     * @inheritDoc\n     */\n    BaseClient.prototype.getDsn = function () {\n        return this._dsn;\n    };\n    /**\n     * @inheritDoc\n     */\n    BaseClient.prototype.getOptions = function () {\n        return this._options;\n    };\n    /**\n     * @inheritDoc\n     */\n    BaseClient.prototype.flush = function (timeout) {\n        var _this = this;\n        return this._isClientProcessing(timeout).then(function (status) {\n            clearInterval(status.interval);\n            return _this._getBackend()\n                .getTransport()\n                .close(timeout)\n                .then(function (transportFlushed) { return status.ready && transportFlushed; });\n        });\n    };\n    /**\n     * @inheritDoc\n     */\n    BaseClient.prototype.close = function (timeout) {\n        var _this = this;\n        return this.flush(timeout).then(function (result) {\n            _this.getOptions().enabled = false;\n            return result;\n        });\n    };\n    /**\n     * @inheritDoc\n     */\n    BaseClient.prototype.getIntegrations = function () {\n        return this._integrations || {};\n    };\n    /**\n     * @inheritDoc\n     */\n    BaseClient.prototype.getIntegration = function (integration) {\n        try {\n            return this._integrations[integration.id] || null;\n        }\n        catch (_oO) {\n            logger.warn(\"Cannot retrieve integration \" + integration.id + \" from the current Client\");\n            return null;\n        }\n    };\n    /** Waits for the client to be done with processing. */\n    BaseClient.prototype._isClientProcessing = function (timeout) {\n        var _this = this;\n        return new SyncPromise(function (resolve) {\n            var ticked = 0;\n            var tick = 1;\n            var interval = 0;\n            clearInterval(interval);\n            interval = setInterval(function () {\n                if (!_this._processing) {\n                    resolve({\n                        interval: interval,\n                        ready: true,\n                    });\n                }\n                else {\n                    ticked += tick;\n                    if (timeout && ticked >= timeout) {\n                        resolve({\n                            interval: interval,\n                            ready: false,\n                        });\n                    }\n                }\n            }, tick);\n        });\n    };\n    /** Returns the current backend. */\n    BaseClient.prototype._getBackend = function () {\n        return this._backend;\n    };\n    /** Determines whether this SDK is enabled and a valid Dsn is present. */\n    BaseClient.prototype._isEnabled = function () {\n        return this.getOptions().enabled !== false && this._dsn !== undefined;\n    };\n    /**\n     * Adds common information to events.\n     *\n     * The information includes release and environment from `options`,\n     * breadcrumbs and context (extra, tags and user) from the scope.\n     *\n     * Information that is already present in the event is never overwritten. For\n     * nested objects, such as the context, keys are merged.\n     *\n     * @param event The original event.\n     * @param hint May contain additional informartion about the original exception.\n     * @param scope A scope containing event metadata.\n     * @returns A new event with more information.\n     */\n    BaseClient.prototype._prepareEvent = function (event, scope, hint) {\n        var _this = this;\n        var _a = this.getOptions(), environment = _a.environment, release = _a.release, dist = _a.dist, _b = _a.maxValueLength, maxValueLength = _b === void 0 ? 250 : _b, _c = _a.normalizeDepth, normalizeDepth = _c === void 0 ? 3 : _c;\n        var prepared = tslib_1.__assign({}, event);\n        if (prepared.environment === undefined && environment !== undefined) {\n            prepared.environment = environment;\n        }\n        if (prepared.release === undefined && release !== undefined) {\n            prepared.release = release;\n        }\n        if (prepared.dist === undefined && dist !== undefined) {\n            prepared.dist = dist;\n        }\n        if (prepared.message) {\n            prepared.message = truncate(prepared.message, maxValueLength);\n        }\n        var exception = prepared.exception && prepared.exception.values && prepared.exception.values[0];\n        if (exception && exception.value) {\n            exception.value = truncate(exception.value, maxValueLength);\n        }\n        var request = prepared.request;\n        if (request && request.url) {\n            request.url = truncate(request.url, maxValueLength);\n        }\n        if (prepared.event_id === undefined) {\n            prepared.event_id = hint && hint.event_id ? hint.event_id : uuid4();\n        }\n        this._addIntegrations(prepared.sdk);\n        // We prepare the result here with a resolved Event.\n        var result = SyncPromise.resolve(prepared);\n        // This should be the last thing called, since we want that\n        // {@link Hub.addEventProcessor} gets the finished prepared event.\n        if (scope) {\n            // In case we have a hub we reassign it.\n            result = scope.applyToEvent(prepared, hint);\n        }\n        return result.then(function (evt) {\n            // tslint:disable-next-line:strict-type-predicates\n            if (typeof normalizeDepth === 'number' && normalizeDepth > 0) {\n                return _this._normalizeEvent(evt, normalizeDepth);\n            }\n            return evt;\n        });\n    };\n    /**\n     * Applies `normalize` function on necessary `Event` attributes to make them safe for serialization.\n     * Normalized keys:\n     * - `breadcrumbs.data`\n     * - `user`\n     * - `contexts`\n     * - `extra`\n     * @param event Event\n     * @returns Normalized event\n     */\n    BaseClient.prototype._normalizeEvent = function (event, depth) {\n        if (!event) {\n            return null;\n        }\n        // tslint:disable:no-unsafe-any\n        return tslib_1.__assign({}, event, (event.breadcrumbs && {\n            breadcrumbs: event.breadcrumbs.map(function (b) { return (tslib_1.__assign({}, b, (b.data && {\n                data: normalize(b.data, depth),\n            }))); }),\n        }), (event.user && {\n            user: normalize(event.user, depth),\n        }), (event.contexts && {\n            contexts: normalize(event.contexts, depth),\n        }), (event.extra && {\n            extra: normalize(event.extra, depth),\n        }));\n    };\n    /**\n     * This function adds all used integrations to the SDK info in the event.\n     * @param sdkInfo The sdkInfo of the event that will be filled with all integrations.\n     */\n    BaseClient.prototype._addIntegrations = function (sdkInfo) {\n        var integrationsArray = Object.keys(this._integrations);\n        if (sdkInfo && integrationsArray.length > 0) {\n            sdkInfo.integrations = integrationsArray;\n        }\n    };\n    /**\n     * Processes an event (either error or message) and sends it to Sentry.\n     *\n     * This also adds breadcrumbs and context information to the event. However,\n     * platform specific meta data (such as the User's IP address) must be added\n     * by the SDK implementor.\n     *\n     *\n     * @param event The event to send to Sentry.\n     * @param hint May contain additional informartion about the original exception.\n     * @param scope A scope containing event metadata.\n     * @returns A SyncPromise that resolves with the event or rejects in case event was/will not be send.\n     */\n    BaseClient.prototype._processEvent = function (event, hint, scope) {\n        var _this = this;\n        var _a = this.getOptions(), beforeSend = _a.beforeSend, sampleRate = _a.sampleRate;\n        if (!this._isEnabled()) {\n            return SyncPromise.reject('SDK not enabled, will not send event.');\n        }\n        // 1.0 === 100% events are sent\n        // 0.0 === 0% events are sent\n        if (typeof sampleRate === 'number' && Math.random() > sampleRate) {\n            return SyncPromise.reject('This event has been sampled, will not send event.');\n        }\n        return new SyncPromise(function (resolve, reject) {\n            _this._prepareEvent(event, scope, hint)\n                .then(function (prepared) {\n                if (prepared === null) {\n                    reject('An event processor returned null, will not send event.');\n                    return;\n                }\n                var finalEvent = prepared;\n                var isInternalException = hint && hint.data && hint.data.__sentry__ === true;\n                if (isInternalException || !beforeSend) {\n                    _this._getBackend().sendEvent(finalEvent);\n                    resolve(finalEvent);\n                    return;\n                }\n                var beforeSendResult = beforeSend(prepared, hint);\n                // tslint:disable-next-line:strict-type-predicates\n                if (typeof beforeSendResult === 'undefined') {\n                    logger.error('`beforeSend` method has to return `null` or a valid event.');\n                }\n                else if (isThenable(beforeSendResult)) {\n                    _this._handleAsyncBeforeSend(beforeSendResult, resolve, reject);\n                }\n                else {\n                    finalEvent = beforeSendResult;\n                    if (finalEvent === null) {\n                        logger.log('`beforeSend` returned `null`, will not send event.');\n                        resolve(null);\n                        return;\n                    }\n                    // From here on we are really async\n                    _this._getBackend().sendEvent(finalEvent);\n                    resolve(finalEvent);\n                }\n            })\n                .then(null, function (reason) {\n                _this.captureException(reason, {\n                    data: {\n                        __sentry__: true,\n                    },\n                    originalException: reason,\n                });\n                reject(\"Event processing pipeline threw an error, original event will not be sent. Details have been sent as a new event.\\nReason: \" + reason);\n            });\n        });\n    };\n    /**\n     * Resolves before send Promise and calls resolve/reject on parent SyncPromise.\n     */\n    BaseClient.prototype._handleAsyncBeforeSend = function (beforeSend, resolve, reject) {\n        var _this = this;\n        beforeSend\n            .then(function (processedEvent) {\n            if (processedEvent === null) {\n                reject('`beforeSend` returned `null`, will not send event.');\n                return;\n            }\n            // From here on we are really async\n            _this._getBackend().sendEvent(processedEvent);\n            resolve(processedEvent);\n        })\n            .then(null, function (e) {\n            reject(\"beforeSend rejected with \" + e);\n        });\n    };\n    return BaseClient;\n}());\nexport { BaseClient };\n//# sourceMappingURL=baseclient.js.map","import { Status } from '@sentry/types';\nimport { SyncPromise } from '@sentry/utils';\n/** Noop transport */\nvar NoopTransport = /** @class */ (function () {\n    function NoopTransport() {\n    }\n    /**\n     * @inheritDoc\n     */\n    NoopTransport.prototype.sendEvent = function (_) {\n        return SyncPromise.resolve({\n            reason: \"NoopTransport: Event has been skipped because no Dsn is configured.\",\n            status: Status.Skipped,\n        });\n    };\n    /**\n     * @inheritDoc\n     */\n    NoopTransport.prototype.close = function (_) {\n        return SyncPromise.resolve(true);\n    };\n    return NoopTransport;\n}());\nexport { NoopTransport };\n//# sourceMappingURL=noop.js.map","import { logger, SentryError } from '@sentry/utils';\nimport { NoopTransport } from './transports/noop';\n/**\n * This is the base implemention of a Backend.\n * @hidden\n */\nvar BaseBackend = /** @class */ (function () {\n    /** Creates a new backend instance. */\n    function BaseBackend(options) {\n        this._options = options;\n        if (!this._options.dsn) {\n            logger.warn('No DSN provided, backend will not do anything.');\n        }\n        this._transport = this._setupTransport();\n    }\n    /**\n     * Sets up the transport so it can be used later to send requests.\n     */\n    BaseBackend.prototype._setupTransport = function () {\n        return new NoopTransport();\n    };\n    /**\n     * @inheritDoc\n     */\n    BaseBackend.prototype.eventFromException = function (_exception, _hint) {\n        throw new SentryError('Backend has to implement `eventFromException` method');\n    };\n    /**\n     * @inheritDoc\n     */\n    BaseBackend.prototype.eventFromMessage = function (_message, _level, _hint) {\n        throw new SentryError('Backend has to implement `eventFromMessage` method');\n    };\n    /**\n     * @inheritDoc\n     */\n    BaseBackend.prototype.sendEvent = function (event) {\n        this._transport.sendEvent(event).then(null, function (reason) {\n            logger.error(\"Error while sending event: \" + reason);\n        });\n    };\n    /**\n     * @inheritDoc\n     */\n    BaseBackend.prototype.getTransport = function () {\n        return this._transport;\n    };\n    return BaseBackend;\n}());\nexport { BaseBackend };\n//# sourceMappingURL=basebackend.js.map","import { logger } from './logger';\nimport { getGlobalObject } from './misc';\n/**\n * Tells whether current environment supports ErrorEvent objects\n * {@link supportsErrorEvent}.\n *\n * @returns Answer to the given question.\n */\nexport function supportsErrorEvent() {\n    try {\n        // tslint:disable:no-unused-expression\n        new ErrorEvent('');\n        return true;\n    }\n    catch (e) {\n        return false;\n    }\n}\n/**\n * Tells whether current environment supports DOMError objects\n * {@link supportsDOMError}.\n *\n * @returns Answer to the given question.\n */\nexport function supportsDOMError() {\n    try {\n        // It really needs 1 argument, not 0.\n        // Chrome: VM89:1 Uncaught TypeError: Failed to construct 'DOMError':\n        // 1 argument required, but only 0 present.\n        // @ts-ignore\n        // tslint:disable:no-unused-expression\n        new DOMError('');\n        return true;\n    }\n    catch (e) {\n        return false;\n    }\n}\n/**\n * Tells whether current environment supports DOMException objects\n * {@link supportsDOMException}.\n *\n * @returns Answer to the given question.\n */\nexport function supportsDOMException() {\n    try {\n        // tslint:disable:no-unused-expression\n        new DOMException('');\n        return true;\n    }\n    catch (e) {\n        return false;\n    }\n}\n/**\n * Tells whether current environment supports Fetch API\n * {@link supportsFetch}.\n *\n * @returns Answer to the given question.\n */\nexport function supportsFetch() {\n    if (!('fetch' in getGlobalObject())) {\n        return false;\n    }\n    try {\n        // tslint:disable-next-line:no-unused-expression\n        new Headers();\n        // tslint:disable-next-line:no-unused-expression\n        new Request('');\n        // tslint:disable-next-line:no-unused-expression\n        new Response();\n        return true;\n    }\n    catch (e) {\n        return false;\n    }\n}\n/**\n * isNativeFetch checks if the given function is a native implementation of fetch()\n */\nfunction isNativeFetch(func) {\n    return func && /^function fetch\\(\\)\\s+\\{\\s+\\[native code\\]\\s+\\}$/.test(func.toString());\n}\n/**\n * Tells whether current environment supports Fetch API natively\n * {@link supportsNativeFetch}.\n *\n * @returns true if `window.fetch` is natively implemented, false otherwise\n */\nexport function supportsNativeFetch() {\n    if (!supportsFetch()) {\n        return false;\n    }\n    var global = getGlobalObject();\n    // Fast path to avoid DOM I/O\n    // tslint:disable-next-line:no-unbound-method\n    if (isNativeFetch(global.fetch)) {\n        return true;\n    }\n    // window.fetch is implemented, but is polyfilled or already wrapped (e.g: by a chrome extension)\n    // so create a \"pure\" iframe to see if that has native fetch\n    var result = false;\n    var doc = global.document;\n    if (doc) {\n        try {\n            var sandbox = doc.createElement('iframe');\n            sandbox.hidden = true;\n            doc.head.appendChild(sandbox);\n            if (sandbox.contentWindow && sandbox.contentWindow.fetch) {\n                // tslint:disable-next-line:no-unbound-method\n                result = isNativeFetch(sandbox.contentWindow.fetch);\n            }\n            doc.head.removeChild(sandbox);\n        }\n        catch (err) {\n            logger.warn('Could not create sandbox iframe for pure fetch check, bailing to window.fetch: ', err);\n        }\n    }\n    return result;\n}\n/**\n * Tells whether current environment supports ReportingObserver API\n * {@link supportsReportingObserver}.\n *\n * @returns Answer to the given question.\n */\nexport function supportsReportingObserver() {\n    // tslint:disable-next-line: no-unsafe-any\n    return 'ReportingObserver' in getGlobalObject();\n}\n/**\n * Tells whether current environment supports Referrer Policy API\n * {@link supportsReferrerPolicy}.\n *\n * @returns Answer to the given question.\n */\nexport function supportsReferrerPolicy() {\n    // Despite all stars in the sky saying that Edge supports old draft syntax, aka 'never', 'always', 'origin' and 'default\n    // https://caniuse.com/#feat=referrer-policy\n    // It doesn't. And it throw exception instead of ignoring this parameter...\n    // REF: https://github.com/getsentry/raven-js/issues/1233\n    if (!supportsFetch()) {\n        return false;\n    }\n    try {\n        // tslint:disable:no-unused-expression\n        new Request('_', {\n            referrerPolicy: 'origin',\n        });\n        return true;\n    }\n    catch (e) {\n        return false;\n    }\n}\n/**\n * Tells whether current environment supports History API\n * {@link supportsHistory}.\n *\n * @returns Answer to the given question.\n */\nexport function supportsHistory() {\n    // NOTE: in Chrome App environment, touching history.pushState, *even inside\n    //       a try/catch block*, will cause Chrome to output an error to console.error\n    // borrowed from: https://github.com/angular/angular.js/pull/13945/files\n    var global = getGlobalObject();\n    var chrome = global.chrome;\n    // tslint:disable-next-line:no-unsafe-any\n    var isChromePackagedApp = chrome && chrome.app && chrome.app.runtime;\n    var hasHistoryApi = 'history' in global && !!global.history.pushState && !!global.history.replaceState;\n    return !isChromePackagedApp && hasHistoryApi;\n}\n//# sourceMappingURL=supports.js.map","// tslint:disable:object-literal-sort-keys\nimport * as tslib_1 from \"tslib\";\n// global reference to slice\nvar UNKNOWN_FUNCTION = '?';\n// Chromium based browsers: Chrome, Brave, new Opera, new Edge\nvar chrome = /^\\s*at (?:(.*?) ?\\()?((?:file|https?|blob|chrome-extension|address|native|eval|webpack|<anonymous>|[-a-z]+:|.*bundle|\\/).*?)(?::(\\d+))?(?::(\\d+))?\\)?\\s*$/i;\n// gecko regex: `(?:bundle|\\d+\\.js)`: `bundle` is for react native, `\\d+\\.js` also but specifically for ram bundles because it\n// generates filenames without a prefix like `file://` the filenames in the stacktrace are just 42.js\n// We need this specific case for now because we want no other regex to match.\nvar gecko = /^\\s*(.*?)(?:\\((.*?)\\))?(?:^|@)?((?:file|https?|blob|chrome|webpack|resource|moz-extension).*?:\\/.*?|\\[native code\\]|[^@]*(?:bundle|\\d+\\.js))(?::(\\d+))?(?::(\\d+))?\\s*$/i;\nvar winjs = /^\\s*at (?:((?:\\[object object\\])?.+) )?\\(?((?:file|ms-appx|https?|webpack|blob):.*?):(\\d+)(?::(\\d+))?\\)?\\s*$/i;\nvar geckoEval = /(\\S+) line (\\d+)(?: > eval line \\d+)* > eval/i;\nvar chromeEval = /\\((\\S*)(?::(\\d+))(?::(\\d+))\\)/;\n/** JSDoc */\nexport function computeStackTrace(ex) {\n    // tslint:disable:no-unsafe-any\n    var stack = null;\n    var popSize = ex && ex.framesToPop;\n    try {\n        // This must be tried first because Opera 10 *destroys*\n        // its stacktrace property if you try to access the stack\n        // property first!!\n        stack = computeStackTraceFromStacktraceProp(ex);\n        if (stack) {\n            return popFrames(stack, popSize);\n        }\n    }\n    catch (e) {\n        // no-empty\n    }\n    try {\n        stack = computeStackTraceFromStackProp(ex);\n        if (stack) {\n            return popFrames(stack, popSize);\n        }\n    }\n    catch (e) {\n        // no-empty\n    }\n    return {\n        message: extractMessage(ex),\n        name: ex && ex.name,\n        stack: [],\n        failed: true,\n    };\n}\n/** JSDoc */\n// tslint:disable-next-line:cyclomatic-complexity\nfunction computeStackTraceFromStackProp(ex) {\n    // tslint:disable:no-conditional-assignment\n    if (!ex || !ex.stack) {\n        return null;\n    }\n    var stack = [];\n    var lines = ex.stack.split('\\n');\n    var isEval;\n    var submatch;\n    var parts;\n    var element;\n    for (var i = 0; i < lines.length; ++i) {\n        if ((parts = chrome.exec(lines[i]))) {\n            var isNative = parts[2] && parts[2].indexOf('native') === 0; // start of line\n            isEval = parts[2] && parts[2].indexOf('eval') === 0; // start of line\n            if (isEval && (submatch = chromeEval.exec(parts[2]))) {\n                // throw out eval line/column and use top-most line/column number\n                parts[2] = submatch[1]; // url\n                parts[3] = submatch[2]; // line\n                parts[4] = submatch[3]; // column\n            }\n            element = {\n                // working with the regexp above is super painful. it is quite a hack, but just stripping the `address at `\n                // prefix here seems like the quickest solution for now.\n                url: parts[2] && parts[2].indexOf('address at ') === 0 ? parts[2].substr('address at '.length) : parts[2],\n                func: parts[1] || UNKNOWN_FUNCTION,\n                args: isNative ? [parts[2]] : [],\n                line: parts[3] ? +parts[3] : null,\n                column: parts[4] ? +parts[4] : null,\n            };\n        }\n        else if ((parts = winjs.exec(lines[i]))) {\n            element = {\n                url: parts[2],\n                func: parts[1] || UNKNOWN_FUNCTION,\n                args: [],\n                line: +parts[3],\n                column: parts[4] ? +parts[4] : null,\n            };\n        }\n        else if ((parts = gecko.exec(lines[i]))) {\n            isEval = parts[3] && parts[3].indexOf(' > eval') > -1;\n            if (isEval && (submatch = geckoEval.exec(parts[3]))) {\n                // throw out eval line/column and use top-most line number\n                parts[1] = parts[1] || \"eval\";\n                parts[3] = submatch[1];\n                parts[4] = submatch[2];\n                parts[5] = ''; // no column when eval\n            }\n            else if (i === 0 && !parts[5] && ex.columnNumber !== void 0) {\n                // FireFox uses this awesome columnNumber property for its top frame\n                // Also note, Firefox's column number is 0-based and everything else expects 1-based,\n                // so adding 1\n                // NOTE: this hack doesn't work if top-most frame is eval\n                stack[0].column = ex.columnNumber + 1;\n            }\n            element = {\n                url: parts[3],\n                func: parts[1] || UNKNOWN_FUNCTION,\n                args: parts[2] ? parts[2].split(',') : [],\n                line: parts[4] ? +parts[4] : null,\n                column: parts[5] ? +parts[5] : null,\n            };\n        }\n        else {\n            continue;\n        }\n        if (!element.func && element.line) {\n            element.func = UNKNOWN_FUNCTION;\n        }\n        stack.push(element);\n    }\n    if (!stack.length) {\n        return null;\n    }\n    return {\n        message: extractMessage(ex),\n        name: ex.name,\n        stack: stack,\n    };\n}\n/** JSDoc */\nfunction computeStackTraceFromStacktraceProp(ex) {\n    if (!ex || !ex.stacktrace) {\n        return null;\n    }\n    // Access and store the stacktrace property before doing ANYTHING\n    // else to it because Opera is not very good at providing it\n    // reliably in other circumstances.\n    var stacktrace = ex.stacktrace;\n    var opera10Regex = / line (\\d+).*script (?:in )?(\\S+)(?:: in function (\\S+))?$/i;\n    var opera11Regex = / line (\\d+), column (\\d+)\\s*(?:in (?:<anonymous function: ([^>]+)>|([^\\)]+))\\((.*)\\))? in (.*):\\s*$/i;\n    var lines = stacktrace.split('\\n');\n    var stack = [];\n    var parts;\n    for (var line = 0; line < lines.length; line += 2) {\n        // tslint:disable:no-conditional-assignment\n        var element = null;\n        if ((parts = opera10Regex.exec(lines[line]))) {\n            element = {\n                url: parts[2],\n                func: parts[3],\n                args: [],\n                line: +parts[1],\n                column: null,\n            };\n        }\n        else if ((parts = opera11Regex.exec(lines[line]))) {\n            element = {\n                url: parts[6],\n                func: parts[3] || parts[4],\n                args: parts[5] ? parts[5].split(',') : [],\n                line: +parts[1],\n                column: +parts[2],\n            };\n        }\n        if (element) {\n            if (!element.func && element.line) {\n                element.func = UNKNOWN_FUNCTION;\n            }\n            stack.push(element);\n        }\n    }\n    if (!stack.length) {\n        return null;\n    }\n    return {\n        message: extractMessage(ex),\n        name: ex.name,\n        stack: stack,\n    };\n}\n/** Remove N number of frames from the stack */\nfunction popFrames(stacktrace, popSize) {\n    try {\n        return tslib_1.__assign({}, stacktrace, { stack: stacktrace.stack.slice(popSize) });\n    }\n    catch (e) {\n        return stacktrace;\n    }\n}\n/**\n * There are cases where stacktrace.message is an Event object\n * https://github.com/getsentry/sentry-javascript/issues/1949\n * In this specific case we try to extract stacktrace.message.error.message\n */\nfunction extractMessage(ex) {\n    var message = ex && ex.message;\n    if (!message) {\n        return 'No error message';\n    }\n    if (message.error && typeof message.error.message === 'string') {\n        return message.error.message;\n    }\n    return message;\n}\n//# sourceMappingURL=tracekit.js.map","import { extractExceptionKeysForMessage, isEvent, normalizeToSize } from '@sentry/utils';\nimport { computeStackTrace } from './tracekit';\nvar STACKTRACE_LIMIT = 50;\n/**\n * This function creates an exception from an TraceKitStackTrace\n * @param stacktrace TraceKitStackTrace that will be converted to an exception\n * @hidden\n */\nexport function exceptionFromStacktrace(stacktrace) {\n    var frames = prepareFramesForEvent(stacktrace.stack);\n    var exception = {\n        type: stacktrace.name,\n        value: stacktrace.message,\n    };\n    if (frames && frames.length) {\n        exception.stacktrace = { frames: frames };\n    }\n    // tslint:disable-next-line:strict-type-predicates\n    if (exception.type === undefined && exception.value === '') {\n        exception.value = 'Unrecoverable error caught';\n    }\n    return exception;\n}\n/**\n * @hidden\n */\nexport function eventFromPlainObject(exception, syntheticException, rejection) {\n    var event = {\n        exception: {\n            values: [\n                {\n                    type: isEvent(exception) ? exception.constructor.name : rejection ? 'UnhandledRejection' : 'Error',\n                    value: \"Non-Error \" + (rejection ? 'promise rejection' : 'exception') + \" captured with keys: \" + extractExceptionKeysForMessage(exception),\n                },\n            ],\n        },\n        extra: {\n            __serialized__: normalizeToSize(exception),\n        },\n    };\n    if (syntheticException) {\n        var stacktrace = computeStackTrace(syntheticException);\n        var frames_1 = prepareFramesForEvent(stacktrace.stack);\n        event.stacktrace = {\n            frames: frames_1,\n        };\n    }\n    return event;\n}\n/**\n * @hidden\n */\nexport function eventFromStacktrace(stacktrace) {\n    var exception = exceptionFromStacktrace(stacktrace);\n    return {\n        exception: {\n            values: [exception],\n        },\n    };\n}\n/**\n * @hidden\n */\nexport function prepareFramesForEvent(stack) {\n    if (!stack || !stack.length) {\n        return [];\n    }\n    var localStack = stack;\n    var firstFrameFunction = localStack[0].func || '';\n    var lastFrameFunction = localStack[localStack.length - 1].func || '';\n    // If stack starts with one of our API calls, remove it (starts, meaning it's the top of the stack - aka last call)\n    if (firstFrameFunction.indexOf('captureMessage') !== -1 || firstFrameFunction.indexOf('captureException') !== -1) {\n        localStack = localStack.slice(1);\n    }\n    // If stack ends with one of our internal API calls, remove it (ends, meaning it's the bottom of the stack - aka top-most call)\n    if (lastFrameFunction.indexOf('sentryWrapped') !== -1) {\n        localStack = localStack.slice(0, -1);\n    }\n    // The frame where the crash happened, should be the last entry in the array\n    return localStack\n        .map(function (frame) { return ({\n        colno: frame.column === null ? undefined : frame.column,\n        filename: frame.url || localStack[0].url,\n        function: frame.func || '?',\n        in_app: true,\n        lineno: frame.line === null ? undefined : frame.line,\n    }); })\n        .slice(0, STACKTRACE_LIMIT)\n        .reverse();\n}\n//# sourceMappingURL=parsers.js.map","import { addExceptionMechanism, addExceptionTypeValue, isDOMError, isDOMException, isError, isErrorEvent, isEvent, isPlainObject, } from '@sentry/utils';\nimport { eventFromPlainObject, eventFromStacktrace, prepareFramesForEvent } from './parsers';\nimport { computeStackTrace } from './tracekit';\n/** JSDoc */\nexport function eventFromUnknownInput(exception, syntheticException, options) {\n    if (options === void 0) { options = {}; }\n    var event;\n    if (isErrorEvent(exception) && exception.error) {\n        // If it is an ErrorEvent with `error` property, extract it to get actual Error\n        var errorEvent = exception;\n        exception = errorEvent.error; // tslint:disable-line:no-parameter-reassignment\n        event = eventFromStacktrace(computeStackTrace(exception));\n        return event;\n    }\n    if (isDOMError(exception) || isDOMException(exception)) {\n        // If it is a DOMError or DOMException (which are legacy APIs, but still supported in some browsers)\n        // then we just extract the name and message, as they don't provide anything else\n        // https://developer.mozilla.org/en-US/docs/Web/API/DOMError\n        // https://developer.mozilla.org/en-US/docs/Web/API/DOMException\n        var domException = exception;\n        var name_1 = domException.name || (isDOMError(domException) ? 'DOMError' : 'DOMException');\n        var message = domException.message ? name_1 + \": \" + domException.message : name_1;\n        event = eventFromString(message, syntheticException, options);\n        addExceptionTypeValue(event, message);\n        return event;\n    }\n    if (isError(exception)) {\n        // we have a real Error object, do nothing\n        event = eventFromStacktrace(computeStackTrace(exception));\n        return event;\n    }\n    if (isPlainObject(exception) || isEvent(exception)) {\n        // If it is plain Object or Event, serialize it manually and extract options\n        // This will allow us to group events based on top-level keys\n        // which is much better than creating new group when any key/value change\n        var objectException = exception;\n        event = eventFromPlainObject(objectException, syntheticException, options.rejection);\n        addExceptionMechanism(event, {\n            synthetic: true,\n        });\n        return event;\n    }\n    // If none of previous checks were valid, then it means that it's not:\n    // - an instance of DOMError\n    // - an instance of DOMException\n    // - an instance of Event\n    // - an instance of Error\n    // - a valid ErrorEvent (one with an error property)\n    // - a plain Object\n    //\n    // So bail out and capture it as a simple message:\n    event = eventFromString(exception, syntheticException, options);\n    addExceptionTypeValue(event, \"\" + exception, undefined);\n    addExceptionMechanism(event, {\n        synthetic: true,\n    });\n    return event;\n}\n// this._options.attachStacktrace\n/** JSDoc */\nexport function eventFromString(input, syntheticException, options) {\n    if (options === void 0) { options = {}; }\n    var event = {\n        message: input,\n    };\n    if (options.attachStacktrace && syntheticException) {\n        var stacktrace = computeStackTrace(syntheticException);\n        var frames_1 = prepareFramesForEvent(stacktrace.stack);\n        event.stacktrace = {\n            frames: frames_1,\n        };\n    }\n    return event;\n}\n//# sourceMappingURL=eventbuilder.js.map","import { SentryError } from './error';\nimport { SyncPromise } from './syncpromise';\n/** A simple queue that holds promises. */\nvar PromiseBuffer = /** @class */ (function () {\n    function PromiseBuffer(_limit) {\n        this._limit = _limit;\n        /** Internal set of queued Promises */\n        this._buffer = [];\n    }\n    /**\n     * Says if the buffer is ready to take more requests\n     */\n    PromiseBuffer.prototype.isReady = function () {\n        return this._limit === undefined || this.length() < this._limit;\n    };\n    /**\n     * Add a promise to the queue.\n     *\n     * @param task Can be any PromiseLike<T>\n     * @returns The original promise.\n     */\n    PromiseBuffer.prototype.add = function (task) {\n        var _this = this;\n        if (!this.isReady()) {\n            return SyncPromise.reject(new SentryError('Not adding Promise due to buffer limit reached.'));\n        }\n        if (this._buffer.indexOf(task) === -1) {\n            this._buffer.push(task);\n        }\n        task\n            .then(function () { return _this.remove(task); })\n            .then(null, function () {\n            return _this.remove(task).then(null, function () {\n                // We have to add this catch here otherwise we have an unhandledPromiseRejection\n                // because it's a new Promise chain.\n            });\n        });\n        return task;\n    };\n    /**\n     * Remove a promise to the queue.\n     *\n     * @param task Can be any PromiseLike<T>\n     * @returns Removed promise.\n     */\n    PromiseBuffer.prototype.remove = function (task) {\n        var removedTask = this._buffer.splice(this._buffer.indexOf(task), 1)[0];\n        return removedTask;\n    };\n    /**\n     * This function returns the number of unresolved promises in the queue.\n     */\n    PromiseBuffer.prototype.length = function () {\n        return this._buffer.length;\n    };\n    /**\n     * This will drain the whole queue, returns true if queue is empty or drained.\n     * If timeout is provided and the queue takes longer to drain, the promise still resolves but with false.\n     *\n     * @param timeout Number in ms to wait until it resolves with false.\n     */\n    PromiseBuffer.prototype.drain = function (timeout) {\n        var _this = this;\n        return new SyncPromise(function (resolve) {\n            var capturedSetTimeout = setTimeout(function () {\n                if (timeout && timeout > 0) {\n                    resolve(false);\n                }\n            }, timeout);\n            SyncPromise.all(_this._buffer)\n                .then(function () {\n                clearTimeout(capturedSetTimeout);\n                resolve(true);\n            })\n                .then(null, function () {\n                resolve(true);\n            });\n        });\n    };\n    return PromiseBuffer;\n}());\nexport { PromiseBuffer };\n//# sourceMappingURL=promisebuffer.js.map","var originalFunctionToString;\n/** Patch toString calls to return proper name for wrapped functions */\nvar FunctionToString = /** @class */ (function () {\n    function FunctionToString() {\n        /**\n         * @inheritDoc\n         */\n        this.name = FunctionToString.id;\n    }\n    /**\n     * @inheritDoc\n     */\n    FunctionToString.prototype.setupOnce = function () {\n        originalFunctionToString = Function.prototype.toString;\n        Function.prototype.toString = function () {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            var context = this.__sentry_original__ || this;\n            // tslint:disable-next-line:no-unsafe-any\n            return originalFunctionToString.apply(context, args);\n        };\n    };\n    /**\n     * @inheritDoc\n     */\n    FunctionToString.id = 'FunctionToString';\n    return FunctionToString;\n}());\nexport { FunctionToString };\n//# sourceMappingURL=functiontostring.js.map","import { API } from '@sentry/core';\nimport { PromiseBuffer, SentryError } from '@sentry/utils';\n/** Base Transport class implementation */\nvar BaseTransport = /** @class */ (function () {\n    function BaseTransport(options) {\n        this.options = options;\n        /** A simple buffer holding all requests. */\n        this._buffer = new PromiseBuffer(30);\n        this.url = new API(this.options.dsn).getStoreEndpointWithUrlEncodedAuth();\n    }\n    /**\n     * @inheritDoc\n     */\n    BaseTransport.prototype.sendEvent = function (_) {\n        throw new SentryError('Transport Class has to implement `sendEvent` method');\n    };\n    /**\n     * @inheritDoc\n     */\n    BaseTransport.prototype.close = function (timeout) {\n        return this._buffer.drain(timeout);\n    };\n    return BaseTransport;\n}());\nexport { BaseTransport };\n//# sourceMappingURL=base.js.map","import * as tslib_1 from \"tslib\";\nimport { Status } from '@sentry/types';\nimport { getGlobalObject, logger, parseRetryAfterHeader, supportsReferrerPolicy, SyncPromise } from '@sentry/utils';\nimport { BaseTransport } from './base';\nvar global = getGlobalObject();\n/** `fetch` based transport */\nvar FetchTransport = /** @class */ (function (_super) {\n    tslib_1.__extends(FetchTransport, _super);\n    function FetchTransport() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        /** Locks transport after receiving 429 response */\n        _this._disabledUntil = new Date(Date.now());\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n    FetchTransport.prototype.sendEvent = function (event) {\n        var _this = this;\n        if (new Date(Date.now()) < this._disabledUntil) {\n            return Promise.reject({\n                event: event,\n                reason: \"Transport locked till \" + this._disabledUntil + \" due to too many requests.\",\n                status: 429,\n            });\n        }\n        var defaultOptions = {\n            body: JSON.stringify(event),\n            method: 'POST',\n            // Despite all stars in the sky saying that Edge supports old draft syntax, aka 'never', 'always', 'origin' and 'default\n            // https://caniuse.com/#feat=referrer-policy\n            // It doesn't. And it throw exception instead of ignoring this parameter...\n            // REF: https://github.com/getsentry/raven-js/issues/1233\n            referrerPolicy: (supportsReferrerPolicy() ? 'origin' : ''),\n        };\n        if (this.options.headers !== undefined) {\n            defaultOptions.headers = this.options.headers;\n        }\n        return this._buffer.add(new SyncPromise(function (resolve, reject) {\n            global\n                .fetch(_this.url, defaultOptions)\n                .then(function (response) {\n                var status = Status.fromHttpCode(response.status);\n                if (status === Status.Success) {\n                    resolve({ status: status });\n                    return;\n                }\n                if (status === Status.RateLimit) {\n                    var now = Date.now();\n                    _this._disabledUntil = new Date(now + parseRetryAfterHeader(now, response.headers.get('Retry-After')));\n                    logger.warn(\"Too many requests, backing off till: \" + _this._disabledUntil);\n                }\n                reject(response);\n            })\n                .catch(reject);\n        }));\n    };\n    return FetchTransport;\n}(BaseTransport));\nexport { FetchTransport };\n//# sourceMappingURL=fetch.js.map","import * as tslib_1 from \"tslib\";\nimport { Status } from '@sentry/types';\nimport { logger, parseRetryAfterHeader, SyncPromise } from '@sentry/utils';\nimport { BaseTransport } from './base';\n/** `XHR` based transport */\nvar XHRTransport = /** @class */ (function (_super) {\n    tslib_1.__extends(XHRTransport, _super);\n    function XHRTransport() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        /** Locks transport after receiving 429 response */\n        _this._disabledUntil = new Date(Date.now());\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n    XHRTransport.prototype.sendEvent = function (event) {\n        var _this = this;\n        if (new Date(Date.now()) < this._disabledUntil) {\n            return Promise.reject({\n                event: event,\n                reason: \"Transport locked till \" + this._disabledUntil + \" due to too many requests.\",\n                status: 429,\n            });\n        }\n        return this._buffer.add(new SyncPromise(function (resolve, reject) {\n            var request = new XMLHttpRequest();\n            request.onreadystatechange = function () {\n                if (request.readyState !== 4) {\n                    return;\n                }\n                var status = Status.fromHttpCode(request.status);\n                if (status === Status.Success) {\n                    resolve({ status: status });\n                    return;\n                }\n                if (status === Status.RateLimit) {\n                    var now = Date.now();\n                    _this._disabledUntil = new Date(now + parseRetryAfterHeader(now, request.getResponseHeader('Retry-After')));\n                    logger.warn(\"Too many requests, backing off till: \" + _this._disabledUntil);\n                }\n                reject(request);\n            };\n            request.open('POST', _this.url);\n            for (var header in _this.options.headers) {\n                if (_this.options.headers.hasOwnProperty(header)) {\n                    request.setRequestHeader(header, _this.options.headers[header]);\n                }\n            }\n            request.send(JSON.stringify(event));\n        }));\n    };\n    return XHRTransport;\n}(BaseTransport));\nexport { XHRTransport };\n//# sourceMappingURL=xhr.js.map","import * as tslib_1 from \"tslib\";\nimport { BaseBackend } from '@sentry/core';\nimport { Severity } from '@sentry/types';\nimport { addExceptionMechanism, supportsFetch, SyncPromise } from '@sentry/utils';\nimport { eventFromString, eventFromUnknownInput } from './eventbuilder';\nimport { FetchTransport, XHRTransport } from './transports';\n/**\n * The Sentry Browser SDK Backend.\n * @hidden\n */\nvar BrowserBackend = /** @class */ (function (_super) {\n    tslib_1.__extends(BrowserBackend, _super);\n    function BrowserBackend() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @inheritDoc\n     */\n    BrowserBackend.prototype._setupTransport = function () {\n        if (!this._options.dsn) {\n            // We return the noop transport here in case there is no Dsn.\n            return _super.prototype._setupTransport.call(this);\n        }\n        var transportOptions = tslib_1.__assign({}, this._options.transportOptions, { dsn: this._options.dsn });\n        if (this._options.transport) {\n            return new this._options.transport(transportOptions);\n        }\n        if (supportsFetch()) {\n            return new FetchTransport(transportOptions);\n        }\n        return new XHRTransport(transportOptions);\n    };\n    /**\n     * @inheritDoc\n     */\n    BrowserBackend.prototype.eventFromException = function (exception, hint) {\n        var syntheticException = (hint && hint.syntheticException) || undefined;\n        var event = eventFromUnknownInput(exception, syntheticException, {\n            attachStacktrace: this._options.attachStacktrace,\n        });\n        addExceptionMechanism(event, {\n            handled: true,\n            type: 'generic',\n        });\n        event.level = Severity.Error;\n        if (hint && hint.event_id) {\n            event.event_id = hint.event_id;\n        }\n        return SyncPromise.resolve(event);\n    };\n    /**\n     * @inheritDoc\n     */\n    BrowserBackend.prototype.eventFromMessage = function (message, level, hint) {\n        if (level === void 0) { level = Severity.Info; }\n        var syntheticException = (hint && hint.syntheticException) || undefined;\n        var event = eventFromString(message, syntheticException, {\n            attachStacktrace: this._options.attachStacktrace,\n        });\n        event.level = level;\n        if (hint && hint.event_id) {\n            event.event_id = hint.event_id;\n        }\n        return SyncPromise.resolve(event);\n    };\n    return BrowserBackend;\n}(BaseBackend));\nexport { BrowserBackend };\n//# sourceMappingURL=backend.js.map","export var SDK_NAME = 'sentry.javascript.browser';\nexport var SDK_VERSION = '5.13.2';\n//# sourceMappingURL=version.js.map","import * as tslib_1 from \"tslib\";\nimport { API, BaseClient } from '@sentry/core';\nimport { getGlobalObject, logger } from '@sentry/utils';\nimport { BrowserBackend } from './backend';\nimport { SDK_NAME, SDK_VERSION } from './version';\n/**\n * The Sentry Browser SDK Client.\n *\n * @see BrowserOptions for documentation on configuration options.\n * @see SentryClient for usage documentation.\n */\nvar BrowserClient = /** @class */ (function (_super) {\n    tslib_1.__extends(BrowserClient, _super);\n    /**\n     * Creates a new Browser SDK instance.\n     *\n     * @param options Configuration options for this SDK.\n     */\n    function BrowserClient(options) {\n        if (options === void 0) { options = {}; }\n        return _super.call(this, BrowserBackend, options) || this;\n    }\n    /**\n     * @inheritDoc\n     */\n    BrowserClient.prototype._prepareEvent = function (event, scope, hint) {\n        event.platform = event.platform || 'javascript';\n        event.sdk = tslib_1.__assign({}, event.sdk, { name: SDK_NAME, packages: tslib_1.__spread(((event.sdk && event.sdk.packages) || []), [\n                {\n                    name: 'npm:@sentry/browser',\n                    version: SDK_VERSION,\n                },\n            ]), version: SDK_VERSION });\n        return _super.prototype._prepareEvent.call(this, event, scope, hint);\n    };\n    /**\n     * Show a report dialog to the user to send feedback to a specific event.\n     *\n     * @param options Set individual options for the dialog\n     */\n    BrowserClient.prototype.showReportDialog = function (options) {\n        if (options === void 0) { options = {}; }\n        // doesn't work without a document (React Native)\n        var document = getGlobalObject().document;\n        if (!document) {\n            return;\n        }\n        if (!this._isEnabled()) {\n            logger.error('Trying to call showReportDialog with Sentry Client is disabled');\n            return;\n        }\n        var dsn = options.dsn || this.getDsn();\n        if (!options.eventId) {\n            logger.error('Missing `eventId` option in showReportDialog call');\n            return;\n        }\n        if (!dsn) {\n            logger.error('Missing `Dsn` option in showReportDialog call');\n            return;\n        }\n        var script = document.createElement('script');\n        script.async = true;\n        script.src = new API(dsn).getReportDialogEndpoint(options);\n        if (options.onLoad) {\n            script.onload = options.onLoad;\n        }\n        (document.head || document.body).appendChild(script);\n    };\n    return BrowserClient;\n}(BaseClient));\nexport { BrowserClient };\n//# sourceMappingURL=client.js.map","import * as tslib_1 from \"tslib\";\nimport { addGlobalEventProcessor, getCurrentHub } from '@sentry/hub';\nimport { getEventDescription, isMatchingPattern, logger } from '@sentry/utils';\n// \"Script error.\" is hard coded into browsers for errors that it can't read.\n// this is the result of a script being pulled in from an external domain and CORS.\nvar DEFAULT_IGNORE_ERRORS = [/^Script error\\.?$/, /^Javascript error: Script error\\.? on line 0$/];\n/** Inbound filters configurable by the user */\nvar InboundFilters = /** @class */ (function () {\n    function InboundFilters(_options) {\n        if (_options === void 0) { _options = {}; }\n        this._options = _options;\n        /**\n         * @inheritDoc\n         */\n        this.name = InboundFilters.id;\n    }\n    /**\n     * @inheritDoc\n     */\n    InboundFilters.prototype.setupOnce = function () {\n        addGlobalEventProcessor(function (event) {\n            var hub = getCurrentHub();\n            if (!hub) {\n                return event;\n            }\n            var self = hub.getIntegration(InboundFilters);\n            if (self) {\n                var client = hub.getClient();\n                var clientOptions = client ? client.getOptions() : {};\n                var options = self._mergeOptions(clientOptions);\n                if (self._shouldDropEvent(event, options)) {\n                    return null;\n                }\n            }\n            return event;\n        });\n    };\n    /** JSDoc */\n    InboundFilters.prototype._shouldDropEvent = function (event, options) {\n        if (this._isSentryError(event, options)) {\n            logger.warn(\"Event dropped due to being internal Sentry Error.\\nEvent: \" + getEventDescription(event));\n            return true;\n        }\n        if (this._isIgnoredError(event, options)) {\n            logger.warn(\"Event dropped due to being matched by `ignoreErrors` option.\\nEvent: \" + getEventDescription(event));\n            return true;\n        }\n        if (this._isBlacklistedUrl(event, options)) {\n            logger.warn(\"Event dropped due to being matched by `blacklistUrls` option.\\nEvent: \" + getEventDescription(event) + \".\\nUrl: \" + this._getEventFilterUrl(event));\n            return true;\n        }\n        if (!this._isWhitelistedUrl(event, options)) {\n            logger.warn(\"Event dropped due to not being matched by `whitelistUrls` option.\\nEvent: \" + getEventDescription(event) + \".\\nUrl: \" + this._getEventFilterUrl(event));\n            return true;\n        }\n        return false;\n    };\n    /** JSDoc */\n    InboundFilters.prototype._isSentryError = function (event, options) {\n        if (options === void 0) { options = {}; }\n        if (!options.ignoreInternal) {\n            return false;\n        }\n        try {\n            return ((event &&\n                event.exception &&\n                event.exception.values &&\n                event.exception.values[0] &&\n                event.exception.values[0].type === 'SentryError') ||\n                false);\n        }\n        catch (_oO) {\n            return false;\n        }\n    };\n    /** JSDoc */\n    InboundFilters.prototype._isIgnoredError = function (event, options) {\n        if (options === void 0) { options = {}; }\n        if (!options.ignoreErrors || !options.ignoreErrors.length) {\n            return false;\n        }\n        return this._getPossibleEventMessages(event).some(function (message) {\n            // Not sure why TypeScript complains here...\n            return options.ignoreErrors.some(function (pattern) { return isMatchingPattern(message, pattern); });\n        });\n    };\n    /** JSDoc */\n    InboundFilters.prototype._isBlacklistedUrl = function (event, options) {\n        if (options === void 0) { options = {}; }\n        // TODO: Use Glob instead?\n        if (!options.blacklistUrls || !options.blacklistUrls.length) {\n            return false;\n        }\n        var url = this._getEventFilterUrl(event);\n        return !url ? false : options.blacklistUrls.some(function (pattern) { return isMatchingPattern(url, pattern); });\n    };\n    /** JSDoc */\n    InboundFilters.prototype._isWhitelistedUrl = function (event, options) {\n        if (options === void 0) { options = {}; }\n        // TODO: Use Glob instead?\n        if (!options.whitelistUrls || !options.whitelistUrls.length) {\n            return true;\n        }\n        var url = this._getEventFilterUrl(event);\n        return !url ? true : options.whitelistUrls.some(function (pattern) { return isMatchingPattern(url, pattern); });\n    };\n    /** JSDoc */\n    InboundFilters.prototype._mergeOptions = function (clientOptions) {\n        if (clientOptions === void 0) { clientOptions = {}; }\n        return {\n            blacklistUrls: tslib_1.__spread((this._options.blacklistUrls || []), (clientOptions.blacklistUrls || [])),\n            ignoreErrors: tslib_1.__spread((this._options.ignoreErrors || []), (clientOptions.ignoreErrors || []), DEFAULT_IGNORE_ERRORS),\n            ignoreInternal: typeof this._options.ignoreInternal !== 'undefined' ? this._options.ignoreInternal : true,\n            whitelistUrls: tslib_1.__spread((this._options.whitelistUrls || []), (clientOptions.whitelistUrls || [])),\n        };\n    };\n    /** JSDoc */\n    InboundFilters.prototype._getPossibleEventMessages = function (event) {\n        if (event.message) {\n            return [event.message];\n        }\n        if (event.exception) {\n            try {\n                var _a = (event.exception.values && event.exception.values[0]) || {}, _b = _a.type, type = _b === void 0 ? '' : _b, _c = _a.value, value = _c === void 0 ? '' : _c;\n                return [\"\" + value, type + \": \" + value];\n            }\n            catch (oO) {\n                logger.error(\"Cannot extract message for event \" + getEventDescription(event));\n                return [];\n            }\n        }\n        return [];\n    };\n    /** JSDoc */\n    InboundFilters.prototype._getEventFilterUrl = function (event) {\n        try {\n            if (event.stacktrace) {\n                var frames_1 = event.stacktrace.frames;\n                return (frames_1 && frames_1[frames_1.length - 1].filename) || null;\n            }\n            if (event.exception) {\n                var frames_2 = event.exception.values && event.exception.values[0].stacktrace && event.exception.values[0].stacktrace.frames;\n                return (frames_2 && frames_2[frames_2.length - 1].filename) || null;\n            }\n            return null;\n        }\n        catch (oO) {\n            logger.error(\"Cannot extract url for event \" + getEventDescription(event));\n            return null;\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    InboundFilters.id = 'InboundFilters';\n    return InboundFilters;\n}());\nexport { InboundFilters };\n//# sourceMappingURL=inboundfilters.js.map","import * as tslib_1 from \"tslib\";\nimport { captureException, withScope } from '@sentry/core';\nimport { addExceptionMechanism, addExceptionTypeValue } from '@sentry/utils';\nvar ignoreOnError = 0;\n/**\n * @hidden\n */\nexport function shouldIgnoreOnError() {\n    return ignoreOnError > 0;\n}\n/**\n * @hidden\n */\nexport function ignoreNextOnError() {\n    // onerror should trigger before setTimeout\n    ignoreOnError += 1;\n    setTimeout(function () {\n        ignoreOnError -= 1;\n    });\n}\n/**\n * Instruments the given function and sends an event to Sentry every time the\n * function throws an exception.\n *\n * @param fn A function to wrap.\n * @returns The wrapped function.\n * @hidden\n */\nexport function wrap(fn, options, before) {\n    if (options === void 0) { options = {}; }\n    // tslint:disable-next-line:strict-type-predicates\n    if (typeof fn !== 'function') {\n        return fn;\n    }\n    try {\n        // We don't wanna wrap it twice\n        if (fn.__sentry__) {\n            return fn;\n        }\n        // If this has already been wrapped in the past, return that wrapped function\n        if (fn.__sentry_wrapped__) {\n            return fn.__sentry_wrapped__;\n        }\n    }\n    catch (e) {\n        // Just accessing custom props in some Selenium environments\n        // can cause a \"Permission denied\" exception (see raven-js#495).\n        // Bail on wrapping and return the function as-is (defers to window.onerror).\n        return fn;\n    }\n    var sentryWrapped = function () {\n        var args = Array.prototype.slice.call(arguments);\n        // tslint:disable:no-unsafe-any\n        try {\n            // tslint:disable-next-line:strict-type-predicates\n            if (before && typeof before === 'function') {\n                before.apply(this, arguments);\n            }\n            var wrappedArguments = args.map(function (arg) { return wrap(arg, options); });\n            if (fn.handleEvent) {\n                // Attempt to invoke user-land function\n                // NOTE: If you are a Sentry user, and you are seeing this stack frame, it\n                //       means the sentry.javascript SDK caught an error invoking your application code. This\n                //       is expected behavior and NOT indicative of a bug with sentry.javascript.\n                return fn.handleEvent.apply(this, wrappedArguments);\n            }\n            // Attempt to invoke user-land function\n            // NOTE: If you are a Sentry user, and you are seeing this stack frame, it\n            //       means the sentry.javascript SDK caught an error invoking your application code. This\n            //       is expected behavior and NOT indicative of a bug with sentry.javascript.\n            return fn.apply(this, wrappedArguments);\n            // tslint:enable:no-unsafe-any\n        }\n        catch (ex) {\n            ignoreNextOnError();\n            withScope(function (scope) {\n                scope.addEventProcessor(function (event) {\n                    var processedEvent = tslib_1.__assign({}, event);\n                    if (options.mechanism) {\n                        addExceptionTypeValue(processedEvent, undefined, undefined);\n                        addExceptionMechanism(processedEvent, options.mechanism);\n                    }\n                    processedEvent.extra = tslib_1.__assign({}, processedEvent.extra, { arguments: args });\n                    return processedEvent;\n                });\n                captureException(ex);\n            });\n            throw ex;\n        }\n    };\n    // Accessing some objects may throw\n    // ref: https://github.com/getsentry/sentry-javascript/issues/1168\n    try {\n        for (var property in fn) {\n            if (Object.prototype.hasOwnProperty.call(fn, property)) {\n                sentryWrapped[property] = fn[property];\n            }\n        }\n    }\n    catch (_oO) { } // tslint:disable-line:no-empty\n    fn.prototype = fn.prototype || {};\n    sentryWrapped.prototype = fn.prototype;\n    Object.defineProperty(fn, '__sentry_wrapped__', {\n        enumerable: false,\n        value: sentryWrapped,\n    });\n    // Signal that this function has been wrapped/filled already\n    // for both debugging and to prevent it to being wrapped/filled twice\n    Object.defineProperties(sentryWrapped, {\n        __sentry__: {\n            enumerable: false,\n            value: true,\n        },\n        __sentry_original__: {\n            enumerable: false,\n            value: fn,\n        },\n    });\n    // Restore original function name (not all browsers allow that)\n    try {\n        var descriptor = Object.getOwnPropertyDescriptor(sentryWrapped, 'name');\n        if (descriptor.configurable) {\n            Object.defineProperty(sentryWrapped, 'name', {\n                get: function () {\n                    return fn.name;\n                },\n            });\n        }\n    }\n    catch (_oO) {\n        /*no-empty*/\n    }\n    return sentryWrapped;\n}\n//# sourceMappingURL=helpers.js.map","import { fill, getFunctionName, getGlobalObject } from '@sentry/utils';\nimport { wrap } from '../helpers';\n/** Wrap timer functions and event targets to catch errors and provide better meta data */\nvar TryCatch = /** @class */ (function () {\n    function TryCatch() {\n        /** JSDoc */\n        this._ignoreOnError = 0;\n        /**\n         * @inheritDoc\n         */\n        this.name = TryCatch.id;\n    }\n    /** JSDoc */\n    TryCatch.prototype._wrapTimeFunction = function (original) {\n        return function () {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            var originalCallback = args[0];\n            args[0] = wrap(originalCallback, {\n                mechanism: {\n                    data: { function: getFunctionName(original) },\n                    handled: true,\n                    type: 'instrument',\n                },\n            });\n            return original.apply(this, args);\n        };\n    };\n    /** JSDoc */\n    TryCatch.prototype._wrapRAF = function (original) {\n        return function (callback) {\n            return original(wrap(callback, {\n                mechanism: {\n                    data: {\n                        function: 'requestAnimationFrame',\n                        handler: getFunctionName(original),\n                    },\n                    handled: true,\n                    type: 'instrument',\n                },\n            }));\n        };\n    };\n    /** JSDoc */\n    TryCatch.prototype._wrapEventTarget = function (target) {\n        var global = getGlobalObject();\n        var proto = global[target] && global[target].prototype;\n        if (!proto || !proto.hasOwnProperty || !proto.hasOwnProperty('addEventListener')) {\n            return;\n        }\n        fill(proto, 'addEventListener', function (original) {\n            return function (eventName, fn, options) {\n                try {\n                    // tslint:disable-next-line:no-unbound-method strict-type-predicates\n                    if (typeof fn.handleEvent === 'function') {\n                        fn.handleEvent = wrap(fn.handleEvent.bind(fn), {\n                            mechanism: {\n                                data: {\n                                    function: 'handleEvent',\n                                    handler: getFunctionName(fn),\n                                    target: target,\n                                },\n                                handled: true,\n                                type: 'instrument',\n                            },\n                        });\n                    }\n                }\n                catch (err) {\n                    // can sometimes get 'Permission denied to access property \"handle Event'\n                }\n                return original.call(this, eventName, wrap(fn, {\n                    mechanism: {\n                        data: {\n                            function: 'addEventListener',\n                            handler: getFunctionName(fn),\n                            target: target,\n                        },\n                        handled: true,\n                        type: 'instrument',\n                    },\n                }), options);\n            };\n        });\n        fill(proto, 'removeEventListener', function (original) {\n            return function (eventName, fn, options) {\n                var callback = fn;\n                try {\n                    callback = callback && (callback.__sentry_wrapped__ || callback);\n                }\n                catch (e) {\n                    // ignore, accessing __sentry_wrapped__ will throw in some Selenium environments\n                }\n                return original.call(this, eventName, callback, options);\n            };\n        });\n    };\n    /** JSDoc */\n    TryCatch.prototype._wrapXHR = function (originalSend) {\n        return function () {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            var xhr = this; // tslint:disable-line:no-this-assignment\n            var xmlHttpRequestProps = ['onload', 'onerror', 'onprogress', 'onreadystatechange'];\n            xmlHttpRequestProps.forEach(function (prop) {\n                if (prop in xhr && typeof xhr[prop] === 'function') {\n                    fill(xhr, prop, function (original) {\n                        var wrapOptions = {\n                            mechanism: {\n                                data: {\n                                    function: prop,\n                                    handler: getFunctionName(original),\n                                },\n                                handled: true,\n                                type: 'instrument',\n                            },\n                        };\n                        // If Instrument integration has been called before TryCatch, get the name of original function\n                        if (original.__sentry_original__) {\n                            wrapOptions.mechanism.data.handler = getFunctionName(original.__sentry_original__);\n                        }\n                        // Otherwise wrap directly\n                        return wrap(original, wrapOptions);\n                    });\n                }\n            });\n            return originalSend.apply(this, args);\n        };\n    };\n    /**\n     * Wrap timer functions and event targets to catch errors\n     * and provide better metadata.\n     */\n    TryCatch.prototype.setupOnce = function () {\n        this._ignoreOnError = this._ignoreOnError;\n        var global = getGlobalObject();\n        fill(global, 'setTimeout', this._wrapTimeFunction.bind(this));\n        fill(global, 'setInterval', this._wrapTimeFunction.bind(this));\n        fill(global, 'requestAnimationFrame', this._wrapRAF.bind(this));\n        if ('XMLHttpRequest' in global) {\n            fill(XMLHttpRequest.prototype, 'send', this._wrapXHR.bind(this));\n        }\n        [\n            'EventTarget',\n            'Window',\n            'Node',\n            'ApplicationCache',\n            'AudioTrackList',\n            'ChannelMergerNode',\n            'CryptoOperation',\n            'EventSource',\n            'FileReader',\n            'HTMLUnknownElement',\n            'IDBDatabase',\n            'IDBRequest',\n            'IDBTransaction',\n            'KeyOperation',\n            'MediaController',\n            'MessagePort',\n            'ModalWindow',\n            'Notification',\n            'SVGElementInstance',\n            'Screen',\n            'TextTrack',\n            'TextTrackCue',\n            'TextTrackList',\n            'WebSocket',\n            'WebSocketWorker',\n            'Worker',\n            'XMLHttpRequest',\n            'XMLHttpRequestEventTarget',\n            'XMLHttpRequestUpload',\n        ].forEach(this._wrapEventTarget.bind(this));\n    };\n    /**\n     * @inheritDoc\n     */\n    TryCatch.id = 'TryCatch';\n    return TryCatch;\n}());\nexport { TryCatch };\n//# sourceMappingURL=trycatch.js.map","/* tslint:disable:only-arrow-functions no-unsafe-any */\nimport * as tslib_1 from \"tslib\";\nimport { isInstanceOf, isString } from './is';\nimport { logger } from './logger';\nimport { getFunctionName, getGlobalObject } from './misc';\nimport { fill } from './object';\nimport { supportsHistory, supportsNativeFetch } from './supports';\nvar global = getGlobalObject();\n/**\n * Instrument native APIs to call handlers that can be used to create breadcrumbs, APM spans etc.\n *  - Console API\n *  - Fetch API\n *  - XHR API\n *  - History API\n *  - DOM API (click/typing)\n */\nvar handlers = {};\nvar instrumented = {};\n/** Instruments given API */\nfunction instrument(type) {\n    if (instrumented[type]) {\n        return;\n    }\n    instrumented[type] = true;\n    switch (type) {\n        case 'console':\n            instrumentConsole();\n            break;\n        case 'dom':\n            instrumentDOM();\n            break;\n        case 'xhr':\n            instrumentXHR();\n            break;\n        case 'fetch':\n            instrumentFetch();\n            break;\n        case 'history':\n            instrumentHistory();\n            break;\n        default:\n            logger.warn('unknown instrumentation type:', type);\n    }\n}\n/**\n * Add handler that will be called when given type of instrumentation triggers.\n * Use at your own risk, this might break without changelog notice, only used internally.\n * @hidden\n */\nexport function addInstrumentationHandler(handler) {\n    // tslint:disable-next-line:strict-type-predicates\n    if (!handler || typeof handler.type !== 'string' || typeof handler.callback !== 'function') {\n        return;\n    }\n    handlers[handler.type] = handlers[handler.type] || [];\n    handlers[handler.type].push(handler.callback);\n    instrument(handler.type);\n}\n/** JSDoc */\nfunction triggerHandlers(type, data) {\n    var e_1, _a;\n    if (!type || !handlers[type]) {\n        return;\n    }\n    try {\n        for (var _b = tslib_1.__values(handlers[type] || []), _c = _b.next(); !_c.done; _c = _b.next()) {\n            var handler = _c.value;\n            try {\n                handler(data);\n            }\n            catch (e) {\n                logger.error(\"Error while triggering instrumentation handler.\\nType: \" + type + \"\\nName: \" + getFunctionName(handler) + \"\\nError: \" + e);\n            }\n        }\n    }\n    catch (e_1_1) { e_1 = { error: e_1_1 }; }\n    finally {\n        try {\n            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n        }\n        finally { if (e_1) throw e_1.error; }\n    }\n}\n/** JSDoc */\nfunction instrumentConsole() {\n    if (!('console' in global)) {\n        return;\n    }\n    ['debug', 'info', 'warn', 'error', 'log', 'assert'].forEach(function (level) {\n        if (!(level in global.console)) {\n            return;\n        }\n        fill(global.console, level, function (originalConsoleLevel) {\n            return function () {\n                var args = [];\n                for (var _i = 0; _i < arguments.length; _i++) {\n                    args[_i] = arguments[_i];\n                }\n                triggerHandlers('console', { args: args, level: level });\n                // this fails for some browsers. :(\n                if (originalConsoleLevel) {\n                    Function.prototype.apply.call(originalConsoleLevel, global.console, args);\n                }\n            };\n        });\n    });\n}\n/** JSDoc */\nfunction instrumentFetch() {\n    if (!supportsNativeFetch()) {\n        return;\n    }\n    fill(global, 'fetch', function (originalFetch) {\n        return function () {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            var commonHandlerData = {\n                args: args,\n                fetchData: {\n                    method: getFetchMethod(args),\n                    url: getFetchUrl(args),\n                },\n                startTimestamp: Date.now(),\n            };\n            triggerHandlers('fetch', tslib_1.__assign({}, commonHandlerData));\n            return originalFetch.apply(global, args).then(function (response) {\n                triggerHandlers('fetch', tslib_1.__assign({}, commonHandlerData, { endTimestamp: Date.now(), response: response }));\n                return response;\n            }, function (error) {\n                triggerHandlers('fetch', tslib_1.__assign({}, commonHandlerData, { endTimestamp: Date.now(), error: error }));\n                throw error;\n            });\n        };\n    });\n}\n/** Extract `method` from fetch call arguments */\nfunction getFetchMethod(fetchArgs) {\n    if (fetchArgs === void 0) { fetchArgs = []; }\n    if ('Request' in global && isInstanceOf(fetchArgs[0], Request) && fetchArgs[0].method) {\n        return String(fetchArgs[0].method).toUpperCase();\n    }\n    if (fetchArgs[1] && fetchArgs[1].method) {\n        return String(fetchArgs[1].method).toUpperCase();\n    }\n    return 'GET';\n}\n/** Extract `url` from fetch call arguments */\nfunction getFetchUrl(fetchArgs) {\n    if (fetchArgs === void 0) { fetchArgs = []; }\n    if (typeof fetchArgs[0] === 'string') {\n        return fetchArgs[0];\n    }\n    if ('Request' in global && isInstanceOf(fetchArgs[0], Request)) {\n        return fetchArgs[0].url;\n    }\n    return String(fetchArgs[0]);\n}\n/** JSDoc */\nfunction instrumentXHR() {\n    if (!('XMLHttpRequest' in global)) {\n        return;\n    }\n    var xhrproto = XMLHttpRequest.prototype;\n    fill(xhrproto, 'open', function (originalOpen) {\n        return function () {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            var url = args[1];\n            this.__sentry_xhr__ = {\n                method: isString(args[0]) ? args[0].toUpperCase() : args[0],\n                url: args[1],\n            };\n            // if Sentry key appears in URL, don't capture it as a request\n            if (isString(url) && this.__sentry_xhr__.method === 'POST' && url.match(/sentry_key/)) {\n                this.__sentry_own_request__ = true;\n            }\n            return originalOpen.apply(this, args);\n        };\n    });\n    fill(xhrproto, 'send', function (originalSend) {\n        return function () {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            var xhr = this; // tslint:disable-line:no-this-assignment\n            var commonHandlerData = {\n                args: args,\n                startTimestamp: Date.now(),\n                xhr: xhr,\n            };\n            triggerHandlers('xhr', tslib_1.__assign({}, commonHandlerData));\n            xhr.addEventListener('readystatechange', function () {\n                if (xhr.readyState === 4) {\n                    try {\n                        // touching statusCode in some platforms throws\n                        // an exception\n                        if (xhr.__sentry_xhr__) {\n                            xhr.__sentry_xhr__.status_code = xhr.status;\n                        }\n                    }\n                    catch (e) {\n                        /* do nothing */\n                    }\n                    triggerHandlers('xhr', tslib_1.__assign({}, commonHandlerData, { endTimestamp: Date.now() }));\n                }\n            });\n            return originalSend.apply(this, args);\n        };\n    });\n}\nvar lastHref;\n/** JSDoc */\nfunction instrumentHistory() {\n    if (!supportsHistory()) {\n        return;\n    }\n    var oldOnPopState = global.onpopstate;\n    global.onpopstate = function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        var to = global.location.href;\n        // keep track of the current URL state, as we always receive only the updated state\n        var from = lastHref;\n        lastHref = to;\n        triggerHandlers('history', {\n            from: from,\n            to: to,\n        });\n        if (oldOnPopState) {\n            return oldOnPopState.apply(this, args);\n        }\n    };\n    /** @hidden */\n    function historyReplacementFunction(originalHistoryFunction) {\n        return function () {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            var url = args.length > 2 ? args[2] : undefined;\n            if (url) {\n                // coerce to string (this is what pushState does)\n                var from = lastHref;\n                var to = String(url);\n                // keep track of the current URL state, as we always receive only the updated state\n                lastHref = to;\n                triggerHandlers('history', {\n                    from: from,\n                    to: to,\n                });\n            }\n            return originalHistoryFunction.apply(this, args);\n        };\n    }\n    fill(global.history, 'pushState', historyReplacementFunction);\n    fill(global.history, 'replaceState', historyReplacementFunction);\n}\n/** JSDoc */\nfunction instrumentDOM() {\n    if (!('document' in global)) {\n        return;\n    }\n    // Capture breadcrumbs from any click that is unhandled / bubbled up all the way\n    // to the document. Do this before we instrument addEventListener.\n    global.document.addEventListener('click', domEventHandler('click', triggerHandlers.bind(null, 'dom')), false);\n    global.document.addEventListener('keypress', keypressEventHandler(triggerHandlers.bind(null, 'dom')), false);\n    // After hooking into document bubbled up click and keypresses events, we also hook into user handled click & keypresses.\n    ['EventTarget', 'Node'].forEach(function (target) {\n        var proto = global[target] && global[target].prototype;\n        if (!proto || !proto.hasOwnProperty || !proto.hasOwnProperty('addEventListener')) {\n            return;\n        }\n        fill(proto, 'addEventListener', function (original) {\n            return function (eventName, fn, options) {\n                if (fn && fn.handleEvent) {\n                    if (eventName === 'click') {\n                        fill(fn, 'handleEvent', function (innerOriginal) {\n                            return function (event) {\n                                domEventHandler('click', triggerHandlers.bind(null, 'dom'))(event);\n                                return innerOriginal.call(this, event);\n                            };\n                        });\n                    }\n                    if (eventName === 'keypress') {\n                        fill(fn, 'handleEvent', function (innerOriginal) {\n                            return function (event) {\n                                keypressEventHandler(triggerHandlers.bind(null, 'dom'))(event);\n                                return innerOriginal.call(this, event);\n                            };\n                        });\n                    }\n                }\n                else {\n                    if (eventName === 'click') {\n                        domEventHandler('click', triggerHandlers.bind(null, 'dom'), true)(this);\n                    }\n                    if (eventName === 'keypress') {\n                        keypressEventHandler(triggerHandlers.bind(null, 'dom'))(this);\n                    }\n                }\n                return original.call(this, eventName, fn, options);\n            };\n        });\n        fill(proto, 'removeEventListener', function (original) {\n            return function (eventName, fn, options) {\n                var callback = fn;\n                try {\n                    callback = callback && (callback.__sentry_wrapped__ || callback);\n                }\n                catch (e) {\n                    // ignore, accessing __sentry_wrapped__ will throw in some Selenium environments\n                }\n                return original.call(this, eventName, callback, options);\n            };\n        });\n    });\n}\nvar debounceDuration = 1000;\nvar debounceTimer = 0;\nvar keypressTimeout;\nvar lastCapturedEvent;\n/**\n * Wraps addEventListener to capture UI breadcrumbs\n * @param name the event name (e.g. \"click\")\n * @param handler function that will be triggered\n * @param debounce decides whether it should wait till another event loop\n * @returns wrapped breadcrumb events handler\n * @hidden\n */\nfunction domEventHandler(name, handler, debounce) {\n    if (debounce === void 0) { debounce = false; }\n    return function (event) {\n        // reset keypress timeout; e.g. triggering a 'click' after\n        // a 'keypress' will reset the keypress debounce so that a new\n        // set of keypresses can be recorded\n        keypressTimeout = undefined;\n        // It's possible this handler might trigger multiple times for the same\n        // event (e.g. event propagation through node ancestors). Ignore if we've\n        // already captured the event.\n        if (!event || lastCapturedEvent === event) {\n            return;\n        }\n        lastCapturedEvent = event;\n        if (debounceTimer) {\n            clearTimeout(debounceTimer);\n        }\n        if (debounce) {\n            debounceTimer = setTimeout(function () {\n                handler({ event: event, name: name });\n            });\n        }\n        else {\n            handler({ event: event, name: name });\n        }\n    };\n}\n/**\n * Wraps addEventListener to capture keypress UI events\n * @param handler function that will be triggered\n * @returns wrapped keypress events handler\n * @hidden\n */\nfunction keypressEventHandler(handler) {\n    // TODO: if somehow user switches keypress target before\n    //       debounce timeout is triggered, we will only capture\n    //       a single breadcrumb from the FIRST target (acceptable?)\n    return function (event) {\n        var target;\n        try {\n            target = event.target;\n        }\n        catch (e) {\n            // just accessing event properties can throw an exception in some rare circumstances\n            // see: https://github.com/getsentry/raven-js/issues/838\n            return;\n        }\n        var tagName = target && target.tagName;\n        // only consider keypress events on actual input elements\n        // this will disregard keypresses targeting body (e.g. tabbing\n        // through elements, hotkeys, etc)\n        if (!tagName || (tagName !== 'INPUT' && tagName !== 'TEXTAREA' && !target.isContentEditable)) {\n            return;\n        }\n        // record first keypress in a series, but ignore subsequent\n        // keypresses until debounce clears\n        if (!keypressTimeout) {\n            domEventHandler('input', handler)(event);\n        }\n        clearTimeout(keypressTimeout);\n        keypressTimeout = setTimeout(function () {\n            keypressTimeout = undefined;\n        }, debounceDuration);\n    };\n}\n//# sourceMappingURL=instrument.js.map","import * as tslib_1 from \"tslib\";\nimport { API, getCurrentHub } from '@sentry/core';\nimport { Severity } from '@sentry/types';\nimport { addInstrumentationHandler, getEventDescription, getGlobalObject, htmlTreeAsString, logger, parseUrl, safeJoin, } from '@sentry/utils';\n/**\n * Default Breadcrumbs instrumentations\n * TODO: Deprecated - with v6, this will be renamed to `Instrument`\n */\nvar Breadcrumbs = /** @class */ (function () {\n    /**\n     * @inheritDoc\n     */\n    function Breadcrumbs(options) {\n        /**\n         * @inheritDoc\n         */\n        this.name = Breadcrumbs.id;\n        this._options = tslib_1.__assign({ console: true, dom: true, fetch: true, history: true, sentry: true, xhr: true }, options);\n    }\n    /**\n     * Creates breadcrumbs from console API calls\n     */\n    Breadcrumbs.prototype._consoleBreadcrumb = function (handlerData) {\n        var breadcrumb = {\n            category: 'console',\n            data: {\n                arguments: handlerData.args,\n                logger: 'console',\n            },\n            level: Severity.fromString(handlerData.level),\n            message: safeJoin(handlerData.args, ' '),\n        };\n        if (handlerData.level === 'assert') {\n            if (handlerData.args[0] === false) {\n                breadcrumb.message = \"Assertion failed: \" + (safeJoin(handlerData.args.slice(1), ' ') || 'console.assert');\n                breadcrumb.data.arguments = handlerData.args.slice(1);\n            }\n            else {\n                // Don't capture a breadcrumb for passed assertions\n                return;\n            }\n        }\n        getCurrentHub().addBreadcrumb(breadcrumb, {\n            input: handlerData.args,\n            level: handlerData.level,\n        });\n    };\n    /**\n     * Creates breadcrumbs from DOM API calls\n     */\n    Breadcrumbs.prototype._domBreadcrumb = function (handlerData) {\n        var target;\n        // Accessing event.target can throw (see getsentry/raven-js#838, #768)\n        try {\n            target = handlerData.event.target\n                ? htmlTreeAsString(handlerData.event.target)\n                : htmlTreeAsString(handlerData.event);\n        }\n        catch (e) {\n            target = '<unknown>';\n        }\n        if (target.length === 0) {\n            return;\n        }\n        getCurrentHub().addBreadcrumb({\n            category: \"ui.\" + handlerData.name,\n            message: target,\n        }, {\n            event: handlerData.event,\n            name: handlerData.name,\n        });\n    };\n    /**\n     * Creates breadcrumbs from XHR API calls\n     */\n    Breadcrumbs.prototype._xhrBreadcrumb = function (handlerData) {\n        if (handlerData.endTimestamp) {\n            // We only capture complete, non-sentry requests\n            if (handlerData.xhr.__sentry_own_request__) {\n                return;\n            }\n            getCurrentHub().addBreadcrumb({\n                category: 'xhr',\n                data: handlerData.xhr.__sentry_xhr__,\n                type: 'http',\n            }, {\n                xhr: handlerData.xhr,\n            });\n            return;\n        }\n        // We only capture issued sentry requests\n        if (handlerData.xhr.__sentry_own_request__) {\n            addSentryBreadcrumb(handlerData.args[0]);\n        }\n    };\n    /**\n     * Creates breadcrumbs from fetch API calls\n     */\n    Breadcrumbs.prototype._fetchBreadcrumb = function (handlerData) {\n        // We only capture complete fetch requests\n        if (!handlerData.endTimestamp) {\n            return;\n        }\n        var client = getCurrentHub().getClient();\n        var dsn = client && client.getDsn();\n        if (dsn) {\n            var filterUrl = new API(dsn).getStoreEndpoint();\n            // if Sentry key appears in URL, don't capture it as a request\n            // but rather as our own 'sentry' type breadcrumb\n            if (filterUrl &&\n                handlerData.fetchData.url.indexOf(filterUrl) !== -1 &&\n                handlerData.fetchData.method === 'POST' &&\n                handlerData.args[1] &&\n                handlerData.args[1].body) {\n                addSentryBreadcrumb(handlerData.args[1].body);\n                return;\n            }\n        }\n        if (handlerData.error) {\n            getCurrentHub().addBreadcrumb({\n                category: 'fetch',\n                data: tslib_1.__assign({}, handlerData.fetchData, { status_code: handlerData.response.status }),\n                level: Severity.Error,\n                type: 'http',\n            }, {\n                data: handlerData.error,\n                input: handlerData.args,\n            });\n        }\n        else {\n            getCurrentHub().addBreadcrumb({\n                category: 'fetch',\n                data: tslib_1.__assign({}, handlerData.fetchData, { status_code: handlerData.response.status }),\n                type: 'http',\n            }, {\n                input: handlerData.args,\n                response: handlerData.response,\n            });\n        }\n    };\n    /**\n     * Creates breadcrumbs from history API calls\n     */\n    Breadcrumbs.prototype._historyBreadcrumb = function (handlerData) {\n        var global = getGlobalObject();\n        var from = handlerData.from;\n        var to = handlerData.to;\n        var parsedLoc = parseUrl(global.location.href);\n        var parsedFrom = parseUrl(from);\n        var parsedTo = parseUrl(to);\n        // Initial pushState doesn't provide `from` information\n        if (!parsedFrom.path) {\n            parsedFrom = parsedLoc;\n        }\n        // Use only the path component of the URL if the URL matches the current\n        // document (almost all the time when using pushState)\n        if (parsedLoc.protocol === parsedTo.protocol && parsedLoc.host === parsedTo.host) {\n            // tslint:disable-next-line:no-parameter-reassignment\n            to = parsedTo.relative;\n        }\n        if (parsedLoc.protocol === parsedFrom.protocol && parsedLoc.host === parsedFrom.host) {\n            // tslint:disable-next-line:no-parameter-reassignment\n            from = parsedFrom.relative;\n        }\n        getCurrentHub().addBreadcrumb({\n            category: 'navigation',\n            data: {\n                from: from,\n                to: to,\n            },\n        });\n    };\n    /**\n     * Instrument browser built-ins w/ breadcrumb capturing\n     *  - Console API\n     *  - DOM API (click/typing)\n     *  - XMLHttpRequest API\n     *  - Fetch API\n     *  - History API\n     */\n    Breadcrumbs.prototype.setupOnce = function () {\n        var _this = this;\n        if (this._options.console) {\n            addInstrumentationHandler({\n                callback: function () {\n                    var args = [];\n                    for (var _i = 0; _i < arguments.length; _i++) {\n                        args[_i] = arguments[_i];\n                    }\n                    _this._consoleBreadcrumb.apply(_this, tslib_1.__spread(args));\n                },\n                type: 'console',\n            });\n        }\n        if (this._options.dom) {\n            addInstrumentationHandler({\n                callback: function () {\n                    var args = [];\n                    for (var _i = 0; _i < arguments.length; _i++) {\n                        args[_i] = arguments[_i];\n                    }\n                    _this._domBreadcrumb.apply(_this, tslib_1.__spread(args));\n                },\n                type: 'dom',\n            });\n        }\n        if (this._options.xhr) {\n            addInstrumentationHandler({\n                callback: function () {\n                    var args = [];\n                    for (var _i = 0; _i < arguments.length; _i++) {\n                        args[_i] = arguments[_i];\n                    }\n                    _this._xhrBreadcrumb.apply(_this, tslib_1.__spread(args));\n                },\n                type: 'xhr',\n            });\n        }\n        if (this._options.fetch) {\n            addInstrumentationHandler({\n                callback: function () {\n                    var args = [];\n                    for (var _i = 0; _i < arguments.length; _i++) {\n                        args[_i] = arguments[_i];\n                    }\n                    _this._fetchBreadcrumb.apply(_this, tslib_1.__spread(args));\n                },\n                type: 'fetch',\n            });\n        }\n        if (this._options.history) {\n            addInstrumentationHandler({\n                callback: function () {\n                    var args = [];\n                    for (var _i = 0; _i < arguments.length; _i++) {\n                        args[_i] = arguments[_i];\n                    }\n                    _this._historyBreadcrumb.apply(_this, tslib_1.__spread(args));\n                },\n                type: 'history',\n            });\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    Breadcrumbs.id = 'Breadcrumbs';\n    return Breadcrumbs;\n}());\nexport { Breadcrumbs };\n/**\n * Create a breadcrumb of `sentry` from the events themselves\n */\nfunction addSentryBreadcrumb(serializedData) {\n    // There's always something that can go wrong with deserialization...\n    try {\n        var event_1 = JSON.parse(serializedData);\n        getCurrentHub().addBreadcrumb({\n            category: \"sentry.\" + (event_1.type === 'transaction' ? 'transaction' : 'event'),\n            event_id: event_1.event_id,\n            level: event_1.level || Severity.fromString('error'),\n            message: getEventDescription(event_1),\n        }, {\n            event: event_1,\n        });\n    }\n    catch (_oO) {\n        logger.error('Error while adding sentry type breadcrumb');\n    }\n}\n//# sourceMappingURL=breadcrumbs.js.map","import * as tslib_1 from \"tslib\";\nimport { getCurrentHub } from '@sentry/core';\nimport { Severity } from '@sentry/types';\nimport { addExceptionMechanism, getGlobalObject, getLocationHref, isErrorEvent, isPrimitive, isString, logger, } from '@sentry/utils';\nimport { eventFromUnknownInput } from '../eventbuilder';\nimport { shouldIgnoreOnError } from '../helpers';\n/** Global handlers */\nvar GlobalHandlers = /** @class */ (function () {\n    /** JSDoc */\n    function GlobalHandlers(options) {\n        /**\n         * @inheritDoc\n         */\n        this.name = GlobalHandlers.id;\n        /** JSDoc */\n        this._global = getGlobalObject();\n        /** JSDoc */\n        this._oldOnErrorHandler = null;\n        /** JSDoc */\n        this._oldOnUnhandledRejectionHandler = null;\n        /** JSDoc */\n        this._onErrorHandlerInstalled = false;\n        /** JSDoc */\n        this._onUnhandledRejectionHandlerInstalled = false;\n        this._options = tslib_1.__assign({ onerror: true, onunhandledrejection: true }, options);\n    }\n    /**\n     * @inheritDoc\n     */\n    GlobalHandlers.prototype.setupOnce = function () {\n        Error.stackTraceLimit = 50;\n        if (this._options.onerror) {\n            logger.log('Global Handler attached: onerror');\n            this._installGlobalOnErrorHandler();\n        }\n        if (this._options.onunhandledrejection) {\n            logger.log('Global Handler attached: onunhandledrejection');\n            this._installGlobalOnUnhandledRejectionHandler();\n        }\n    };\n    /** JSDoc */\n    GlobalHandlers.prototype._installGlobalOnErrorHandler = function () {\n        if (this._onErrorHandlerInstalled) {\n            return;\n        }\n        var self = this; // tslint:disable-line:no-this-assignment\n        this._oldOnErrorHandler = this._global.onerror;\n        this._global.onerror = function (msg, url, line, column, error) {\n            var currentHub = getCurrentHub();\n            var hasIntegration = currentHub.getIntegration(GlobalHandlers);\n            var isFailedOwnDelivery = error && error.__sentry_own_request__ === true;\n            if (!hasIntegration || shouldIgnoreOnError() || isFailedOwnDelivery) {\n                if (self._oldOnErrorHandler) {\n                    return self._oldOnErrorHandler.apply(this, arguments);\n                }\n                return false;\n            }\n            var client = currentHub.getClient();\n            var event = isPrimitive(error)\n                ? self._eventFromIncompleteOnError(msg, url, line, column)\n                : self._enhanceEventWithInitialFrame(eventFromUnknownInput(error, undefined, {\n                    attachStacktrace: client && client.getOptions().attachStacktrace,\n                    rejection: false,\n                }), url, line, column);\n            addExceptionMechanism(event, {\n                handled: false,\n                type: 'onerror',\n            });\n            currentHub.captureEvent(event, {\n                originalException: error,\n            });\n            if (self._oldOnErrorHandler) {\n                return self._oldOnErrorHandler.apply(this, arguments);\n            }\n            return false;\n        };\n        this._onErrorHandlerInstalled = true;\n    };\n    /** JSDoc */\n    GlobalHandlers.prototype._installGlobalOnUnhandledRejectionHandler = function () {\n        if (this._onUnhandledRejectionHandlerInstalled) {\n            return;\n        }\n        var self = this; // tslint:disable-line:no-this-assignment\n        this._oldOnUnhandledRejectionHandler = this._global.onunhandledrejection;\n        this._global.onunhandledrejection = function (e) {\n            var error = e;\n            // dig the object of the rejection out of known event types\n            try {\n                // PromiseRejectionEvents store the object of the rejection under 'reason'\n                // see https://developer.mozilla.org/en-US/docs/Web/API/PromiseRejectionEvent\n                if ('reason' in e) {\n                    error = e.reason;\n                }\n                // something, somewhere, (likely a browser extension) effectively casts PromiseRejectionEvents\n                // to CustomEvents, moving the `promise` and `reason` attributes of the PRE into\n                // the CustomEvent's `detail` attribute, since they're not part of CustomEvent's spec\n                // see https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent and\n                // https://github.com/getsentry/sentry-javascript/issues/2380\n                else if ('detail' in e && 'reason' in e.detail) {\n                    error = e.detail.reason;\n                }\n            }\n            catch (_oO) {\n                // no-empty\n            }\n            var currentHub = getCurrentHub();\n            var hasIntegration = currentHub.getIntegration(GlobalHandlers);\n            var isFailedOwnDelivery = error && error.__sentry_own_request__ === true;\n            if (!hasIntegration || shouldIgnoreOnError() || isFailedOwnDelivery) {\n                if (self._oldOnUnhandledRejectionHandler) {\n                    return self._oldOnUnhandledRejectionHandler.apply(this, arguments);\n                }\n                return true;\n            }\n            var client = currentHub.getClient();\n            var event = isPrimitive(error)\n                ? self._eventFromIncompleteRejection(error)\n                : eventFromUnknownInput(error, undefined, {\n                    attachStacktrace: client && client.getOptions().attachStacktrace,\n                    rejection: true,\n                });\n            event.level = Severity.Error;\n            addExceptionMechanism(event, {\n                handled: false,\n                type: 'onunhandledrejection',\n            });\n            currentHub.captureEvent(event, {\n                originalException: error,\n            });\n            if (self._oldOnUnhandledRejectionHandler) {\n                return self._oldOnUnhandledRejectionHandler.apply(this, arguments);\n            }\n            return true;\n        };\n        this._onUnhandledRejectionHandlerInstalled = true;\n    };\n    /**\n     * This function creates a stack from an old, error-less onerror handler.\n     */\n    GlobalHandlers.prototype._eventFromIncompleteOnError = function (msg, url, line, column) {\n        var ERROR_TYPES_RE = /^(?:[Uu]ncaught (?:exception: )?)?(?:((?:Eval|Internal|Range|Reference|Syntax|Type|URI|)Error): )?(.*)$/i;\n        // If 'message' is ErrorEvent, get real message from inside\n        var message = isErrorEvent(msg) ? msg.message : msg;\n        var name;\n        if (isString(message)) {\n            var groups = message.match(ERROR_TYPES_RE);\n            if (groups) {\n                name = groups[1];\n                message = groups[2];\n            }\n        }\n        var event = {\n            exception: {\n                values: [\n                    {\n                        type: name || 'Error',\n                        value: message,\n                    },\n                ],\n            },\n        };\n        return this._enhanceEventWithInitialFrame(event, url, line, column);\n    };\n    /**\n     * This function creates an Event from an TraceKitStackTrace that has part of it missing.\n     */\n    GlobalHandlers.prototype._eventFromIncompleteRejection = function (error) {\n        return {\n            exception: {\n                values: [\n                    {\n                        type: 'UnhandledRejection',\n                        value: \"Non-Error promise rejection captured with value: \" + error,\n                    },\n                ],\n            },\n        };\n    };\n    /** JSDoc */\n    GlobalHandlers.prototype._enhanceEventWithInitialFrame = function (event, url, line, column) {\n        event.exception = event.exception || {};\n        event.exception.values = event.exception.values || [];\n        event.exception.values[0] = event.exception.values[0] || {};\n        event.exception.values[0].stacktrace = event.exception.values[0].stacktrace || {};\n        event.exception.values[0].stacktrace.frames = event.exception.values[0].stacktrace.frames || [];\n        var colno = isNaN(parseInt(column, 10)) ? undefined : column;\n        var lineno = isNaN(parseInt(line, 10)) ? undefined : line;\n        var filename = isString(url) && url.length > 0 ? url : getLocationHref();\n        if (event.exception.values[0].stacktrace.frames.length === 0) {\n            event.exception.values[0].stacktrace.frames.push({\n                colno: colno,\n                filename: filename,\n                function: '?',\n                in_app: true,\n                lineno: lineno,\n            });\n        }\n        return event;\n    };\n    /**\n     * @inheritDoc\n     */\n    GlobalHandlers.id = 'GlobalHandlers';\n    return GlobalHandlers;\n}());\nexport { GlobalHandlers };\n//# sourceMappingURL=globalhandlers.js.map","import * as tslib_1 from \"tslib\";\nimport { addGlobalEventProcessor, getCurrentHub } from '@sentry/core';\nimport { isInstanceOf } from '@sentry/utils';\nimport { exceptionFromStacktrace } from '../parsers';\nimport { computeStackTrace } from '../tracekit';\nvar DEFAULT_KEY = 'cause';\nvar DEFAULT_LIMIT = 5;\n/** Adds SDK info to an event. */\nvar LinkedErrors = /** @class */ (function () {\n    /**\n     * @inheritDoc\n     */\n    function LinkedErrors(options) {\n        if (options === void 0) { options = {}; }\n        /**\n         * @inheritDoc\n         */\n        this.name = LinkedErrors.id;\n        this._key = options.key || DEFAULT_KEY;\n        this._limit = options.limit || DEFAULT_LIMIT;\n    }\n    /**\n     * @inheritDoc\n     */\n    LinkedErrors.prototype.setupOnce = function () {\n        addGlobalEventProcessor(function (event, hint) {\n            var self = getCurrentHub().getIntegration(LinkedErrors);\n            if (self) {\n                return self._handler(event, hint);\n            }\n            return event;\n        });\n    };\n    /**\n     * @inheritDoc\n     */\n    LinkedErrors.prototype._handler = function (event, hint) {\n        if (!event.exception || !event.exception.values || !hint || !isInstanceOf(hint.originalException, Error)) {\n            return event;\n        }\n        var linkedErrors = this._walkErrorTree(hint.originalException, this._key);\n        event.exception.values = tslib_1.__spread(linkedErrors, event.exception.values);\n        return event;\n    };\n    /**\n     * @inheritDoc\n     */\n    LinkedErrors.prototype._walkErrorTree = function (error, key, stack) {\n        if (stack === void 0) { stack = []; }\n        if (!isInstanceOf(error[key], Error) || stack.length + 1 >= this._limit) {\n            return stack;\n        }\n        var stacktrace = computeStackTrace(error[key]);\n        var exception = exceptionFromStacktrace(stacktrace);\n        return this._walkErrorTree(error[key], key, tslib_1.__spread([exception], stack));\n    };\n    /**\n     * @inheritDoc\n     */\n    LinkedErrors.id = 'LinkedErrors';\n    return LinkedErrors;\n}());\nexport { LinkedErrors };\n//# sourceMappingURL=linkederrors.js.map","import * as tslib_1 from \"tslib\";\nimport { addGlobalEventProcessor, getCurrentHub } from '@sentry/core';\nimport { getGlobalObject } from '@sentry/utils';\nvar global = getGlobalObject();\n/** UserAgent */\nvar UserAgent = /** @class */ (function () {\n    function UserAgent() {\n        /**\n         * @inheritDoc\n         */\n        this.name = UserAgent.id;\n    }\n    /**\n     * @inheritDoc\n     */\n    UserAgent.prototype.setupOnce = function () {\n        addGlobalEventProcessor(function (event) {\n            if (getCurrentHub().getIntegration(UserAgent)) {\n                if (!global.navigator || !global.location) {\n                    return event;\n                }\n                // Request Interface: https://docs.sentry.io/development/sdk-dev/event-payloads/request/\n                var request = event.request || {};\n                request.url = request.url || global.location.href;\n                request.headers = request.headers || {};\n                request.headers['User-Agent'] = global.navigator.userAgent;\n                return tslib_1.__assign({}, event, { request: request });\n            }\n            return event;\n        });\n    };\n    /**\n     * @inheritDoc\n     */\n    UserAgent.id = 'UserAgent';\n    return UserAgent;\n}());\nexport { UserAgent };\n//# sourceMappingURL=useragent.js.map","import { getCurrentHub, initAndBind, Integrations as CoreIntegrations } from '@sentry/core';\nimport { getGlobalObject, SyncPromise } from '@sentry/utils';\nimport { BrowserClient } from './client';\nimport { wrap as internalWrap } from './helpers';\nimport { Breadcrumbs, GlobalHandlers, LinkedErrors, TryCatch, UserAgent } from './integrations';\nexport var defaultIntegrations = [\n    new CoreIntegrations.InboundFilters(),\n    new CoreIntegrations.FunctionToString(),\n    new TryCatch(),\n    new Breadcrumbs(),\n    new GlobalHandlers(),\n    new LinkedErrors(),\n    new UserAgent(),\n];\n/**\n * The Sentry Browser SDK Client.\n *\n * To use this SDK, call the {@link init} function as early as possible when\n * loading the web page. To set context information or send manual events, use\n * the provided methods.\n *\n * @example\n *\n * ```\n *\n * import { init } from '@sentry/browser';\n *\n * init({\n *   dsn: '__DSN__',\n *   // ...\n * });\n * ```\n *\n * @example\n * ```\n *\n * import { configureScope } from '@sentry/browser';\n * configureScope((scope: Scope) => {\n *   scope.setExtra({ battery: 0.7 });\n *   scope.setTag({ user_mode: 'admin' });\n *   scope.setUser({ id: '4711' });\n * });\n * ```\n *\n * @example\n * ```\n *\n * import { addBreadcrumb } from '@sentry/browser';\n * addBreadcrumb({\n *   message: 'My Breadcrumb',\n *   // ...\n * });\n * ```\n *\n * @example\n *\n * ```\n *\n * import * as Sentry from '@sentry/browser';\n * Sentry.captureMessage('Hello, world!');\n * Sentry.captureException(new Error('Good bye'));\n * Sentry.captureEvent({\n *   message: 'Manual',\n *   stacktrace: [\n *     // ...\n *   ],\n * });\n * ```\n *\n * @see {@link BrowserOptions} for documentation on configuration options.\n */\nexport function init(options) {\n    if (options === void 0) { options = {}; }\n    if (options.defaultIntegrations === undefined) {\n        options.defaultIntegrations = defaultIntegrations;\n    }\n    if (options.release === undefined) {\n        var window_1 = getGlobalObject();\n        // This supports the variable that sentry-webpack-plugin injects\n        if (window_1.SENTRY_RELEASE && window_1.SENTRY_RELEASE.id) {\n            options.release = window_1.SENTRY_RELEASE.id;\n        }\n    }\n    initAndBind(BrowserClient, options);\n}\n/**\n * Present the user with a report dialog.\n *\n * @param options Everything is optional, we try to fetch all info need from the global scope.\n */\nexport function showReportDialog(options) {\n    if (options === void 0) { options = {}; }\n    if (!options.eventId) {\n        options.eventId = getCurrentHub().lastEventId();\n    }\n    var client = getCurrentHub().getClient();\n    if (client) {\n        client.showReportDialog(options);\n    }\n}\n/**\n * This is the getter for lastEventId.\n *\n * @returns The last event id of a captured event.\n */\nexport function lastEventId() {\n    return getCurrentHub().lastEventId();\n}\n/**\n * This function is here to be API compatible with the loader.\n * @hidden\n */\nexport function forceLoad() {\n    // Noop\n}\n/**\n * This function is here to be API compatible with the loader.\n * @hidden\n */\nexport function onLoad(callback) {\n    callback();\n}\n/**\n * A promise that resolves when all current events have been sent.\n * If you provide a timeout and the queue takes longer to drain the promise returns false.\n *\n * @param timeout Maximum time in ms the client should wait.\n */\nexport function flush(timeout) {\n    var client = getCurrentHub().getClient();\n    if (client) {\n        return client.flush(timeout);\n    }\n    return SyncPromise.reject(false);\n}\n/**\n * A promise that resolves when all current events have been sent.\n * If you provide a timeout and the queue takes longer to drain the promise returns false.\n *\n * @param timeout Maximum time in ms the client should wait.\n */\nexport function close(timeout) {\n    var client = getCurrentHub().getClient();\n    if (client) {\n        return client.close(timeout);\n    }\n    return SyncPromise.reject(false);\n}\n/**\n * Wrap code within a try/catch block so the SDK is able to capture errors.\n *\n * @param fn A function to wrap.\n *\n * @returns The result of wrapped function call.\n */\nexport function wrap(fn) {\n    return internalWrap(fn)(); // tslint:disable-line:no-unsafe-any\n}\n//# sourceMappingURL=sdk.js.map","import { getCurrentHub } from '@sentry/hub';\nimport { logger } from '@sentry/utils';\n/**\n * Internal function to create a new SDK client instance. The client is\n * installed and then bound to the current scope.\n *\n * @param clientClass The client class to instanciate.\n * @param options Options to pass to the client.\n */\nexport function initAndBind(clientClass, options) {\n    if (options.debug === true) {\n        logger.enable();\n    }\n    getCurrentHub().bindClient(new clientClass(options));\n}\n//# sourceMappingURL=sdk.js.map","import * as tslib_1 from \"tslib\";\nexport * from './exports';\nimport { Integrations as CoreIntegrations } from '@sentry/core';\nimport { getGlobalObject } from '@sentry/utils';\nimport * as BrowserIntegrations from './integrations';\nimport * as Transports from './transports';\nvar windowIntegrations = {};\n// This block is needed to add compatibility with the integrations packages when used with a CDN\n// tslint:disable: no-unsafe-any\nvar _window = getGlobalObject();\nif (_window.Sentry && _window.Sentry.Integrations) {\n    windowIntegrations = _window.Sentry.Integrations;\n}\n// tslint:enable: no-unsafe-any\nvar INTEGRATIONS = tslib_1.__assign({}, windowIntegrations, CoreIntegrations, BrowserIntegrations);\nexport { INTEGRATIONS as Integrations, Transports };\n//# sourceMappingURL=index.js.map","import * as tslib_1 from \"tslib\";\nimport { consoleSandbox, dynamicRequire, getGlobalObject, isNodeEnv, logger, timestampWithMs, uuid4, } from '@sentry/utils';\nimport { Scope } from './scope';\n/**\n * API compatibility version of this hub.\n *\n * WARNING: This number should only be incresed when the global interface\n * changes a and new methods are introduced.\n *\n * @hidden\n */\nexport var API_VERSION = 3;\n/**\n * Default maximum number of breadcrumbs added to an event. Can be overwritten\n * with {@link Options.maxBreadcrumbs}.\n */\nvar DEFAULT_BREADCRUMBS = 100;\n/**\n * Absolute maximum number of breadcrumbs added to an event. The\n * `maxBreadcrumbs` option cannot be higher than this value.\n */\nvar MAX_BREADCRUMBS = 100;\n/**\n * @inheritDoc\n */\nvar Hub = /** @class */ (function () {\n    /**\n     * Creates a new instance of the hub, will push one {@link Layer} into the\n     * internal stack on creation.\n     *\n     * @param client bound to the hub.\n     * @param scope bound to the hub.\n     * @param version number, higher number means higher priority.\n     */\n    function Hub(client, scope, _version) {\n        if (scope === void 0) { scope = new Scope(); }\n        if (_version === void 0) { _version = API_VERSION; }\n        this._version = _version;\n        /** Is a {@link Layer}[] containing the client and scope */\n        this._stack = [];\n        this._stack.push({ client: client, scope: scope });\n    }\n    /**\n     * Internal helper function to call a method on the top client if it exists.\n     *\n     * @param method The method to call on the client.\n     * @param args Arguments to pass to the client function.\n     */\n    Hub.prototype._invokeClient = function (method) {\n        var _a;\n        var args = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            args[_i - 1] = arguments[_i];\n        }\n        var top = this.getStackTop();\n        if (top && top.client && top.client[method]) {\n            (_a = top.client)[method].apply(_a, tslib_1.__spread(args, [top.scope]));\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    Hub.prototype.isOlderThan = function (version) {\n        return this._version < version;\n    };\n    /**\n     * @inheritDoc\n     */\n    Hub.prototype.bindClient = function (client) {\n        var top = this.getStackTop();\n        top.client = client;\n    };\n    /**\n     * @inheritDoc\n     */\n    Hub.prototype.pushScope = function () {\n        // We want to clone the content of prev scope\n        var stack = this.getStack();\n        var parentScope = stack.length > 0 ? stack[stack.length - 1].scope : undefined;\n        var scope = Scope.clone(parentScope);\n        this.getStack().push({\n            client: this.getClient(),\n            scope: scope,\n        });\n        return scope;\n    };\n    /**\n     * @inheritDoc\n     */\n    Hub.prototype.popScope = function () {\n        return this.getStack().pop() !== undefined;\n    };\n    /**\n     * @inheritDoc\n     */\n    Hub.prototype.withScope = function (callback) {\n        var scope = this.pushScope();\n        try {\n            callback(scope);\n        }\n        finally {\n            this.popScope();\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    Hub.prototype.getClient = function () {\n        return this.getStackTop().client;\n    };\n    /** Returns the scope of the top stack. */\n    Hub.prototype.getScope = function () {\n        return this.getStackTop().scope;\n    };\n    /** Returns the scope stack for domains or the process. */\n    Hub.prototype.getStack = function () {\n        return this._stack;\n    };\n    /** Returns the topmost scope layer in the order domain > local > process. */\n    Hub.prototype.getStackTop = function () {\n        return this._stack[this._stack.length - 1];\n    };\n    /**\n     * @inheritDoc\n     */\n    Hub.prototype.captureException = function (exception, hint) {\n        var eventId = (this._lastEventId = uuid4());\n        var finalHint = hint;\n        // If there's no explicit hint provided, mimick the same thing that would happen\n        // in the minimal itself to create a consistent behavior.\n        // We don't do this in the client, as it's the lowest level API, and doing this,\n        // would prevent user from having full control over direct calls.\n        if (!hint) {\n            var syntheticException = void 0;\n            try {\n                throw new Error('Sentry syntheticException');\n            }\n            catch (exception) {\n                syntheticException = exception;\n            }\n            finalHint = {\n                originalException: exception,\n                syntheticException: syntheticException,\n            };\n        }\n        this._invokeClient('captureException', exception, tslib_1.__assign({}, finalHint, { event_id: eventId }));\n        return eventId;\n    };\n    /**\n     * @inheritDoc\n     */\n    Hub.prototype.captureMessage = function (message, level, hint) {\n        var eventId = (this._lastEventId = uuid4());\n        var finalHint = hint;\n        // If there's no explicit hint provided, mimick the same thing that would happen\n        // in the minimal itself to create a consistent behavior.\n        // We don't do this in the client, as it's the lowest level API, and doing this,\n        // would prevent user from having full control over direct calls.\n        if (!hint) {\n            var syntheticException = void 0;\n            try {\n                throw new Error(message);\n            }\n            catch (exception) {\n                syntheticException = exception;\n            }\n            finalHint = {\n                originalException: message,\n                syntheticException: syntheticException,\n            };\n        }\n        this._invokeClient('captureMessage', message, level, tslib_1.__assign({}, finalHint, { event_id: eventId }));\n        return eventId;\n    };\n    /**\n     * @inheritDoc\n     */\n    Hub.prototype.captureEvent = function (event, hint) {\n        var eventId = (this._lastEventId = uuid4());\n        this._invokeClient('captureEvent', event, tslib_1.__assign({}, hint, { event_id: eventId }));\n        return eventId;\n    };\n    /**\n     * @inheritDoc\n     */\n    Hub.prototype.lastEventId = function () {\n        return this._lastEventId;\n    };\n    /**\n     * @inheritDoc\n     */\n    Hub.prototype.addBreadcrumb = function (breadcrumb, hint) {\n        var top = this.getStackTop();\n        if (!top.scope || !top.client) {\n            return;\n        }\n        var _a = (top.client.getOptions && top.client.getOptions()) || {}, _b = _a.beforeBreadcrumb, beforeBreadcrumb = _b === void 0 ? null : _b, _c = _a.maxBreadcrumbs, maxBreadcrumbs = _c === void 0 ? DEFAULT_BREADCRUMBS : _c;\n        if (maxBreadcrumbs <= 0) {\n            return;\n        }\n        var timestamp = timestampWithMs();\n        var mergedBreadcrumb = tslib_1.__assign({ timestamp: timestamp }, breadcrumb);\n        var finalBreadcrumb = beforeBreadcrumb\n            ? consoleSandbox(function () { return beforeBreadcrumb(mergedBreadcrumb, hint); })\n            : mergedBreadcrumb;\n        if (finalBreadcrumb === null) {\n            return;\n        }\n        top.scope.addBreadcrumb(finalBreadcrumb, Math.min(maxBreadcrumbs, MAX_BREADCRUMBS));\n    };\n    /**\n     * @inheritDoc\n     */\n    Hub.prototype.setUser = function (user) {\n        var top = this.getStackTop();\n        if (!top.scope) {\n            return;\n        }\n        top.scope.setUser(user);\n    };\n    /**\n     * @inheritDoc\n     */\n    Hub.prototype.setTags = function (tags) {\n        var top = this.getStackTop();\n        if (!top.scope) {\n            return;\n        }\n        top.scope.setTags(tags);\n    };\n    /**\n     * @inheritDoc\n     */\n    Hub.prototype.setExtras = function (extras) {\n        var top = this.getStackTop();\n        if (!top.scope) {\n            return;\n        }\n        top.scope.setExtras(extras);\n    };\n    /**\n     * @inheritDoc\n     */\n    Hub.prototype.setTag = function (key, value) {\n        var top = this.getStackTop();\n        if (!top.scope) {\n            return;\n        }\n        top.scope.setTag(key, value);\n    };\n    /**\n     * @inheritDoc\n     */\n    Hub.prototype.setExtra = function (key, extra) {\n        var top = this.getStackTop();\n        if (!top.scope) {\n            return;\n        }\n        top.scope.setExtra(key, extra);\n    };\n    /**\n     * @inheritDoc\n     */\n    Hub.prototype.setContext = function (name, context) {\n        var top = this.getStackTop();\n        if (!top.scope) {\n            return;\n        }\n        top.scope.setContext(name, context);\n    };\n    /**\n     * @inheritDoc\n     */\n    Hub.prototype.configureScope = function (callback) {\n        var top = this.getStackTop();\n        if (top.scope && top.client) {\n            callback(top.scope);\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    Hub.prototype.run = function (callback) {\n        var oldHub = makeMain(this);\n        try {\n            callback(this);\n        }\n        finally {\n            makeMain(oldHub);\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    Hub.prototype.getIntegration = function (integration) {\n        var client = this.getClient();\n        if (!client) {\n            return null;\n        }\n        try {\n            return client.getIntegration(integration);\n        }\n        catch (_oO) {\n            logger.warn(\"Cannot retrieve integration \" + integration.id + \" from the current Hub\");\n            return null;\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    Hub.prototype.startSpan = function (spanOrSpanContext, forceNoChild) {\n        if (forceNoChild === void 0) { forceNoChild = false; }\n        return this._callExtensionMethod('startSpan', spanOrSpanContext, forceNoChild);\n    };\n    /**\n     * @inheritDoc\n     */\n    Hub.prototype.traceHeaders = function () {\n        return this._callExtensionMethod('traceHeaders');\n    };\n    /**\n     * Calls global extension method and binding current instance to the function call\n     */\n    // @ts-ignore\n    Hub.prototype._callExtensionMethod = function (method) {\n        var args = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            args[_i - 1] = arguments[_i];\n        }\n        var carrier = getMainCarrier();\n        var sentry = carrier.__SENTRY__;\n        // tslint:disable-next-line: strict-type-predicates\n        if (sentry && sentry.extensions && typeof sentry.extensions[method] === 'function') {\n            return sentry.extensions[method].apply(this, args);\n        }\n        logger.warn(\"Extension method \" + method + \" couldn't be found, doing nothing.\");\n    };\n    return Hub;\n}());\nexport { Hub };\n/** Returns the global shim registry. */\nexport function getMainCarrier() {\n    var carrier = getGlobalObject();\n    carrier.__SENTRY__ = carrier.__SENTRY__ || {\n        extensions: {},\n        hub: undefined,\n    };\n    return carrier;\n}\n/**\n * Replaces the current main hub with the passed one on the global object\n *\n * @returns The old replaced hub\n */\nexport function makeMain(hub) {\n    var registry = getMainCarrier();\n    var oldHub = getHubFromCarrier(registry);\n    setHubOnCarrier(registry, hub);\n    return oldHub;\n}\n/**\n * Returns the default hub instance.\n *\n * If a hub is already registered in the global carrier but this module\n * contains a more recent version, it replaces the registered version.\n * Otherwise, the currently registered hub will be returned.\n */\nexport function getCurrentHub() {\n    // Get main carrier (global for every environment)\n    var registry = getMainCarrier();\n    // If there's no hub, or its an old API, assign a new one\n    if (!hasHubOnCarrier(registry) || getHubFromCarrier(registry).isOlderThan(API_VERSION)) {\n        setHubOnCarrier(registry, new Hub());\n    }\n    // Prefer domains over global if they are there (applicable only to Node environment)\n    if (isNodeEnv()) {\n        return getHubFromActiveDomain(registry);\n    }\n    // Return hub that lives on a global object\n    return getHubFromCarrier(registry);\n}\n/**\n * Try to read the hub from an active domain, fallback to the registry if one doesnt exist\n * @returns discovered hub\n */\nfunction getHubFromActiveDomain(registry) {\n    try {\n        // We need to use `dynamicRequire` because `require` on it's own will be optimized by webpack.\n        // We do not want this to happen, we need to try to `require` the domain node module and fail if we are in browser\n        // for example so we do not have to shim it and use `getCurrentHub` universally.\n        var domain = dynamicRequire(module, 'domain');\n        var activeDomain = domain.active;\n        // If there no active domain, just return global hub\n        if (!activeDomain) {\n            return getHubFromCarrier(registry);\n        }\n        // If there's no hub on current domain, or its an old API, assign a new one\n        if (!hasHubOnCarrier(activeDomain) || getHubFromCarrier(activeDomain).isOlderThan(API_VERSION)) {\n            var registryHubTopStack = getHubFromCarrier(registry).getStackTop();\n            setHubOnCarrier(activeDomain, new Hub(registryHubTopStack.client, Scope.clone(registryHubTopStack.scope)));\n        }\n        // Return hub that lives on a domain\n        return getHubFromCarrier(activeDomain);\n    }\n    catch (_Oo) {\n        // Return hub that lives on a global object\n        return getHubFromCarrier(registry);\n    }\n}\n/**\n * This will tell whether a carrier has a hub on it or not\n * @param carrier object\n */\nfunction hasHubOnCarrier(carrier) {\n    if (carrier && carrier.__SENTRY__ && carrier.__SENTRY__.hub) {\n        return true;\n    }\n    return false;\n}\n/**\n * This will create a new {@link Hub} and add to the passed object on\n * __SENTRY__.hub.\n * @param carrier object\n * @hidden\n */\nexport function getHubFromCarrier(carrier) {\n    if (carrier && carrier.__SENTRY__ && carrier.__SENTRY__.hub) {\n        return carrier.__SENTRY__.hub;\n    }\n    carrier.__SENTRY__ = carrier.__SENTRY__ || {};\n    carrier.__SENTRY__.hub = new Hub();\n    return carrier.__SENTRY__.hub;\n}\n/**\n * This will set passed {@link Hub} on the passed object's __SENTRY__.hub attribute\n * @param carrier object\n * @param hub Hub\n */\nexport function setHubOnCarrier(carrier, hub) {\n    if (!carrier) {\n        return false;\n    }\n    carrier.__SENTRY__ = carrier.__SENTRY__ || {};\n    carrier.__SENTRY__.hub = hub;\n    return true;\n}\n//# sourceMappingURL=hub.js.map"],"sourceRoot":"webpack:///"}