{"version":3,"sources":["./src/app/modules/bim/ifc_models/pages/viewer/bim-view.service.ts","./src/app/modules/bim/ifc_models/toolbar/view-toggle/bim-view-toggle-dropdown.directive.ts","./src/app/modules/bim/ifc_models/toolbar/view-toggle/bim-view-toggle-button.component.ts","./src/app/modules/bim/ifc_models/pages/viewer/ifc-models-data.service.ts","./src/app/modules/bim/ifc_models/toolbar/manage-ifc-models-button/bim-manage-ifc-models-button.component.ts","./src/app/modules/work_packages/routing/partitioned-query-space-page/partitioned-query-space-page.component.html","./src/app/modules/bim/ifc_models/pages/viewer/ifc-viewer-page.component.ts","./src/app/modules/bim/ifc_models/ifc-viewer/ifc-viewer.component.html","./src/app/modules/bim/ifc_models/ifc-viewer/ifc-viewer.component.ts","./src/app/modules/bim/ifc_models/empty/empty-component.ts","./node_modules/rxjs/_esm2015/internal/operators/pluck.js","./src/app/modules/bim/ifc_models/bcf/list-container/bcf-list-container.component.html","./src/app/modules/bim/ifc_models/bcf/list-container/bcf-list-container.component.ts","./src/app/modules/bim/ifc_models/openproject-ifc-models.routes.ts","./src/app/modules/bim/ifc_models/openproject-ifc-models.module.ts"],"names":["bimListViewIdentifier","bimTableViewIdentifier","bimSplitViewCardsIdentifier","bimSplitViewListIdentifier","bimViewerViewIdentifier","I18n","transitions","state","_state","text","list","this","t","viewer","splitList","splitCards","table","icon","detectView","transitionFn","onSuccess","transition","values$","unsubscribe","view$","pipe","takeUntil","getValueOr","includes","params","cards","putValue","currentViewerState","elementRef","opContextMenu","bimView","wpFiltersService","viewerBridgeService","wpDisplayRepresentation","super","evt","buildItems","show","items","contextMenuId","current","shouldShowViewer","map","key","hidden","linkText","onClick","visible","toggleVisibility","go","BimViewToggleButtonComponent","IfcModelsDataService","paths","currentProjectService","gon","gonIFC","models","projects","shown_models","shownModels","length","find","item","default","indexOf","id","ifcModelsPath","identifier","permission","permissions","get","BimManageIfcModelsButtonComponent","ifcData","manage","manageAllowed","allowed","manageIFCPath","injector","title","delete","edit","areYouSure","newRoute$","BehaviorSubject","undefined","toolbarButtonComponents","component","inputs","stateName$","containerClasses","data","newRoute","ngOnInit","next","observeUntil","subscribe","view","filterAllowed","transitionUnsubscribeFn","query","updateTitle","selectedTitle","titleEditingEnabled","changeChangesFromTitle","updateTitleName","IFCViewerComponent","ifcViewer","canManage","empty_warning","use_this_link_to_manage","keyboard_input_disabled","keyboardEnabled","modelCount","element","jQuery","nativeElement","newViewer","canvasElement","explorerElement","toolbarElement","navCubeCanvasElement","busyModelBackdropElement","destroy","setKeyboardEnabled","target","outerContainer","contains","event","enableKeyBoard","modelCanvas","focus","stopImmediatePropagation","EmptyComponent","pluck","properties","Error","source","props","x","currentProp","i","p","plucker","wpTableConfiguration","dragAndDropEnabled","wpTableColumns","onReady","then","addColumn","uIRouterGlobals","params$","untilDestroyed","distinctUntilChanged","deviceService","isMobile","showTableView","cdRef","detectChanges","noResults","ifcModelsService","workPackageId","double","showViewPointInFlight","zone","runOutsideAngular","setTimeout","wp","states","workPackages","value","viewerVisible","bcfViewpoints","showViewpoint","goToWpDetailState","stateToGo","$state","provide","useClass","IFC_ROUTES","name","parent","url","abstract","redirectTo","query_props","type","dynamic","viewpoint","baseRoute","partition","reloadOnSearch","views","bodyClasses","allowMovingInEditMode","OpenprojectIFCModelsModule","forChild"],"mappings":"qTAoCO,MAAMA,EAAwB,OACxBC,EAAyB,QACzBC,EAA8B,aAC9BC,EAA6B,YAC7BC,EAA0B,SAKhC,MAAM,EAqBX,YAAqBC,EACAC,EACAC,GAFA,KAAAF,OACA,KAAAC,cACA,KAAAC,QAtBb,KAAAC,OAAS,cAEV,KAAAC,KAAW,CAChBC,KAAMC,KAAKN,KAAKO,EAAE,iBAClBC,OAAQF,KAAKN,KAAKO,EAAE,8BACpBE,UAAWH,KAAKN,KAAKO,EAAE,6BACvBG,WAAYJ,KAAKN,KAAKO,EAAE,mCACxBI,MAAOL,KAAKN,KAAKO,EAAE,kBAGd,KAAAK,KAAW,CAChBP,KAAM,iBACNG,OAAQ,kBACRC,UAAW,+BACXC,WAAY,mBACZC,MAAO,kBASPL,KAAKO,aAELP,KAAKQ,aAAeR,KAAKL,YAAYc,UAAU,GAAKC,IAClDV,KAAKO,eAIT,YACE,OAAOP,KAAKH,OAAOc,UAGd,aAAaC,GAClB,OAAOZ,KAAKa,MAAMC,KAAK,OAAAC,EAAA,GAAUH,IAGnC,cACE,OAAOZ,KAAKH,OAAOmB,WAAWzB,GAGzB,qB,cACL,OAAIS,KAAKJ,MAAMqB,SAAS,yBACE,QAAjB,EAAAjB,KAAKJ,MAAMsB,cAAM,eAAEC,OAClB9B,EACAC,EACCU,KAAKJ,MAAMqB,SAAS,gBACtBxB,EACEO,KAAKJ,MAAMqB,SAAS,yBACL,QAAjB,EAAAjB,KAAKJ,MAAMsB,cAAM,eAAEC,QAAqC,OAAX,QAAjB,EAAAnB,KAAKJ,MAAMsB,cAAM,eAAEC,OAC9C9B,EACAC,GAEgB,QAAjB,EAAAU,KAAKJ,MAAMsB,cAAM,eAAEC,QAAqC,OAAX,QAAjB,EAAAnB,KAAKJ,MAAMsB,cAAM,eAAEC,OAC9C5B,EACAC,EAIJ,aACNQ,KAAKH,OAAOuB,SAASpB,KAAKqB,sBAG5B,cACErB,KAAKQ,gB,sCAnEI,GAAc,2D,yBAAd,EAAc,QAAd,EAAc,Y,4ECKpB,MAAM,UAAuC,IAElD,YAAqBc,EACAC,EACAC,EACA9B,EACAE,EACA6B,EACAC,EACAC,GAEnBC,MAAMN,EAAYC,GATC,KAAAD,aACA,KAAAC,gBACA,KAAAC,UACA,KAAA9B,OACA,KAAAE,QACA,KAAA6B,mBACA,KAAAC,sBACA,KAAAC,0BAKX,KAAKE,GACb7B,KAAK8B,aACL9B,KAAKuB,cAAcQ,KAAK/B,KAAM6B,GAGhC,aACE,MAAO,CACLG,MAAOhC,KAAKgC,MACZC,cAAe,yBAIX,aACN,MAAMC,EAAUlC,KAAKwB,QAAQU,QAC7B,IAAIF,EAAQhC,KAAK0B,oBAAoBS,iBACvB,CAAC1C,EAAyBJ,EAAuBE,EAA6BC,EAA4BF,GAC1G,CAACD,EAAuBC,GAEtCU,KAAKgC,MAAQA,EACEI,IAAIC,IACI,CACLC,OAAQD,IAAQH,EAChBK,SAAUvC,KAAKwB,QAAQ1B,KAAKuC,GAC5B/B,KAAMN,KAAKwB,QAAQlB,KAAK+B,GACxBG,QAAS,KAMP,OAJIxC,KAAKyB,iBAAiBgB,SACxBzC,KAAKyB,iBAAiBiB,mBAGhBL,GAYN,KAAKhD,EACDW,KAAKJ,MAAM+C,GAAG,uBAAwB,CAACxB,OAAO,IAChD,MACA,KAAK7B,EACHU,KAAKJ,MAAM+C,GAAG,uBAAwB,CAACxB,OAAO,IAChD,MACF,KAAK1B,EACHO,KAAKJ,MAAM+C,GAAG,yBACd,MACF,KAAKpD,EACHS,KAAKJ,MAAM+C,GAAG,wBAAyB,CAACxB,OAAO,IAC/C,MACF,KAAK3B,EACHQ,KAAKJ,MAAM+C,GAAG,wBAAyB,CAACxB,OAAO,IAInD,OAAO,O,sCAzElB,GAA8B,2F,uBAA9B,EAA8B,wD,yCCfvC,QACE,mBAGE,oBACA,iBAIA,oBACF,OACF,Q,6BAPa,sDAAAb,KAAA,OAGH,+CASP,MAAMsC,EAIX,YAAqBlD,EACA8B,GADA,KAAA9B,OACA,KAAA8B,UAHrB,KAAAX,MAAQb,KAAKwB,QAAQX,O,sCAFV+B,GAA4B,oB,uBAA5BA,EAA4B,2SAhBrC,+B,sBAAc,gC,mGCHX,MAAMC,EAEX,YAAqBC,EACAC,EACAC,GAFA,KAAAF,QACA,KAAAC,wBACA,KAAAC,MAGrB,aACE,OAAOhD,KAAKiD,OAAOC,OAGrB,eACE,OAAOlD,KAAKiD,OAAOE,SAGrB,kBACE,OAAOnD,KAAKiD,OAAOG,aAGd,gBACL,OAAmC,IAA5BpD,KAAKqD,YAAYC,OAGnB,aACL,OAAQtD,KACLkD,OACAK,KAAKC,GAAQA,EAAKC,UAAkD,IAAvCzD,KAAKqD,YAAYK,QAAQF,EAAKG,KAGhE,oBACE,OAAO3D,KAAK8C,MAAMc,cAAc5D,KAAK+C,sBAAsBc,YAGtD,QAAQC,GACb,QAAS9D,KAAKiD,OAAOc,YAAYD,GAGnC,aACE,OAAQ9D,KAAKgD,IAAIgB,IAAI,e,sCAtCZnB,GAAoB,gC,yBAApBA,EAAoB,QAApBA,EAAoB,Y,yCCG7B,cAGE,oBACA,iBAGF,Q,oBALG,kCAGK,2CAQL,MAAMoB,EASX,YAAqBvE,EACAwE,GADA,KAAAxE,OACA,KAAAwE,UARrB,KAAApE,KAAO,CACLqE,OAAQnE,KAAKN,KAAKO,EAAE,oCAGtB,KAAAmE,cAAgBpE,KAAKkE,QAAQG,QAAQ,qBACrC,KAAAC,cAAgBtE,KAAKkE,QAAQI,e,sCAPlBL,GAAiC,oB,uBAAjCA,EAAiC,6PAb1C,oB,KAAG,8B,qLC/BD,yB,oBAEa,+C,yBAeT,gBAGE,yBAKF,Q,wCANI,mCACW,gDAA4C,4BAA5C,CAA4C,gCAA5C,CAA4C,gC,yBAJ7D,QACE,sBASF,Q,yBARM,wC,yBALR,gBAGE,gCAWF,Q,oBAXgB,mDCkBf,MAAM,UAA+B,IA4D1C,YAAqBC,EACAtE,EACA4B,EACAd,EACAsC,EACAuB,EACA7C,GACnBE,MAAM2C,GAPa,KAAAL,UACA,KAAAtE,QACA,KAAA4B,UACA,KAAAd,aACA,KAAAsC,MACA,KAAAuB,WACA,KAAA7C,sBAhErB,KAAA5B,KAAO,CACL0E,MAAOxE,KAAKN,KAAKO,EAAE,qBACnBwE,OAAQzE,KAAKN,KAAKO,EAAE,oBACpByE,KAAM1E,KAAKN,KAAKO,EAAE,kBAClB0E,WAAY3E,KAAKN,KAAKO,EAAE,yBAG1B,KAAA2E,UAAY,IAAIC,EAAA,OAAoCC,GAGpD,KAAAC,wBAA6D,CAC3D,CACEC,UAAW,IACXC,OAAQ,CACNC,WAAYlF,KAAK4E,UACjBP,QAAS,CAAC,kCAAmC,uBAGjD,CACEW,UAAW,IACXjD,KAAM,IAAM/B,KAAKkE,QAAQG,QAAQ,cACjCc,iBAAkB,qBAEpB,CACEH,UAAW,IACXjD,KAAM,IAAM/B,KAAKkE,QAAQG,QAAQ,cACjCc,iBAAkB,qBAEpB,CACEH,UAAW,IACXjD,KAAM,IAAM/B,KAAKwB,QAAQH,uBAAyB5B,GAEpD,CACEuF,UAAWpC,EACXuC,iBAAkB,qBAEpB,CACEH,UAAW,IACXG,iBAAkB,qBAEpB,CACEH,UAAWf,EACXlC,KAAM,IAEG/B,KAAK0B,oBAAoBS,kBACzBnC,KAAKkE,QAAQG,QAAQ,uBAKlC,eAGE,OAAOrE,KAAK0B,oBAAoBS,iBAC9BnC,KAAKJ,MAAMsC,QAAQkD,KAAKC,SACxB,sBAaJ,WACEzD,MAAM0D,WACNtF,KAAK4E,UAAUW,KAAKvF,KAAKqF,UAEzBrF,KACGwB,QACAgE,aAAa,YAAmBxF,OAChCyF,UAAWC,IACV1F,KAAK2F,cAAgBD,IAASjG,IAIlCO,KAAK4F,wBAA0B5F,KAAKU,WAAWD,UAAU,GAAI,KAC3DT,KAAK4E,UAAUW,KAAKvF,KAAKqF,YAY7B,YAAYQ,GACN7F,KAAKwB,QAAQU,UAAY7C,EAC3BuC,MAAMkE,YAAYD,GAElB7F,KAAK+F,cAAgB/F,KAAKN,KAAKO,EAAE,qBAInCD,KAAKgG,qBAAsB,G,sCAvGlB,GAAsB,+F,uBAAtB,EAAsB,4CAJtB,CACT,MACD,2hCDpCH,gBAEE,gBACE,gBACE,8BAKA,mCAGwB,kCAAU,EAAAC,uBAAA,KAAV,CAAyC,mCACxB,EAAAC,gBAAgB,OAEzD,OAEA,qBAeF,OACF,OAEA,gBACE,wBAKF,OAEA,gBAEE,gBAMA,kBAEF,OACF,Q,MArDM,mCAGa,0CAKW,sCAAuB,6BAAvB,CAAuB,4CAAvB,CAAuB,kCAS3C,mCAkBO,0EAA2D,sDAA3D,CAA2D,wDAA3D,CAA2D,mC,y0tCE5BpE,e,qBACG,0CAA8B,+C,0BANvC,gBACE,iBACE,YACE,QACA,aACA,qBAKF,OACF,OACF,Q,oBATM,2CAEG,kC,wCAUP,iBAEE,eACG,yEAEH,OACF,O,uBAFK,sDCyBF,MAAMC,GAgBX,YAAoBzG,EACA4B,EACD4C,EACCkC,GAHA,KAAA1G,OACA,KAAA4B,aACD,KAAA4C,UACC,KAAAkC,YAhBpB,KAAAC,UAAYrG,KAAKkE,QAAQG,QAAQ,qBAEjC,KAAAvE,KAAO,CACLwG,cAAetG,KAAKN,KAAKO,EAAE,+BAC3BsG,wBAAyBvG,KAAKN,KAAKO,EAAE,yCACrCuG,wBAAyBxG,KAAKN,KAAKO,EAAE,0CAGvC,KAAAwG,iBAAkB,EAWlB,WAGE,GAFAzG,KAAK0G,WAAa1G,KAAKkE,QAAQhB,OAAOI,OAEd,IAApBtD,KAAK0G,WACP,OAGF,MAAMC,EAAUC,OAAO5G,KAAKsB,WAAWuF,eAEvC7G,KAAKoG,UAAUU,UACb,CACEC,cAAeJ,EAAQpD,KAAK,mCAAmC,GAC/DyD,gBAAiBJ,OAAO,iCAAiC,GACzDK,eAAgBN,EAAQpD,KAAK,wCAAwC,GACrE2D,qBAAsBP,EAAQpD,KAAK,sCAAsC,GACzE4D,yBAA0BR,EAAQpD,KAAK,+BAA+B,IAExEvD,KAAKkE,QAAQf,UAIjB,cACEnD,KAAKoG,UAAUgB,UAIjB,iBACMpH,KAAK0G,aACP1G,KAAKyG,iBAAkB,EACvBzG,KAAKoG,UAAUiB,oBAAmB,IAKtC,gBAAgBC,GACVtH,KAAK0G,aAAe1G,KAAKuH,eAAeV,cAAeW,SAASF,KAClEtH,KAAKyG,iBAAkB,EACvBzG,KAAKoG,UAAUiB,oBAAmB,IAItC,eAAeI,GASb,OARAzH,KAAK0H,iBAGL1H,KAAK2H,YAAYd,cAAce,QAI/BH,EAAMI,4BACC,G,uCAxEE1B,IAAkB,wC,wBAAlBA,GAAkB,mD,OAAA,M,uLAAlB,qB,CAAgB,gCAAhB,+BAA8B,S,ksBD/C3C,kBAGE,uBAcA,gBACE,uBAQA,gBACA,qBAIF,OAEA,mBACF,Q,MA/BO,sCAeE,wD,6qDEbF,MAAM2B,I,uCAAAA,K,wBAAAA,GAAc,wEAFd,e,wJCFN,SAASC,MAASC,GACrB,MAAM1E,EAAS0E,EAAW1E,OAC1B,GAAe,IAAXA,EACA,MAAM,IAAI2E,MAAM,uCAEpB,OAAQC,GAAW,OAAA9F,GAAA,GAEvB,SAAiB+F,EAAO7E,GAcpB,OAbgB8E,IACZ,IAAIC,EAAcD,EAClB,IAAK,IAAIE,EAAI,EAAGA,EAAIhF,EAAQgF,IAAK,CAC7B,MAAMC,EAAmB,MAAfF,EAAsBA,EAAYF,EAAMG,SAAMxD,EACxD,QAAU,IAANyD,EAIA,OAHAF,EAAcE,EAMtB,OAAOF,GAdYG,CAAQR,EAAY1E,GAAxB,CAAiC4E,G,kICNxD,gB,wFAIA,gBAGE,uBAIA,qBAEU,qFAAgD,0EAG1D,OACF,O,uBAZK,qDAMO,8DAA+C,yC,wCAS3D,gBAGE,oBAES,yFAAoD,0EAI7D,OACF,O,uBARK,qDACM,qDAAsC,0C,uBAUjD,iBAEE,8BACF,QCRO,MAAM,WAAkC,KAV/C,c,oBAqBS,KAAAO,qBAAuB,CAC5BC,oBAAoB,GAKtB,WACE9G,MAAM0D,WAINtF,KAAK2I,eACEC,UACAC,KAAK,IAAM7I,KAAK2I,eAAeG,UAAU,eAAgB,IAEhE9I,KAAK+I,gBACEC,QACAlI,KACCd,KAAKiJ,iBACLlB,GAAM,SACN,OAAAmB,GAAA,MAEDzD,UAAWtE,IACG,MAATA,GAAiBA,GAASnB,KAAKmJ,cAAcC,SAC/CpJ,KAAKqJ,eAAgB,EAErBrJ,KAAKqJ,eAAgB,EAGvBrJ,KAAKsJ,MAAMC,kBAIX,yBAAyB1D,IAK5B,wBACL,QAAI7F,KAAKwJ,WAAqD,IAAxCxJ,KAAKyJ,iBAAiBvG,OAAOI,UAG1CtD,KAAKwB,QAAQH,uBAAyB9B,GACtCS,KAAKwB,QAAQH,uBAAyB7B,GAIjD,yBAAyBiI,GACvB,MAAM,cAACiC,EAAa,OAAEC,GAAUlC,EAEhC,IAAKzH,KAAK4J,sBAAuB,CAC/B5J,KAAK4J,uBAAwB,EAE7B5J,KAAK6J,KAAKC,kBAAkB,KAC1BC,WAAW,IAAM/J,KAAK4J,uBAAwB,EAAO,OAGvD,MAAMI,EAAKhK,KAAKiK,OAAOC,aAAalG,IAAI0F,GAAeS,MAEnDH,GAAMhK,KAAKE,OAAOkK,iBAAmBJ,EAAGK,eAC1CrK,KAAKE,OAAOoK,cAAcN,EAAI,GAI9BL,GACF3J,KAAKuK,kBAAkBb,EAAe1J,KAAK+I,gBAAgB7H,OAAOC,OAItE,cAAcsG,GACZzH,KAAKuK,kBAAkB9C,EAAMiC,cAAe1J,KAAK+I,gBAAgB7H,OAAOC,OAAO,GAGjF,kBAAkBuI,EAAsBvI,EAAeyG,GAGrD,MAAM4C,EAAYxK,KAAKE,OAAOiC,iBACV,aAAenC,KAAKyK,QACpB,uBAGdvJ,EAAS,CAAEwI,gBAAevI,QAAOyG,SAEvC5H,KAAKyK,OAAO9H,GAAG6H,EAAWtJ,I,sCA9FjB,K,wBAAA,GAAyB,4CAPzB,CACT,CAAEwJ,QAAS,KAAgCC,SAAU,MACrD,KACA,OACD,u8BDzBH,uB,gBAIA,uBAgBA,uBAaA,wB,MAhCK,6DAKA,+DAcA,sCAcA,gD,4sECLY,cAAd,e,2BAAsB,I,+BACR,cAAd,e,2BAA+B9H,I,wCACjB,cAAd,e,2BAA6B,O,sCACf,cAAd,e,2BAA8B,oB,uCAChB,cAAd,e,2BAAqB,M,8BACP,cAAd,e,2BAAqB,O,8BACP,cAAd,e,2BAAqB,O,8BACP,cAAd,e,2BAAmB,M,0CART,I,8BCUN,MAAM+H,GAAmC,CAC9C,CACEC,KAAM,MACNC,OAAQ,OACRC,IAAK,oCACLC,UAAU,EACVhG,UAAW,KACXiG,WAAY,kBACZ/J,OAAQ,CAENgK,YAAa,CAAEC,KAAM,gBAAiBC,SAAS,GAC/ClI,OAAQ,CAAEiI,KAAM,gBAAiBC,SAAS,GAC1CC,UAAW,CAAEF,KAAM,MAAOC,SAAS,KAGvC,CACEP,KAAM,kBACNE,IAAK,GACL/F,UAAW,EACXiG,WAAavK,GACiBA,EAAW6D,WAAWP,IAAI,KAE3B7B,iBACnB,wBACA,wBAGZ,CACE0I,KAAM,uBACNE,IAAK,qBACL7J,OAAQ,CACNC,OAAO,GAETiE,KAAM,CACJkG,UAAW,uBACXjG,SAAU,2BACVkG,UAAW,cAEbC,gBAAgB,EAChBC,MAAO,CACL,eAAgB,CAAEzG,UAAW,MAGjC,CACE6F,KAAM,wBACNE,IAAK,sBACL7J,OAAQ,CACNC,OAAO,GAETiE,KAAM,CACJkG,UAAW,wBACXC,UAAW,SACXlG,SAAU,4BACVqG,YAAa,gDAEfF,gBAAgB,EAChBC,MAAO,CACL,eAAgB,CAAEzG,UAAWmB,IAC7B,gBAAiB,CAAEnB,UAAW,MAGlC,CACE6F,KAAM,wBACNE,IAAK,SACL3F,KAAM,CACJmG,UAAW,aACXlG,SAAU,6BAEZmG,gBAAgB,EAChBC,MAAO,CAGL,gBAAiB,CAAEzG,UAAW8C,IAC9B,eAAgB,CAAE9C,UAAWmB,MAGjC,CACE0E,KAAM,sBACNE,IAAK,sBACLS,gBAAgB,EAChBpG,KAAM,CACJkG,UAAW,uBACXK,uBAAuB,EACvBJ,UAAW,cAEbE,MAAO,CAAC,eAAgB,CAAEzG,UAAU,QAEtC,CACE6F,KAAM,uBACNE,IAAK,4CACL3F,KAAM,CACJkG,UAAW,uBACXC,UAAW,cAEbC,gBAAgB,EAChBP,WAAY,mCAGX,aACD,4BACAnG,EACA,UACAA,GACA,EACA,2BAGC,aACD,4BACAA,EACA,SAGC,aACD,6BACAA,EACA,SAGC,aACD,6BACAA,EACA,O,2CChFG,MAAM8G,I,wBAAAA,K,qDAAAA,KAA0B,UAtB1B,CACT,IACA,EACA/I,GACD,SAdQ,CACP,IACA,KACA,KACA,KACA,IACA,iBAAegJ,SAAS,CACtB5B,OAAQW","file":"bim-ifc_models-openproject-ifc-models-module.d33d40c411078a09c89f.js","sourcesContent":["// -- copyright\n// OpenProject is an open source project management software.\n// Copyright (C) 2012-2020 the OpenProject GmbH\n//\n// This program is free software; you can redistribute it and/or\n// modify it under the terms of the GNU General Public License version 3.\n//\n// OpenProject is a fork of ChiliProject, which is a fork of Redmine. The copyright follows:\n// Copyright (C) 2006-2013 Jean-Philippe Lang\n// Copyright (C) 2010-2013 the ChiliProject Team\n//\n// This program is free software; you can redistribute it and/or\n// modify it under the terms of the GNU General Public License\n// as published by the Free Software Foundation; either version 2\n// of the License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with this program; if not, write to the Free Software\n// Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n//\n// See docs/COPYRIGHT.rdoc for more details.\n// ++\n\nimport {Injectable, OnDestroy} from '@angular/core';\nimport {I18nService} from 'core-app/modules/common/i18n/i18n.service';\nimport {Observable} from \"rxjs\";\nimport {StateService, TransitionService} from \"@uirouter/core\";\nimport {input} from \"reactivestates\";\nimport {takeUntil} from \"rxjs/operators\";\n\n\nexport const bimListViewIdentifier = 'list';\nexport const bimTableViewIdentifier = 'table';\nexport const bimSplitViewCardsIdentifier = 'splitCards';\nexport const bimSplitViewListIdentifier = 'splitList';\nexport const bimViewerViewIdentifier = 'viewer';\n\nexport type BimViewState = 'list'|'viewer'|'splitList'|'splitCards'|'table';\n\n@Injectable()\nexport class BimViewService implements OnDestroy {\n  private _state = input<BimViewState>();\n\n  public text:any = {\n    list: this.I18n.t('js.views.card'),\n    viewer: this.I18n.t('js.ifc_models.views.viewer'),\n    splitList: this.I18n.t('js.ifc_models.views.split'),\n    splitCards: this.I18n.t('js.ifc_models.views.split_cards'),\n    table: this.I18n.t('js.views.list'),\n  };\n\n  public icon:any = {\n    list: 'icon-view-card',\n    viewer: 'icon-view-model',\n    splitList: 'icon-view-split-viewer-table',\n    splitCards: 'icon-view-split2',\n    table: 'icon-view-list',\n  };\n\n  private transitionFn:Function;\n\n  constructor(readonly I18n:I18nService,\n              readonly transitions:TransitionService,\n              readonly state:StateService) {\n\n    this.detectView();\n\n    this.transitionFn = this.transitions.onSuccess({}, (transition) => {\n      this.detectView();\n    });\n  }\n\n  get view$():Observable<BimViewState> {\n    return this._state.values$();\n  }\n\n  public observeUntil(unsubscribe:Observable<any>) {\n    return this.view$.pipe(takeUntil(unsubscribe));\n  }\n\n  get current():BimViewState {\n    return this._state.getValueOr(bimSplitViewCardsIdentifier);\n  }\n\n  public currentViewerState():BimViewState {\n    if (this.state.includes('bim.partitioned.list')) {\n      return this.state.params?.cards ?\n              bimListViewIdentifier :\n              bimTableViewIdentifier;\n    } else if (this.state.includes('bim.**.model')) {\n      return bimViewerViewIdentifier;\n    } else if (this.state.includes('bim.partitioned.show')) {\n      return this.state.params?.cards || this.state.params?.cards == null ?\n              bimListViewIdentifier :\n              bimTableViewIdentifier;\n    } else {\n      return this.state.params?.cards || this.state.params?.cards == null ?\n              bimSplitViewCardsIdentifier :\n              bimSplitViewListIdentifier;\n    }\n  }\n\n  private detectView() {\n    this._state.putValue(this.currentViewerState());\n  }\n\n  ngOnDestroy() {\n    this.transitionFn();\n  }\n}\n","//-- copyright\n// OpenProject is an open source project management software.\n// Copyright (C) 2012-2020 the OpenProject GmbH\n//\n// This program is free software; you can redistribute it and/or\n// modify it under the terms of the GNU General Public License version 3.\n//\n// OpenProject is a fork of ChiliProject, which is a fork of Redmine. The copyright follows:\n// Copyright (C) 2006-2013 Jean-Philippe Lang\n// Copyright (C) 2010-2013 the ChiliProject Team\n//\n// This program is free software; you can redistribute it and/or\n// modify it under the terms of the GNU General Public License\n// as published by the Free Software Foundation; either version 2\n// of the License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with this program; if not, write to the Free Software\n// Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n//\n// See docs/COPYRIGHT.rdoc for more details.\n//++\n\nimport {OPContextMenuService} from \"core-components/op-context-menu/op-context-menu.service\";\nimport {Directive, ElementRef} from \"@angular/core\";\nimport {OpContextMenuTrigger} from \"core-components/op-context-menu/handlers/op-context-menu-trigger.directive\";\nimport {I18nService} from \"core-app/modules/common/i18n/i18n.service\";\nimport {StateService} from \"@uirouter/core\";\n\nimport {WorkPackageFiltersService} from \"core-components/filters/wp-filters/wp-filters.service\";\nimport {\n  bimListViewIdentifier, bimSplitViewListIdentifier, bimSplitViewCardsIdentifier, bimTableViewIdentifier,\n  bimViewerViewIdentifier,\n  BimViewService\n} from \"core-app/modules/bim/ifc_models/pages/viewer/bim-view.service\";\nimport {ViewerBridgeService} from \"core-app/modules/bim/bcf/bcf-viewer-bridge/viewer-bridge.service\";\nimport {\n  WorkPackageViewDisplayRepresentationService,\n  wpDisplayCardRepresentation,\n  wpDisplayListRepresentation,\n} from \"core-app/modules/work_packages/routing/wp-view-base/view-services/wp-view-display-representation.service\";\n\n@Directive({\n  selector: '[bimViewDropdown]'\n})\nexport class BimViewToggleDropdownDirective extends OpContextMenuTrigger {\n\n  constructor(readonly elementRef:ElementRef,\n              readonly opContextMenu:OPContextMenuService,\n              readonly bimView:BimViewService,\n              readonly I18n:I18nService,\n              readonly state:StateService,\n              readonly wpFiltersService:WorkPackageFiltersService,\n              readonly viewerBridgeService:ViewerBridgeService,\n              readonly wpDisplayRepresentation:WorkPackageViewDisplayRepresentationService) {\n\n    super(elementRef, opContextMenu);\n  }\n\n  protected open(evt:JQuery.TriggeredEvent) {\n    this.buildItems();\n    this.opContextMenu.show(this, evt);\n  }\n\n  public get locals() {\n    return {\n      items: this.items,\n      contextMenuId: 'bim-view-context-menu'\n    };\n  }\n\n  private buildItems() {\n    const current = this.bimView.current;\n    let items = this.viewerBridgeService.shouldShowViewer ?\n                  [bimViewerViewIdentifier, bimListViewIdentifier, bimSplitViewCardsIdentifier, bimSplitViewListIdentifier, bimTableViewIdentifier] :\n                  [bimListViewIdentifier, bimTableViewIdentifier];\n\n    this.items = items\n                  .map(key => {\n                    return {\n                      hidden: key === current,\n                      linkText: this.bimView.text[key],\n                      icon: this.bimView.icon[key],\n                      onClick: () => {\n                        // Close filter section\n                        if (this.wpFiltersService.visible) {\n                          this.wpFiltersService.toggleVisibility();\n                        }\n\n                        switch (key) {\n                          // This project controls the view representation of the data through\n                          // the wpDisplayRepresentation service that modifies the QuerySpace\n                          // to inform the rest of the app about which display mode is currently\n                          // active (this.querySpace.query.live$).\n                          // Under the hood it is done by modifying the params of actual route.\n                          // Because of that, it is not possible to call this.state.go and\n                          // this.wpDisplayRepresentation.setDisplayRepresentation at the same\n                          // time, it raises a route error (The transition has been superseded by\n                          // a different transition...). To avoid this error, we are passing\n                          // a cards params to inform the view about the display representation mode\n                          // it has to show (cards or list).\n                          case bimListViewIdentifier:\n                              this.state.go('bim.partitioned.list', {cards: true});\n                            break;\n                            case bimTableViewIdentifier:\n                              this.state.go('bim.partitioned.list', {cards: false});\n                            break;\n                          case bimViewerViewIdentifier:\n                            this.state.go('bim.partitioned.model');\n                            break;\n                          case bimSplitViewCardsIdentifier:\n                            this.state.go('bim.partitioned.split', {cards: true});\n                            break;\n                          case bimSplitViewListIdentifier:\n                            this.state.go('bim.partitioned.split', {cards: false});\n                            break;\n                        }\n\n                        return true;\n                      }\n                    };\n                  });\n  }\n}\n\n","// -- copyright\n// OpenProject is an open source project management software.\n// Copyright (C) 2012-2020 the OpenProject GmbH\n//\n// This program is free software; you can redistribute it and/or\n// modify it under the terms of the GNU General Public License version 3.\n//\n// OpenProject is a fork of ChiliProject, which is a fork of Redmine. The copyright follows:\n// Copyright (C) 2006-2013 Jean-Philippe Lang\n// Copyright (C) 2010-2013 the ChiliProject Team\n//\n// This program is free software; you can redistribute it and/or\n// modify it under the terms of the GNU General Public License\n// as published by the Free Software Foundation; either version 2\n// of the License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with this program; if not, write to the Free Software\n// Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n//\n// See docs/COPYRIGHT.rdoc for more details.\n// ++\n\nimport {ChangeDetectionStrategy, Component} from '@angular/core';\nimport {I18nService} from 'core-app/modules/common/i18n/i18n.service';\nimport {BimViewService} from \"core-app/modules/bim/ifc_models/pages/viewer/bim-view.service\";\n\n\n@Component({\n  template: `\n    <ng-container *ngIf=\"(view$ | async) as current\">\n      <button class=\"button\"\n              id=\"bim-view-toggle-button\"\n              bimViewDropdown>\n        <op-icon icon-classes=\"button--icon {{bimView.icon[current]}}\"></op-icon>\n        <span class=\"button--text\"\n              aria-hidden=\"true\"\n              [textContent]=\"bimView.text[current]\">\n        </span>\n        <op-icon icon-classes=\"button--icon icon-small icon-pulldown\"></op-icon>\n      </button>\n    </ng-container>\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  selector: 'bim-view-toggle-button'\n})\nexport class BimViewToggleButtonComponent {\n\n  view$ = this.bimView.view$;\n\n  constructor(readonly I18n:I18nService,\n              readonly bimView:BimViewService) {\n  }\n}\n","import {Injectable} from \"@angular/core\";\nimport {PathHelperService} from \"core-app/modules/common/path-helper/path-helper.service\";\nimport {GonService} from \"core-app/modules/common/gon/gon.service\";\nimport {CurrentProjectService} from \"core-components/projects/current-project.service\";\n\nexport interface IFCPermissionMap {\n  manage_ifc_models:boolean;\n  manage_bcf:boolean;\n}\n\nexport interface IFCGonDefinition {\n  models:IfcModelDefinition[];\n  shown_models:number[];\n  projects:IfcProjectDefinition[];\n  xkt_attachment_ids:{ [id:number]:number };\n  metadata_attachment_ids:{ [id:number]:number };\n  permissions:IFCPermissionMap;\n}\n\nexport interface IfcProjectDefinition {\n  name:string;\n  id:number;\n}\n\nexport interface IfcModelDefinition {\n  name:string;\n  id:number;\n  default:boolean;\n  saoEnabled:boolean;\n}\n\n@Injectable()\nexport class IfcModelsDataService {\n\n  constructor(readonly paths:PathHelperService,\n              readonly currentProjectService:CurrentProjectService,\n              readonly gon:GonService) {\n  }\n\n  public get models():IfcModelDefinition[] {\n    return this.gonIFC.models;\n  }\n\n  public get projects():IfcProjectDefinition[] {\n    return this.gonIFC.projects;\n  }\n\n  public get shownModels():number[] {\n    return this.gonIFC.shown_models;\n  }\n\n  public isSingleModel() {\n    return this.shownModels.length === 1;\n  }\n\n  public isDefaults():boolean {\n    return !this\n      .models\n      .find(item => item.default && this.shownModels.indexOf(item.id) === -1);\n  }\n\n  public get manageIFCPath() {\n    return this.paths.ifcModelsPath(this.currentProjectService.identifier!);\n  }\n\n  public allowed(permission:keyof IFCPermissionMap):boolean {\n    return !!this.gonIFC.permissions[permission];\n  }\n\n  private get gonIFC():IFCGonDefinition {\n    return (this.gon.get('ifc_models') as IFCGonDefinition);\n  }\n}","// -- copyright\n// OpenProject is an open source project management software.\n// Copyright (C) 2012-2020 the OpenProject GmbH\n//\n// This program is free software; you can redistribute it and/or\n// modify it under the terms of the GNU General Public License version 3.\n//\n// OpenProject is a fork of ChiliProject, which is a fork of Redmine. The copyright follows:\n// Copyright (C) 2006-2013 Jean-Philippe Lang\n// Copyright (C) 2010-2013 the ChiliProject Team\n//\n// This program is free software; you can redistribute it and/or\n// modify it under the terms of the GNU General Public License\n// as published by the Free Software Foundation; either version 2\n// of the License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with this program; if not, write to the Free Software\n// Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n//\n// See docs/COPYRIGHT.rdoc for more details.\n// ++\n\nimport {ChangeDetectionStrategy, Component} from '@angular/core';\nimport {I18nService} from 'core-app/modules/common/i18n/i18n.service';\nimport {IfcModelsDataService} from \"core-app/modules/bim/ifc_models/pages/viewer/ifc-models-data.service\";\n\n\n@Component({\n  template: `\n    <a *ngIf=\"manageAllowed\"\n       class=\"button\"\n       [href]=\"manageIFCPath\">\n      <op-icon icon-classes=\"button--icon icon-settings2\"></op-icon>\n      <span class=\"button--text\"\n            [textContent]=\"text.manage\"\n            aria-hidden=\"true\"></span>\n    </a>\n\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  selector: 'bim-view-toggle-button'\n})\nexport class BimManageIfcModelsButtonComponent {\n\n  text = {\n    manage: this.I18n.t('js.ifc_models.models.ifc_models'),\n  };\n\n  manageAllowed = this.ifcData.allowed('manage_ifc_models');\n  manageIFCPath = this.ifcData.manageIFCPath;\n\n  constructor(readonly I18n:I18nService,\n              readonly ifcData:IfcModelsDataService) {\n  }\n}\n","<div class=\"work-packages-partitioned-query-space--container\"\n      [ngClass]=\"currentPartition\">\n  <div class=\"toolbar-container -editable\">\n    <div class=\"toolbar\">\n      <back-button *ngIf=\"backButtonCallback\"\n                   linkClass=\"back-button\"\n                   [customBackMethod]=\"backButtonCallback\">\n      </back-button>\n\n      <editable-toolbar-title [title]=\"selectedTitle\"\n                              [inFlight]=\"toolbarDisabled\"\n                              [showSaveCondition]=\"showToolbarSaveButton\"\n                              (onSave)=\"changeChangesFromTitle($event)\"\n                              (onEmptySubmit)=\"updateTitleName('')\"\n                              [editable]=\"titleEditingEnabled\">\n      </editable-toolbar-title>\n\n      <ul class=\"toolbar-items hide-when-print\"\n          *ngIf=\"showToolbar\">\n\n        <ng-container *ngFor=\"let definition of toolbarButtonComponents\">\n          <li class=\"toolbar-item\"\n              *ngIf=\"!definition.show || definition.show()\"\n              [ngClass]=\"definition.containerClasses\">\n            <ndc-dynamic [ndcDynamicComponent]=\"definition.component\"\n                         [ndcDynamicInputs]=\"definition.inputs\"\n                         [ndcDynamicInjector]=\"injector\"\n                         [ndcDynamicOutputs]=\"definition.outputs\">\n            </ndc-dynamic>\n          </li>\n        </ng-container>\n      </ul>\n    </div>\n  </div>\n\n  <div class=\"work-packages-partitioned-query-space--filter-area\">\n    <ndc-dynamic [ndcDynamicComponent]=\"filterContainerDefinition.component\"\n                 [ndcDynamicInputs]=\"filterContainerDefinition.inputs\"\n                 [ndcDynamicOutputs]=\"filterContainerDefinition.outputs\"\n                 [ndcDynamicInjector]=\"injector\">\n    </ndc-dynamic>\n  </div>\n\n  <div class=\"work-packages-partitioned-page--content-container\">\n    <!-- Left content view -->\n    <div class=\"work-packages-partitioned-page--content-left loading-indicator--location\"\n         data-indicator-name=\"table\"\n         ui-view=\"content-left\">\n    </div>\n\n    <!-- Right content view -->\n    <div class=\"work-packages-partitioned-page--content-right\"\n         ui-view=\"content-right\"></div>\n  </div>\n</div>\n","import {ChangeDetectionStrategy, Component, Injector, ViewEncapsulation} from \"@angular/core\";\nimport {GonService} from \"core-app/modules/common/gon/gon.service\";\nimport {\n  PartitionedQuerySpacePageComponent,\n  ToolbarButtonComponentDefinition\n} from \"core-app/modules/work_packages/routing/partitioned-query-space-page/partitioned-query-space-page.component\";\nimport {WorkPackageFilterButtonComponent} from \"core-components/wp-buttons/wp-filter-button/wp-filter-button.component\";\nimport {ZenModeButtonComponent} from \"core-components/wp-buttons/zen-mode-toggle-button/zen-mode-toggle-button.component\";\nimport {\n  bimListViewIdentifier,\n  bimViewerViewIdentifier,\n  BimViewService\n} from \"core-app/modules/bim/ifc_models/pages/viewer/bim-view.service\";\nimport {BimViewToggleButtonComponent} from \"core-app/modules/bim/ifc_models/toolbar/view-toggle/bim-view-toggle-button.component\";\nimport {IfcModelsDataService} from \"core-app/modules/bim/ifc_models/pages/viewer/ifc-models-data.service\";\nimport {QueryParamListenerService} from \"core-components/wp-query/query-param-listener.service\";\nimport {QueryResource} from \"core-app/modules/hal/resources/query-resource\";\nimport {BimManageIfcModelsButtonComponent} from \"core-app/modules/bim/ifc_models/toolbar/manage-ifc-models-button/bim-manage-ifc-models-button.component\";\nimport {WorkPackageCreateButtonComponent} from \"core-components/wp-buttons/wp-create-button/wp-create-button.component\";\nimport {StateService, TransitionService} from \"@uirouter/core\";\nimport {BehaviorSubject} from \"rxjs\";\nimport {BcfImportButtonComponent} from \"core-app/modules/bim/ifc_models/toolbar/import-export-bcf/bcf-import-button.component\";\nimport {BcfExportButtonComponent} from \"core-app/modules/bim/ifc_models/toolbar/import-export-bcf/bcf-export-button.component\";\nimport {componentDestroyed} from \"@w11k/ngx-componentdestroyed\";\nimport {ViewerBridgeService} from \"core-app/modules/bim/bcf/bcf-viewer-bridge/viewer-bridge.service\";\n\n@Component({\n  templateUrl: '/app/modules/work_packages/routing/partitioned-query-space-page/partitioned-query-space-page.component.html',\n  styleUrls: [\n    '/app/modules/work_packages/routing/partitioned-query-space-page/partitioned-query-space-page.component.sass',\n    './styles/generic.sass'\n  ],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [\n    QueryParamListenerService,\n  ]\n})\nexport class IFCViewerPageComponent extends PartitionedQuerySpacePageComponent {\n\n  text = {\n    title: this.I18n.t('js.bcf.management'),\n    delete: this.I18n.t('js.button_delete'),\n    edit: this.I18n.t('js.button_edit'),\n    areYouSure: this.I18n.t('js.text_are_you_sure')\n  };\n\n  newRoute$ = new BehaviorSubject<string | undefined>(undefined);\n  transitionUnsubscribeFn:Function;\n\n  toolbarButtonComponents:ToolbarButtonComponentDefinition[] = [\n    {\n      component: WorkPackageCreateButtonComponent,\n      inputs: {\n        stateName$: this.newRoute$,\n        allowed: ['work_packages.createWorkPackage', 'work_package.copy']\n      }\n    },\n    {\n      component: BcfImportButtonComponent,\n      show: () => this.ifcData.allowed('manage_bcf'),\n      containerClasses: 'hidden-for-mobile'\n    },\n    {\n      component: BcfExportButtonComponent,\n      show: () => this.ifcData.allowed('manage_bcf'),\n      containerClasses: 'hidden-for-mobile'\n    },\n    {\n      component: WorkPackageFilterButtonComponent,\n      show: () => this.bimView.currentViewerState() !== bimViewerViewIdentifier\n    },\n    {\n      component: BimViewToggleButtonComponent,\n      containerClasses: 'hidden-for-mobile'\n    },\n    {\n      component: ZenModeButtonComponent,\n      containerClasses: 'hidden-for-mobile'\n    },\n    {\n      component: BimManageIfcModelsButtonComponent,\n      show: () => {\n        // Hide 'Manage models' toolbar button on plugin environment (ie: Revit)\n        return this.viewerBridgeService.shouldShowViewer &&\n               this.ifcData.allowed('manage_ifc_models');\n      }\n    }\n  ];\n\n  get newRoute () {\n    // Open new work packages in full view when there\n    // is no viewer (ie: Revit)\n    return this.viewerBridgeService.shouldShowViewer ?\n      this.state.current.data.newRoute :\n      'bim.partitioned.new';\n  }\n\n  constructor(readonly ifcData:IfcModelsDataService,\n              readonly state:StateService,\n              readonly bimView:BimViewService,\n              readonly transition:TransitionService,\n              readonly gon:GonService,\n              readonly injector:Injector,\n              readonly viewerBridgeService:ViewerBridgeService) {\n    super(injector);\n  }\n\n  ngOnInit() {\n    super.ngOnInit();\n    this.newRoute$.next(this.newRoute);\n\n    this\n      .bimView\n      .observeUntil(componentDestroyed(this))\n      .subscribe((view) => {\n        this.filterAllowed = view !== bimViewerViewIdentifier;\n      });\n\n    // Keep the new route up to date depending on where we move to\n    this.transitionUnsubscribeFn = this.transition.onSuccess({}, () => {\n      this.newRoute$.next(this.newRoute);\n    });\n  }\n\n  /**\n   * We disable using the query title for now,\n   * but this might be useful later.\n   *\n   * To re-enable query titles, remove this function.\n   *\n   * @param query\n   */\n  updateTitle(query?:QueryResource) {\n    if (this.bimView.current === bimListViewIdentifier) {\n      super.updateTitle(query);\n    } else {\n      this.selectedTitle = this.I18n.t('js.bcf.management');\n    }\n\n    // For now, disable any editing\n    this.titleEditingEnabled = false;\n  }\n}\n","<div #outerContainer\n     class=\"ifc-model-viewer\">\n\n  <div *ngIf=\"modelCount === 0\" class=\"notification-box -info\">\n    <div class=\"notification-box--content\">\n      <p>\n        {{ text.empty_warning }}\n        <br/>\n        <a *ngIf=\"canManage\"\n           [href]=\"ifcData.manageIFCPath\"\n           target=\"_blank\"\n           [textContent]=\"text.use_this_link_to_manage\">\n        </a>\n      </p>\n    </div>\n  </div>\n\n  <div class=\"ifc-model-viewer--container xeokit-busy-modal-backdrop\">\n    <div *ngIf=\"modelCount && !keyboardEnabled\"\n         class=\"ifc-model-viewer--focus-warning\">\n      <a class=\"ifc-model-viewer--keyboard-disabled-icon icon-no-color icon-input-disabled\"\n         (mousedown)=\"enableFromIcon($event)\"\n         [attr.title]=\"text.keyboard_input_disabled\">\n      </a>\n    </div>\n\n    <div class=\"ifc-model-viewer--toolbar-container\"></div>\n    <canvas #modelCanvas\n            class=\"ifc-model-viewer--model-canvas\"\n            tabindex=\"0\">\n    </canvas>\n  </div>\n\n  <canvas class=\"ifc-model-viewer--nav-cube-canvas\"></canvas>\n</div>","// -- copyright\n// OpenProject is an open source project management software.\n// Copyright (C) 2012-2020 the OpenProject GmbH\n//\n// This program is free software; you can redistribute it and/or\n// modify it under the terms of the GNU General Public License version 3.\n//\n// OpenProject is a fork of ChiliProject, which is a fork of Redmine. The copyright follows:\n// Copyright (C) 2006-2013 Jean-Philippe Lang\n// Copyright (C) 2010-2013 the ChiliProject Team\n//\n// This program is free software; you can redistribute it and/or\n// modify it under the terms of the GNU General Public License\n// as published by the Free Software Foundation; either version 2\n// of the License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with this program; if not, write to the Free Software\n// Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n//\n// See docs/COPYRIGHT.rdoc for more details.\n// ++\n\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  ElementRef,\n  HostListener,\n  OnDestroy,\n  OnInit,\n  ViewChild\n} from '@angular/core';\nimport {IFCViewerService} from \"core-app/modules/bim/ifc_models/ifc-viewer/ifc-viewer.service\";\nimport {IfcModelsDataService} from \"core-app/modules/bim/ifc_models/pages/viewer/ifc-models-data.service\";\nimport {I18nService} from \"core-app/modules/common/i18n/i18n.service\";\n\n@Component({\n  selector: 'ifc-viewer',\n  templateUrl: './ifc-viewer.component.html',\n  styleUrls: ['./ifc-viewer.component.sass'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class IFCViewerComponent implements OnInit, OnDestroy {\n  private viewerUI:any;\n  modelCount:number;\n  canManage = this.ifcData.allowed('manage_ifc_models');\n\n  text = {\n    empty_warning: this.I18n.t('js.ifc_models.empty_warning'),\n    use_this_link_to_manage: this.I18n.t('js.ifc_models.use_this_link_to_manage'),\n    keyboard_input_disabled: this.I18n.t('js.ifc_models.keyboard_input_disabled')\n  };\n\n  keyboardEnabled = false;\n\n  @ViewChild('outerContainer') outerContainer:ElementRef;\n  @ViewChild('modelCanvas') modelCanvas:ElementRef;\n\n  constructor(private I18n:I18nService,\n              private elementRef:ElementRef,\n              public ifcData:IfcModelsDataService,\n              private ifcViewer:IFCViewerService) {\n  }\n\n  ngOnInit():void {\n    this.modelCount = this.ifcData.models.length;\n\n    if (this.modelCount === 0) {\n      return;\n    }\n\n    const element = jQuery(this.elementRef.nativeElement as HTMLElement);\n\n    this.ifcViewer.newViewer(\n      {\n        canvasElement: element.find(\".ifc-model-viewer--model-canvas\")[0], // WebGL canvas\n        explorerElement: jQuery(\".ifc-model-viewer--tree-panel\")[0], // Left panel\n        toolbarElement: element.find(\".ifc-model-viewer--toolbar-container\")[0], // Toolbar\n        navCubeCanvasElement: element.find(\".ifc-model-viewer--nav-cube-canvas\")[0],\n        busyModelBackdropElement: element.find(\".xeokit-busy-modal-backdrop\")[0]\n      },\n      this.ifcData.projects\n    );\n  }\n\n  ngOnDestroy():void {\n    this.ifcViewer.destroy();\n  }\n\n  @HostListener('mousedown')\n  enableKeyBoard() {\n    if (this.modelCount) {\n      this.keyboardEnabled = true;\n      this.ifcViewer.setKeyboardEnabled(true);\n    }\n  }\n\n  @HostListener('window:mousedown', ['$event.target'])\n  disableKeyboard(target:Element) {\n    if (this.modelCount && !this.outerContainer.nativeElement!.contains(target)) {\n      this.keyboardEnabled = false;\n      this.ifcViewer.setKeyboardEnabled(false);\n    }\n  }\n\n  enableFromIcon(event:MouseEvent) {\n    this.enableKeyBoard();\n\n    // Focus on the canvas\n    this.modelCanvas.nativeElement.focus();\n\n    // Ensure we don't bubble this event to the window:mousedown handler\n    // as the target will already be removed from the DOM by angular\n    event.stopImmediatePropagation();\n    return false;\n  }\n}\n","import { Component } from '@angular/core';\n\n@Component({\n  template: '<div></div>'\n})\nexport class EmptyComponent {\n}\n","import { map } from './map';\nexport function pluck(...properties) {\n    const length = properties.length;\n    if (length === 0) {\n        throw new Error('list of properties cannot be empty.');\n    }\n    return (source) => map(plucker(properties, length))(source);\n}\nfunction plucker(props, length) {\n    const mapper = (x) => {\n        let currentProp = x;\n        for (let i = 0; i < length; i++) {\n            const p = currentProp != null ? currentProp[props[i]] : undefined;\n            if (p !== void 0) {\n                currentProp = p;\n            }\n            else {\n                return undefined;\n            }\n        }\n        return currentProp;\n    };\n    return mapper;\n}\n//# sourceMappingURL=pluck.js.map","<div class=\"result-overlay\"\n     *ngIf=\"(showResultOverlay$ | async) && showTableView\"></div>\n\n<!-- TABLE + TIMELINE horizontal split -->\n<div class=\"work-packages-split-view--tabletimeline-container\"\n     [ngClass]=\"{ '-with-resizer': showResizerInCardView() }\"\n     *ngIf=\"tableInformationLoaded && showTableView\">\n  <wp-resizer elementClass=\"work-packages-partitioned-page--content-right\"\n              localStorageKey=\"openProject-splitViewFlexBasis\">\n  </wp-resizer>\n\n  <wp-table [projectIdentifier]=\"CurrentProject.identifier\"\n            [configuration]=\"wpTableConfiguration\"\n            (itemClicked)=\"handleWorkPackageClicked($event)\"\n            (stateLinkClicked)=\"openStateLink($event)\"\n            class=\"work-packages-split-view--tabletimeline-content\">\n  </wp-table>\n</div>\n\n<!-- GRID representation of the WP -->\n<div *ngIf=\"!showTableView\"\n     class=\"work-packages--card-view-container\"\n     [ngClass]=\"{ '-with-resizer': showResizerInCardView() }\" >\n  <wp-grid [configuration]=\"wpTableConfiguration\"\n           [showResizer]=\"showResizerInCardView()\"\n           (itemClicked)=\"handleWorkPackageCardClicked($event)\"\n           (stateLinkClicked)=\"openStateLink($event)\"\n           resizerClass=\"work-packages-partitioned-page--content-right\"\n           resizerStorageKey=\"openProject-splitViewFlexBasis\">\n  </wp-grid>\n</div>\n\n<!-- Footer -->\n<div class=\"work-packages-split-view--tabletimeline-footer hide-when-print\"\n     *ngIf=\"tableInformationLoaded\">\n  <wp-table-pagination></wp-table-pagination>\n</div>\n","import {ChangeDetectionStrategy, Component, OnInit, NgZone} from \"@angular/core\";\nimport {WorkPackageListViewComponent} from \"core-app/modules/work_packages/routing/wp-list-view/wp-list-view.component\";\nimport {QueryResource} from \"core-app/modules/hal/resources/query-resource\";\nimport {HalResourceNotificationService} from \"core-app/modules/hal/services/hal-resource-notification.service\";\nimport {WorkPackageNotificationService} from \"core-app/modules/work_packages/notifications/work-package-notification.service\";\nimport {DragAndDropService} from \"core-app/modules/common/drag-and-drop/drag-and-drop.service\";\nimport {CausedUpdatesService} from \"core-app/modules/boards/board/caused-updates/caused-updates.service\";\nimport {bimSplitViewCardsIdentifier, bimSplitViewListIdentifier, bimListViewIdentifier, BimViewService} from \"core-app/modules/bim/ifc_models/pages/viewer/bim-view.service\";\nimport {InjectField} from \"core-app/helpers/angular/inject-field.decorator\";\nimport {IfcModelsDataService} from \"core-app/modules/bim/ifc_models/pages/viewer/ifc-models-data.service\";\nimport {WorkPackageViewColumnsService} from 'core-app/modules/work_packages/routing/wp-view-base/view-services/wp-view-columns.service';\nimport {UIRouterGlobals} from '@uirouter/core';\nimport {pluck, distinctUntilChanged} from \"rxjs/operators\";\nimport {States} from \"core-components/states.service\";\nimport {BcfApiService} from \"core-app/modules/bim/bcf/api/bcf-api.service\";\nimport {splitViewRoute} from \"core-app/modules/work_packages/routing/split-view-routes.helper\";\nimport {ViewerBridgeService} from \"core-app/modules/bim/bcf/bcf-viewer-bridge/viewer-bridge.service\";\n\n@Component({\n  templateUrl: '/app/modules/bim/ifc_models/bcf/list-container/bcf-list-container.component.html',\n  styleUrls: ['/app/modules/bim/ifc_models/bcf/list-container/bcf-list-container.component.sass'],\n  providers: [\n    { provide: HalResourceNotificationService, useClass: WorkPackageNotificationService },\n    DragAndDropService,\n    CausedUpdatesService\n  ],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class BcfListContainerComponent extends WorkPackageListViewComponent implements OnInit {\n  @InjectField() bimView:BimViewService;\n  @InjectField() ifcModelsService:IfcModelsDataService;\n  @InjectField() wpTableColumns:WorkPackageViewColumnsService;\n  @InjectField() uIRouterGlobals:UIRouterGlobals;\n  @InjectField() viewer:ViewerBridgeService;\n  @InjectField() states:States;\n  @InjectField() bcfApi:BcfApiService;\n  @InjectField() zone:NgZone;\n\n\n  public wpTableConfiguration = {\n    dragAndDropEnabled: false\n  };\n\n  public showViewPointInFlight:boolean;\n\n  ngOnInit() {\n    super.ngOnInit();\n\n    // Ensure we add a bcf thumbnail column\n    // until we can load the initial query\n    this.wpTableColumns\n          .onReady()\n          .then(() => this.wpTableColumns.addColumn('bcfThumbnail', 2));\n\n    this.uIRouterGlobals\n          .params$!\n          .pipe(\n            this.untilDestroyed(),\n            pluck('cards'),\n            distinctUntilChanged(),\n          )\n          .subscribe((cards:boolean) => {\n            if (cards == null || cards || this.deviceService.isMobile) {\n              this.showTableView = false;\n            } else {\n              this.showTableView = true;\n            }\n\n            this.cdRef.detectChanges();\n          });\n  }\n\n  protected updateViewRepresentation(query:QueryResource) {\n    // Overwrite the parent method because we are setting the view\n    // above through the cards parameter (showTableView)\n  }\n\n  public showResizerInCardView():boolean {\n    if (this.noResults && this.ifcModelsService.models.length === 0) {\n      return false;\n    } else {\n      return this.bimView.currentViewerState() === bimSplitViewCardsIdentifier ||\n             this.bimView.currentViewerState() === bimSplitViewListIdentifier;\n    }\n  }\n\n  handleWorkPackageClicked(event:{ workPackageId:string; double:boolean }) {\n    const {workPackageId, double} = event;\n\n    if (!this.showViewPointInFlight) {\n      this.showViewPointInFlight = true;\n\n      this.zone.runOutsideAngular(() => {\n        setTimeout(() => this.showViewPointInFlight = false, 500);\n      });\n\n      const wp = this.states.workPackages.get(workPackageId).value;\n\n      if (wp && this.viewer.viewerVisible() && wp.bcfViewpoints) {\n        this.viewer.showViewpoint(wp, 0);\n      }\n    }\n\n    if (double) {\n      this.goToWpDetailState(workPackageId, this.uIRouterGlobals.params.cards);\n    }\n  }\n\n  openStateLink(event:{ workPackageId:string; requestedState:string }) {\n    this.goToWpDetailState(event.workPackageId, this.uIRouterGlobals.params.cards, true);\n  }\n\n  goToWpDetailState(workPackageId:string, cards:boolean, focus?:boolean) {\n    // Show the split view when there is a viewer (browser)\n    // Show only wp details when there is no viewer, plugin environment (ie: Revit)\n    const stateToGo = this.viewer.shouldShowViewer ?\n                        splitViewRoute(this.$state) :\n                        'bim.partitioned.show';\n    // Passing the card param to the new state because the router doesn't keep\n    // it when going to 'bim.partitioned.show'\n    const params = { workPackageId, cards, focus };\n\n    this.$state.go(stateToGo, params);\n  }\n}\n","// -- copyright\n// OpenProject is a project management system.\n// Copyright (C) 2012-2018 the OpenProject Foundation (OPF)\n//\n// This program is free software; you can redistribute it and/or\n// modify it under the terms of the GNU General Public License version 3.\n//\n// OpenProject is a fork of ChiliProject, which is a fork of Redmine. The copyright follows:\n// Copyright (C) 2006-2013 Jean-Philippe Lang\n// Copyright (C) 2010-2013 the ChiliProject Team\n//\n// This program is free software; you can redistribute it and/or\n// modify it under the terms of the GNU General Public License\n// as published by the Free Software Foundation; either version 2\n// of the License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with this program; if not, write to the Free Software\n// Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n//\n// See doc/COPYRIGHT.rdoc for more details.\n// ++\nimport {Ng2StateDeclaration} from '@uirouter/angular';\nimport {IFCViewerPageComponent} from \"core-app/modules/bim/ifc_models/pages/viewer/ifc-viewer-page.component\";\nimport {IFCViewerComponent} from \"core-app/modules/bim/ifc_models/ifc-viewer/ifc-viewer.component\";\nimport {WorkPackagesBaseComponent} from \"core-app/modules/work_packages/routing/wp-base/wp--base.component\";\nimport {EmptyComponent} from \"core-app/modules/bim/ifc_models/empty/empty-component\";\nimport {makeSplitViewRoutes} from \"core-app/modules/work_packages/routing/split-view-routes.template\";\nimport {BcfListContainerComponent} from \"core-app/modules/bim/ifc_models/bcf/list-container/bcf-list-container.component\";\nimport {WorkPackageSplitViewComponent} from \"core-app/modules/work_packages/routing/wp-split-view/wp-split-view.component\";\nimport {ViewerBridgeService} from \"core-app/modules/bim/bcf/bcf-viewer-bridge/viewer-bridge.service\";\nimport {WorkPackageNewFullViewComponent} from \"core-components/wp-new/wp-new-full-view.component\";\n\nexport const IFC_ROUTES:Ng2StateDeclaration[] = [\n  {\n    name: 'bim',\n    parent: 'root',\n    url: '/bcf?query_props&models&viewpoint',\n    abstract: true,\n    component: WorkPackagesBaseComponent,\n    redirectTo: 'bim.partitioned',\n    params: {\n      // Use custom encoder/decoder that ensures validity of URL string\n      query_props: { type: 'opQueryString', dynamic: true },\n      models: { type: 'opQueryString', dynamic: true },\n      viewpoint: { type: 'int', dynamic: true }\n    }\n  },\n  {\n    name: 'bim.partitioned',\n    url: '',\n    component: IFCViewerPageComponent,\n    redirectTo: (transition) => {\n      const viewerBridgeService = transition.injector().get(ViewerBridgeService);\n\n      return viewerBridgeService.shouldShowViewer ?\n              'bim.partitioned.split' :\n              'bim.partitioned.list';\n    },\n  },\n  {\n    name: 'bim.partitioned.list',\n    url: '/list?{cards:bool}',\n    params: {\n      cards: true\n    },\n    data: {\n      baseRoute: 'bim.partitioned.list',\n      newRoute: 'bim.partitioned.list.new',\n      partition: '-left-only'\n    },\n    reloadOnSearch: false,\n    views: {\n      'content-left': { component: BcfListContainerComponent }\n    }\n  },\n  {\n    name: 'bim.partitioned.split',\n    url: '/split?{cards:bool}',\n    params: {\n      cards: true\n    },\n    data: {\n      baseRoute: 'bim.partitioned.split',\n      partition: '-split',\n      newRoute: 'bim.partitioned.split.new',\n      bodyClasses: 'router--work-packages-partitioned-split-view'\n    },\n    reloadOnSearch: false,\n    views: {\n      'content-left': { component: IFCViewerComponent },\n      'content-right': { component: BcfListContainerComponent }\n    }\n  },\n  {\n    name: 'bim.partitioned.model',\n    url: '/model',\n    data: {\n      partition: '-left-only',\n      newRoute: 'bim.partitioned.model.new',\n    },\n    reloadOnSearch: false,\n    views: {\n      // Retarget and by that override the grandparent views\n      // https://ui-router.github.io/guide/views#relative-parent-state{\n      'content-right': { component: EmptyComponent },\n      'content-left': { component: IFCViewerComponent }\n    }\n  },\n  {\n    name: 'bim.partitioned.new',\n    url: '/new?type&parent_id',\n    reloadOnSearch: false,\n    data: {\n      baseRoute: 'bim.partitioned.list',\n      allowMovingInEditMode: true,\n      partition: '-left-only',\n    },\n    views: {'content-left': { component:WorkPackageNewFullViewComponent }}\n  },\n  {\n    name: 'bim.partitioned.show',\n    url: '/show/{workPackageId:[0-9]+}?{cards:bool}',\n    data: {\n      baseRoute: 'bim.partitioned.list',\n      partition: '-left-only'\n    },\n    reloadOnSearch: false,\n    redirectTo: 'bim.partitioned.show.details',\n  },\n  // BCF single view for list\n  ...makeSplitViewRoutes(\n    'bim.partitioned.list',\n    undefined,\n    WorkPackageSplitViewComponent,\n    undefined,\n    true,\n    'bim.partitioned.show',\n  ),\n  // BCF single view for list\n  ...makeSplitViewRoutes(\n    'bim.partitioned.list',\n    undefined,\n    WorkPackageSplitViewComponent\n  ),\n  // BCF single view for split\n  ...makeSplitViewRoutes(\n    'bim.partitioned.split',\n    undefined,\n    WorkPackageSplitViewComponent\n  ),\n  // BCF single view for model-only\n  ...makeSplitViewRoutes(\n    'bim.partitioned.model',\n    undefined,\n    WorkPackageSplitViewComponent\n  ),\n];\n\n","// -- copyright\n// OpenProject is a project management system.\n// Copyright (C) 2012-2018 the OpenProject Foundation (OPF)\n//\n// This program is free software; you can redistribute it and/or\n// modify it under the terms of the GNU General Public License version 3.\n//\n// OpenProject is a fork of ChiliProject, which is a fork of Redmine. The copyright follows:\n// Copyright (C) 2006-2013 Jean-Philippe Lang\n// Copyright (C) 2010-2013 the ChiliProject Team\n//\n// This program is free software; you can redistribute it and/or\n// modify it under the terms of the GNU General Public License\n// as published by the Free Software Foundation; either version 2\n// of the License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with this program; if not, write to the Free Software\n// Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n//\n// See doc/COPYRIGHT.rdoc for more details.\n// ++\nimport {NgModule} from \"@angular/core\";\nimport {OpenprojectWorkPackagesModule} from \"core-app/modules/work_packages/openproject-work-packages.module\";\nimport {UIRouterModule} from '@uirouter/angular';\nimport {OpenprojectCommonModule} from \"core-app/modules/common/openproject-common.module\";\nimport {IFCViewerComponent} from './ifc-viewer/ifc-viewer.component';\nimport {IFC_ROUTES} from \"core-app/modules/bim/ifc_models/openproject-ifc-models.routes\";\nimport {IFCViewerPageComponent} from \"core-app/modules/bim/ifc_models/pages/viewer/ifc-viewer-page.component\";\nimport {EmptyComponent} from \"core-app/modules/bim/ifc_models/empty/empty-component\";\nimport {BimViewToggleButtonComponent} from \"core-app/modules/bim/ifc_models/toolbar/view-toggle/bim-view-toggle-button.component\";\nimport {BimViewToggleDropdownDirective} from \"core-app/modules/bim/ifc_models/toolbar/view-toggle/bim-view-toggle-dropdown.directive\";\nimport {BimManageIfcModelsButtonComponent} from \"core-app/modules/bim/ifc_models/toolbar/manage-ifc-models-button/bim-manage-ifc-models-button.component\";\nimport {IFCViewerService} from \"core-app/modules/bim/ifc_models/ifc-viewer/ifc-viewer.service\";\nimport {OpenprojectFieldsModule} from \"core-app/modules/fields/openproject-fields.module\";\nimport {BCFNewSplitComponent} from \"core-app/modules/bim/ifc_models/bcf/new-split/bcf-new-split.component\";\nimport {BcfListContainerComponent} from \"core-app/modules/bim/ifc_models/bcf/list-container/bcf-list-container.component\";\nimport {OpenprojectHalModule} from \"core-app/modules/hal/openproject-hal.module\";\nimport {BimViewService} from \"core-app/modules/bim/ifc_models/pages/viewer/bim-view.service\";\nimport {IfcModelsDataService} from \"core-app/modules/bim/ifc_models/pages/viewer/ifc-models-data.service\";\nimport {OpenprojectBcfModule} from \"core-app/modules/bim/bcf/openproject-bcf.module\";\n\n@NgModule({\n  imports: [\n    OpenprojectCommonModule,\n    OpenprojectFieldsModule,\n    OpenprojectHalModule,\n    OpenprojectBcfModule,\n    OpenprojectWorkPackagesModule,\n    UIRouterModule.forChild({\n      states: IFC_ROUTES\n    })\n  ],\n  providers: [\n    IFCViewerService,\n    BimViewService,\n    IfcModelsDataService\n  ],\n  declarations: [\n    // Pages\n    IFCViewerPageComponent,\n\n    // Regions of pages\n    EmptyComponent,\n    BcfListContainerComponent,\n\n    // Toolbar\n    BimManageIfcModelsButtonComponent,\n    BimViewToggleButtonComponent,\n    BimViewToggleDropdownDirective,\n\n    BCFNewSplitComponent,\n    IFCViewerComponent\n  ]\n})\nexport class OpenprojectIFCModelsModule {\n}\n\n"],"sourceRoot":"webpack:///"}