{"version":3,"sources":["./node_modules/codemirror/mode/xml/xml.js","./node_modules/codemirror/mode/htmlmixed/htmlmixed.js","./node_modules/codemirror/mode/slim/slim.js"],"names":["CodeMirror","htmlConfig","autoSelfClosers","implicitlyClosed","contextGrabbers","doNotIndent","allowUnquoted","allowMissing","caseFold","xmlConfig","allowMissingTagName","defineMode","editorConf","config_","type","setStyle","indentUnit","config","defaults","htmlMode","prop","inText","stream","state","chain","parser","tokenize","ch","next","eat","match","inBlock","eatWhile","doctype","inTag","baseState","tagName","tagStart","test","inAttribute","stringStartCol","column","quote","closure","eol","isInAttribute","style","terminator","depth","Context","startOfLine","this","prev","context","indent","indented","hasOwnProperty","noIndent","popContext","maybePopContext","nextTagName","parentTagName","tagNameState","closeTagNameState","current","attrState","matchClosing","closeState","closeStateErr","_stream","attrEqState","attrValueState","attrContinuedState","isInText","startState","baseIndent","token","sol","indentation","eatSpace","textAfter","fullLine","Pass","length","multilineTagIndentPastTag","multilineTagIndentFactor","alignCDATA","tagAfter","exec","grabbers","electricInput","blockCommentStart","blockCommentEnd","configuration","helperType","skipAttribute","defineMIME","mimeModes","name","mod","defaultTags","script","maybeBackup","pat","cur","close","search","backUp","attrRegexpCache","getAttrRegexp","attr","regexp","RegExp","getAttrValue","text","getTagRegexp","anchored","addTags","from","to","tag","dest","source","i","unshift","findMatchingMode","tagInfo","tagText","spec","parserConfig","getMode","tags","configTags","configScript","scriptTypes","matches","mode","html","htmlState","toLowerCase","modeSpec","endTagA","endTag","localState","localMode","copyState","local","line","innerMode","rubyMode","modes","ruby","embedded","javascript","css","sass","scss","less","styl","coffee","asciidoc","markdown","textile","creole","wiki","mediawiki","rdoc","builder","nokogiri","erb","embeddedRegexp","map","arr","key","push","join","styleMap","closing","nameStartChar","nameChar","nameRegexp","attributeNameRegexp","wrappedAttributeNameRegexp","classNameRegexp","classIdRegexp","backup","pos","restore","offset","idx","continueLine","stack","parent","finishContinue","lineContinuable","commaContinuable","rubyInQuote","endQuote","peek","rubyState","startRubySplat","runSplat","htmlLine","startHtmlLine","lastTokenize","startHtmlMode","comment","skipToEnd","commentMode","attributeWrapper","attributeWrapperAssign","attributeWrapperValue","readQuoted","startAttributeWrapperMode","sub","subStream","StringStream","string","slice","tabSize","start","lastColumnPos","lastColumnValue","subMode","subState","firstSub","createMode","query","factory","startSubMode","doctypeLine","_state","startLine","m","slimTag","slim","slimTagExtras","slimClass","slimAttribute","$1","slimAttributeAssign","slimContent","slimAttributeValue","slimAttributeSymbols","embed","unescaped","nextTokenize","fresh","escaped","last","blankLine"],"mappings":"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","file":"40.53f0862871a1ebfe1e2a.js","sourcesContent":["// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n\"use strict\";\n\nvar htmlConfig = {\n  autoSelfClosers: {'area': true, 'base': true, 'br': true, 'col': true, 'command': true,\n                    'embed': true, 'frame': true, 'hr': true, 'img': true, 'input': true,\n                    'keygen': true, 'link': true, 'meta': true, 'param': true, 'source': true,\n                    'track': true, 'wbr': true, 'menuitem': true},\n  implicitlyClosed: {'dd': true, 'li': true, 'optgroup': true, 'option': true, 'p': true,\n                     'rp': true, 'rt': true, 'tbody': true, 'td': true, 'tfoot': true,\n                     'th': true, 'tr': true},\n  contextGrabbers: {\n    'dd': {'dd': true, 'dt': true},\n    'dt': {'dd': true, 'dt': true},\n    'li': {'li': true},\n    'option': {'option': true, 'optgroup': true},\n    'optgroup': {'optgroup': true},\n    'p': {'address': true, 'article': true, 'aside': true, 'blockquote': true, 'dir': true,\n          'div': true, 'dl': true, 'fieldset': true, 'footer': true, 'form': true,\n          'h1': true, 'h2': true, 'h3': true, 'h4': true, 'h5': true, 'h6': true,\n          'header': true, 'hgroup': true, 'hr': true, 'menu': true, 'nav': true, 'ol': true,\n          'p': true, 'pre': true, 'section': true, 'table': true, 'ul': true},\n    'rp': {'rp': true, 'rt': true},\n    'rt': {'rp': true, 'rt': true},\n    'tbody': {'tbody': true, 'tfoot': true},\n    'td': {'td': true, 'th': true},\n    'tfoot': {'tbody': true},\n    'th': {'td': true, 'th': true},\n    'thead': {'tbody': true, 'tfoot': true},\n    'tr': {'tr': true}\n  },\n  doNotIndent: {\"pre\": true},\n  allowUnquoted: true,\n  allowMissing: true,\n  caseFold: true\n}\n\nvar xmlConfig = {\n  autoSelfClosers: {},\n  implicitlyClosed: {},\n  contextGrabbers: {},\n  doNotIndent: {},\n  allowUnquoted: false,\n  allowMissing: false,\n  allowMissingTagName: false,\n  caseFold: false\n}\n\nCodeMirror.defineMode(\"xml\", function(editorConf, config_) {\n  var indentUnit = editorConf.indentUnit\n  var config = {}\n  var defaults = config_.htmlMode ? htmlConfig : xmlConfig\n  for (var prop in defaults) config[prop] = defaults[prop]\n  for (var prop in config_) config[prop] = config_[prop]\n\n  // Return variables for tokenizers\n  var type, setStyle;\n\n  function inText(stream, state) {\n    function chain(parser) {\n      state.tokenize = parser;\n      return parser(stream, state);\n    }\n\n    var ch = stream.next();\n    if (ch == \"<\") {\n      if (stream.eat(\"!\")) {\n        if (stream.eat(\"[\")) {\n          if (stream.match(\"CDATA[\")) return chain(inBlock(\"atom\", \"]]>\"));\n          else return null;\n        } else if (stream.match(\"--\")) {\n          return chain(inBlock(\"comment\", \"-->\"));\n        } else if (stream.match(\"DOCTYPE\", true, true)) {\n          stream.eatWhile(/[\\w\\._\\-]/);\n          return chain(doctype(1));\n        } else {\n          return null;\n        }\n      } else if (stream.eat(\"?\")) {\n        stream.eatWhile(/[\\w\\._\\-]/);\n        state.tokenize = inBlock(\"meta\", \"?>\");\n        return \"meta\";\n      } else {\n        type = stream.eat(\"/\") ? \"closeTag\" : \"openTag\";\n        state.tokenize = inTag;\n        return \"tag bracket\";\n      }\n    } else if (ch == \"&\") {\n      var ok;\n      if (stream.eat(\"#\")) {\n        if (stream.eat(\"x\")) {\n          ok = stream.eatWhile(/[a-fA-F\\d]/) && stream.eat(\";\");\n        } else {\n          ok = stream.eatWhile(/[\\d]/) && stream.eat(\";\");\n        }\n      } else {\n        ok = stream.eatWhile(/[\\w\\.\\-:]/) && stream.eat(\";\");\n      }\n      return ok ? \"atom\" : \"error\";\n    } else {\n      stream.eatWhile(/[^&<]/);\n      return null;\n    }\n  }\n  inText.isInText = true;\n\n  function inTag(stream, state) {\n    var ch = stream.next();\n    if (ch == \">\" || (ch == \"/\" && stream.eat(\">\"))) {\n      state.tokenize = inText;\n      type = ch == \">\" ? \"endTag\" : \"selfcloseTag\";\n      return \"tag bracket\";\n    } else if (ch == \"=\") {\n      type = \"equals\";\n      return null;\n    } else if (ch == \"<\") {\n      state.tokenize = inText;\n      state.state = baseState;\n      state.tagName = state.tagStart = null;\n      var next = state.tokenize(stream, state);\n      return next ? next + \" tag error\" : \"tag error\";\n    } else if (/[\\'\\\"]/.test(ch)) {\n      state.tokenize = inAttribute(ch);\n      state.stringStartCol = stream.column();\n      return state.tokenize(stream, state);\n    } else {\n      stream.match(/^[^\\s\\u00a0=<>\\\"\\']*[^\\s\\u00a0=<>\\\"\\'\\/]/);\n      return \"word\";\n    }\n  }\n\n  function inAttribute(quote) {\n    var closure = function(stream, state) {\n      while (!stream.eol()) {\n        if (stream.next() == quote) {\n          state.tokenize = inTag;\n          break;\n        }\n      }\n      return \"string\";\n    };\n    closure.isInAttribute = true;\n    return closure;\n  }\n\n  function inBlock(style, terminator) {\n    return function(stream, state) {\n      while (!stream.eol()) {\n        if (stream.match(terminator)) {\n          state.tokenize = inText;\n          break;\n        }\n        stream.next();\n      }\n      return style;\n    }\n  }\n\n  function doctype(depth) {\n    return function(stream, state) {\n      var ch;\n      while ((ch = stream.next()) != null) {\n        if (ch == \"<\") {\n          state.tokenize = doctype(depth + 1);\n          return state.tokenize(stream, state);\n        } else if (ch == \">\") {\n          if (depth == 1) {\n            state.tokenize = inText;\n            break;\n          } else {\n            state.tokenize = doctype(depth - 1);\n            return state.tokenize(stream, state);\n          }\n        }\n      }\n      return \"meta\";\n    };\n  }\n\n  function Context(state, tagName, startOfLine) {\n    this.prev = state.context;\n    this.tagName = tagName;\n    this.indent = state.indented;\n    this.startOfLine = startOfLine;\n    if (config.doNotIndent.hasOwnProperty(tagName) || (state.context && state.context.noIndent))\n      this.noIndent = true;\n  }\n  function popContext(state) {\n    if (state.context) state.context = state.context.prev;\n  }\n  function maybePopContext(state, nextTagName) {\n    var parentTagName;\n    while (true) {\n      if (!state.context) {\n        return;\n      }\n      parentTagName = state.context.tagName;\n      if (!config.contextGrabbers.hasOwnProperty(parentTagName) ||\n          !config.contextGrabbers[parentTagName].hasOwnProperty(nextTagName)) {\n        return;\n      }\n      popContext(state);\n    }\n  }\n\n  function baseState(type, stream, state) {\n    if (type == \"openTag\") {\n      state.tagStart = stream.column();\n      return tagNameState;\n    } else if (type == \"closeTag\") {\n      return closeTagNameState;\n    } else {\n      return baseState;\n    }\n  }\n  function tagNameState(type, stream, state) {\n    if (type == \"word\") {\n      state.tagName = stream.current();\n      setStyle = \"tag\";\n      return attrState;\n    } else if (config.allowMissingTagName && type == \"endTag\") {\n      setStyle = \"tag bracket\";\n      return attrState(type, stream, state);\n    } else {\n      setStyle = \"error\";\n      return tagNameState;\n    }\n  }\n  function closeTagNameState(type, stream, state) {\n    if (type == \"word\") {\n      var tagName = stream.current();\n      if (state.context && state.context.tagName != tagName &&\n          config.implicitlyClosed.hasOwnProperty(state.context.tagName))\n        popContext(state);\n      if ((state.context && state.context.tagName == tagName) || config.matchClosing === false) {\n        setStyle = \"tag\";\n        return closeState;\n      } else {\n        setStyle = \"tag error\";\n        return closeStateErr;\n      }\n    } else if (config.allowMissingTagName && type == \"endTag\") {\n      setStyle = \"tag bracket\";\n      return closeState(type, stream, state);\n    } else {\n      setStyle = \"error\";\n      return closeStateErr;\n    }\n  }\n\n  function closeState(type, _stream, state) {\n    if (type != \"endTag\") {\n      setStyle = \"error\";\n      return closeState;\n    }\n    popContext(state);\n    return baseState;\n  }\n  function closeStateErr(type, stream, state) {\n    setStyle = \"error\";\n    return closeState(type, stream, state);\n  }\n\n  function attrState(type, _stream, state) {\n    if (type == \"word\") {\n      setStyle = \"attribute\";\n      return attrEqState;\n    } else if (type == \"endTag\" || type == \"selfcloseTag\") {\n      var tagName = state.tagName, tagStart = state.tagStart;\n      state.tagName = state.tagStart = null;\n      if (type == \"selfcloseTag\" ||\n          config.autoSelfClosers.hasOwnProperty(tagName)) {\n        maybePopContext(state, tagName);\n      } else {\n        maybePopContext(state, tagName);\n        state.context = new Context(state, tagName, tagStart == state.indented);\n      }\n      return baseState;\n    }\n    setStyle = \"error\";\n    return attrState;\n  }\n  function attrEqState(type, stream, state) {\n    if (type == \"equals\") return attrValueState;\n    if (!config.allowMissing) setStyle = \"error\";\n    return attrState(type, stream, state);\n  }\n  function attrValueState(type, stream, state) {\n    if (type == \"string\") return attrContinuedState;\n    if (type == \"word\" && config.allowUnquoted) {setStyle = \"string\"; return attrState;}\n    setStyle = \"error\";\n    return attrState(type, stream, state);\n  }\n  function attrContinuedState(type, stream, state) {\n    if (type == \"string\") return attrContinuedState;\n    return attrState(type, stream, state);\n  }\n\n  return {\n    startState: function(baseIndent) {\n      var state = {tokenize: inText,\n                   state: baseState,\n                   indented: baseIndent || 0,\n                   tagName: null, tagStart: null,\n                   context: null}\n      if (baseIndent != null) state.baseIndent = baseIndent\n      return state\n    },\n\n    token: function(stream, state) {\n      if (!state.tagName && stream.sol())\n        state.indented = stream.indentation();\n\n      if (stream.eatSpace()) return null;\n      type = null;\n      var style = state.tokenize(stream, state);\n      if ((style || type) && style != \"comment\") {\n        setStyle = null;\n        state.state = state.state(type || style, stream, state);\n        if (setStyle)\n          style = setStyle == \"error\" ? style + \" error\" : setStyle;\n      }\n      return style;\n    },\n\n    indent: function(state, textAfter, fullLine) {\n      var context = state.context;\n      // Indent multi-line strings (e.g. css).\n      if (state.tokenize.isInAttribute) {\n        if (state.tagStart == state.indented)\n          return state.stringStartCol + 1;\n        else\n          return state.indented + indentUnit;\n      }\n      if (context && context.noIndent) return CodeMirror.Pass;\n      if (state.tokenize != inTag && state.tokenize != inText)\n        return fullLine ? fullLine.match(/^(\\s*)/)[0].length : 0;\n      // Indent the starts of attribute names.\n      if (state.tagName) {\n        if (config.multilineTagIndentPastTag !== false)\n          return state.tagStart + state.tagName.length + 2;\n        else\n          return state.tagStart + indentUnit * (config.multilineTagIndentFactor || 1);\n      }\n      if (config.alignCDATA && /<!\\[CDATA\\[/.test(textAfter)) return 0;\n      var tagAfter = textAfter && /^<(\\/)?([\\w_:\\.-]*)/.exec(textAfter);\n      if (tagAfter && tagAfter[1]) { // Closing tag spotted\n        while (context) {\n          if (context.tagName == tagAfter[2]) {\n            context = context.prev;\n            break;\n          } else if (config.implicitlyClosed.hasOwnProperty(context.tagName)) {\n            context = context.prev;\n          } else {\n            break;\n          }\n        }\n      } else if (tagAfter) { // Opening tag spotted\n        while (context) {\n          var grabbers = config.contextGrabbers[context.tagName];\n          if (grabbers && grabbers.hasOwnProperty(tagAfter[2]))\n            context = context.prev;\n          else\n            break;\n        }\n      }\n      while (context && context.prev && !context.startOfLine)\n        context = context.prev;\n      if (context) return context.indent + indentUnit;\n      else return state.baseIndent || 0;\n    },\n\n    electricInput: /<\\/[\\s\\w:]+>$/,\n    blockCommentStart: \"<!--\",\n    blockCommentEnd: \"-->\",\n\n    configuration: config.htmlMode ? \"html\" : \"xml\",\n    helperType: config.htmlMode ? \"html\" : \"xml\",\n\n    skipAttribute: function(state) {\n      if (state.state == attrValueState)\n        state.state = attrState\n    }\n  };\n});\n\nCodeMirror.defineMIME(\"text/xml\", \"xml\");\nCodeMirror.defineMIME(\"application/xml\", \"xml\");\nif (!CodeMirror.mimeModes.hasOwnProperty(\"text/html\"))\n  CodeMirror.defineMIME(\"text/html\", {name: \"xml\", htmlMode: true});\n\n});\n","// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"), require(\"../xml/xml\"), require(\"../javascript/javascript\"), require(\"../css/css\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\", \"../xml/xml\", \"../javascript/javascript\", \"../css/css\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n  \"use strict\";\n\n  var defaultTags = {\n    script: [\n      [\"lang\", /(javascript|babel)/i, \"javascript\"],\n      [\"type\", /^(?:text|application)\\/(?:x-)?(?:java|ecma)script$|^module$|^$/i, \"javascript\"],\n      [\"type\", /./, \"text/plain\"],\n      [null, null, \"javascript\"]\n    ],\n    style:  [\n      [\"lang\", /^css$/i, \"css\"],\n      [\"type\", /^(text\\/)?(x-)?(stylesheet|css)$/i, \"css\"],\n      [\"type\", /./, \"text/plain\"],\n      [null, null, \"css\"]\n    ]\n  };\n\n  function maybeBackup(stream, pat, style) {\n    var cur = stream.current(), close = cur.search(pat);\n    if (close > -1) {\n      stream.backUp(cur.length - close);\n    } else if (cur.match(/<\\/?$/)) {\n      stream.backUp(cur.length);\n      if (!stream.match(pat, false)) stream.match(cur);\n    }\n    return style;\n  }\n\n  var attrRegexpCache = {};\n  function getAttrRegexp(attr) {\n    var regexp = attrRegexpCache[attr];\n    if (regexp) return regexp;\n    return attrRegexpCache[attr] = new RegExp(\"\\\\s+\" + attr + \"\\\\s*=\\\\s*('|\\\")?([^'\\\"]+)('|\\\")?\\\\s*\");\n  }\n\n  function getAttrValue(text, attr) {\n    var match = text.match(getAttrRegexp(attr))\n    return match ? /^\\s*(.*?)\\s*$/.exec(match[2])[1] : \"\"\n  }\n\n  function getTagRegexp(tagName, anchored) {\n    return new RegExp((anchored ? \"^\" : \"\") + \"<\\/\\s*\" + tagName + \"\\s*>\", \"i\");\n  }\n\n  function addTags(from, to) {\n    for (var tag in from) {\n      var dest = to[tag] || (to[tag] = []);\n      var source = from[tag];\n      for (var i = source.length - 1; i >= 0; i--)\n        dest.unshift(source[i])\n    }\n  }\n\n  function findMatchingMode(tagInfo, tagText) {\n    for (var i = 0; i < tagInfo.length; i++) {\n      var spec = tagInfo[i];\n      if (!spec[0] || spec[1].test(getAttrValue(tagText, spec[0]))) return spec[2];\n    }\n  }\n\n  CodeMirror.defineMode(\"htmlmixed\", function (config, parserConfig) {\n    var htmlMode = CodeMirror.getMode(config, {\n      name: \"xml\",\n      htmlMode: true,\n      multilineTagIndentFactor: parserConfig.multilineTagIndentFactor,\n      multilineTagIndentPastTag: parserConfig.multilineTagIndentPastTag\n    });\n\n    var tags = {};\n    var configTags = parserConfig && parserConfig.tags, configScript = parserConfig && parserConfig.scriptTypes;\n    addTags(defaultTags, tags);\n    if (configTags) addTags(configTags, tags);\n    if (configScript) for (var i = configScript.length - 1; i >= 0; i--)\n      tags.script.unshift([\"type\", configScript[i].matches, configScript[i].mode])\n\n    function html(stream, state) {\n      var style = htmlMode.token(stream, state.htmlState), tag = /\\btag\\b/.test(style), tagName\n      if (tag && !/[<>\\s\\/]/.test(stream.current()) &&\n          (tagName = state.htmlState.tagName && state.htmlState.tagName.toLowerCase()) &&\n          tags.hasOwnProperty(tagName)) {\n        state.inTag = tagName + \" \"\n      } else if (state.inTag && tag && />$/.test(stream.current())) {\n        var inTag = /^([\\S]+) (.*)/.exec(state.inTag)\n        state.inTag = null\n        var modeSpec = stream.current() == \">\" && findMatchingMode(tags[inTag[1]], inTag[2])\n        var mode = CodeMirror.getMode(config, modeSpec)\n        var endTagA = getTagRegexp(inTag[1], true), endTag = getTagRegexp(inTag[1], false);\n        state.token = function (stream, state) {\n          if (stream.match(endTagA, false)) {\n            state.token = html;\n            state.localState = state.localMode = null;\n            return null;\n          }\n          return maybeBackup(stream, endTag, state.localMode.token(stream, state.localState));\n        };\n        state.localMode = mode;\n        state.localState = CodeMirror.startState(mode, htmlMode.indent(state.htmlState, \"\", \"\"));\n      } else if (state.inTag) {\n        state.inTag += stream.current()\n        if (stream.eol()) state.inTag += \" \"\n      }\n      return style;\n    };\n\n    return {\n      startState: function () {\n        var state = CodeMirror.startState(htmlMode);\n        return {token: html, inTag: null, localMode: null, localState: null, htmlState: state};\n      },\n\n      copyState: function (state) {\n        var local;\n        if (state.localState) {\n          local = CodeMirror.copyState(state.localMode, state.localState);\n        }\n        return {token: state.token, inTag: state.inTag,\n                localMode: state.localMode, localState: local,\n                htmlState: CodeMirror.copyState(htmlMode, state.htmlState)};\n      },\n\n      token: function (stream, state) {\n        return state.token(stream, state);\n      },\n\n      indent: function (state, textAfter, line) {\n        if (!state.localMode || /^\\s*<\\//.test(textAfter))\n          return htmlMode.indent(state.htmlState, textAfter, line);\n        else if (state.localMode.indent)\n          return state.localMode.indent(state.localState, textAfter, line);\n        else\n          return CodeMirror.Pass;\n      },\n\n      innerMode: function (state) {\n        return {state: state.localState || state.htmlState, mode: state.localMode || htmlMode};\n      }\n    };\n  }, \"xml\", \"javascript\", \"css\");\n\n  CodeMirror.defineMIME(\"text/html\", \"htmlmixed\");\n});\n","// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n// Slim Highlighting for CodeMirror copyright (c) HicknHack Software Gmbh\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"), require(\"../htmlmixed/htmlmixed\"), require(\"../ruby/ruby\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\", \"../htmlmixed/htmlmixed\", \"../ruby/ruby\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n\"use strict\";\n\n  CodeMirror.defineMode(\"slim\", function(config) {\n    var htmlMode = CodeMirror.getMode(config, {name: \"htmlmixed\"});\n    var rubyMode = CodeMirror.getMode(config, \"ruby\");\n    var modes = { html: htmlMode, ruby: rubyMode };\n    var embedded = {\n      ruby: \"ruby\",\n      javascript: \"javascript\",\n      css: \"text/css\",\n      sass: \"text/x-sass\",\n      scss: \"text/x-scss\",\n      less: \"text/x-less\",\n      styl: \"text/x-styl\", // no highlighting so far\n      coffee: \"coffeescript\",\n      asciidoc: \"text/x-asciidoc\",\n      markdown: \"text/x-markdown\",\n      textile: \"text/x-textile\", // no highlighting so far\n      creole: \"text/x-creole\", // no highlighting so far\n      wiki: \"text/x-wiki\", // no highlighting so far\n      mediawiki: \"text/x-mediawiki\", // no highlighting so far\n      rdoc: \"text/x-rdoc\", // no highlighting so far\n      builder: \"text/x-builder\", // no highlighting so far\n      nokogiri: \"text/x-nokogiri\", // no highlighting so far\n      erb: \"application/x-erb\"\n    };\n    var embeddedRegexp = function(map){\n      var arr = [];\n      for(var key in map) arr.push(key);\n      return new RegExp(\"^(\"+arr.join('|')+\"):\");\n    }(embedded);\n\n    var styleMap = {\n      \"commentLine\": \"comment\",\n      \"slimSwitch\": \"operator special\",\n      \"slimTag\": \"tag\",\n      \"slimId\": \"attribute def\",\n      \"slimClass\": \"attribute qualifier\",\n      \"slimAttribute\": \"attribute\",\n      \"slimSubmode\": \"keyword special\",\n      \"closeAttributeTag\": null,\n      \"slimDoctype\": null,\n      \"lineContinuation\": null\n    };\n    var closing = {\n      \"{\": \"}\",\n      \"[\": \"]\",\n      \"(\": \")\"\n    };\n\n    var nameStartChar = \"_a-zA-Z\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD\";\n    var nameChar = nameStartChar + \"\\\\-0-9\\xB7\\u0300-\\u036F\\u203F-\\u2040\";\n    var nameRegexp = new RegExp(\"^[:\"+nameStartChar+\"](?::[\"+nameChar+\"]|[\"+nameChar+\"]*)\");\n    var attributeNameRegexp = new RegExp(\"^[:\"+nameStartChar+\"][:\\\\.\"+nameChar+\"]*(?=\\\\s*=)\");\n    var wrappedAttributeNameRegexp = new RegExp(\"^[:\"+nameStartChar+\"][:\\\\.\"+nameChar+\"]*\");\n    var classNameRegexp = /^\\.-?[_a-zA-Z]+[\\w\\-]*/;\n    var classIdRegexp = /^#[_a-zA-Z]+[\\w\\-]*/;\n\n    function backup(pos, tokenize, style) {\n      var restore = function(stream, state) {\n        state.tokenize = tokenize;\n        if (stream.pos < pos) {\n          stream.pos = pos;\n          return style;\n        }\n        return state.tokenize(stream, state);\n      };\n      return function(stream, state) {\n        state.tokenize = restore;\n        return tokenize(stream, state);\n      };\n    }\n\n    function maybeBackup(stream, state, pat, offset, style) {\n      var cur = stream.current();\n      var idx = cur.search(pat);\n      if (idx > -1) {\n        state.tokenize = backup(stream.pos, state.tokenize, style);\n        stream.backUp(cur.length - idx - offset);\n      }\n      return style;\n    }\n\n    function continueLine(state, column) {\n      state.stack = {\n        parent: state.stack,\n        style: \"continuation\",\n        indented: column,\n        tokenize: state.line\n      };\n      state.line = state.tokenize;\n    }\n    function finishContinue(state) {\n      if (state.line == state.tokenize) {\n        state.line = state.stack.tokenize;\n        state.stack = state.stack.parent;\n      }\n    }\n\n    function lineContinuable(column, tokenize) {\n      return function(stream, state) {\n        finishContinue(state);\n        if (stream.match(/^\\\\$/)) {\n          continueLine(state, column);\n          return \"lineContinuation\";\n        }\n        var style = tokenize(stream, state);\n        if (stream.eol() && stream.current().match(/(?:^|[^\\\\])(?:\\\\\\\\)*\\\\$/)) {\n          stream.backUp(1);\n        }\n        return style;\n      };\n    }\n    function commaContinuable(column, tokenize) {\n      return function(stream, state) {\n        finishContinue(state);\n        var style = tokenize(stream, state);\n        if (stream.eol() && stream.current().match(/,$/)) {\n          continueLine(state, column);\n        }\n        return style;\n      };\n    }\n\n    function rubyInQuote(endQuote, tokenize) {\n      // TODO: add multi line support\n      return function(stream, state) {\n        var ch = stream.peek();\n        if (ch == endQuote && state.rubyState.tokenize.length == 1) {\n          // step out of ruby context as it seems to complete processing all the braces\n          stream.next();\n          state.tokenize = tokenize;\n          return \"closeAttributeTag\";\n        } else {\n          return ruby(stream, state);\n        }\n      };\n    }\n    function startRubySplat(tokenize) {\n      var rubyState;\n      var runSplat = function(stream, state) {\n        if (state.rubyState.tokenize.length == 1 && !state.rubyState.context.prev) {\n          stream.backUp(1);\n          if (stream.eatSpace()) {\n            state.rubyState = rubyState;\n            state.tokenize = tokenize;\n            return tokenize(stream, state);\n          }\n          stream.next();\n        }\n        return ruby(stream, state);\n      };\n      return function(stream, state) {\n        rubyState = state.rubyState;\n        state.rubyState = CodeMirror.startState(rubyMode);\n        state.tokenize = runSplat;\n        return ruby(stream, state);\n      };\n    }\n\n    function ruby(stream, state) {\n      return rubyMode.token(stream, state.rubyState);\n    }\n\n    function htmlLine(stream, state) {\n      if (stream.match(/^\\\\$/)) {\n        return \"lineContinuation\";\n      }\n      return html(stream, state);\n    }\n    function html(stream, state) {\n      if (stream.match(/^#\\{/)) {\n        state.tokenize = rubyInQuote(\"}\", state.tokenize);\n        return null;\n      }\n      return maybeBackup(stream, state, /[^\\\\]#\\{/, 1, htmlMode.token(stream, state.htmlState));\n    }\n\n    function startHtmlLine(lastTokenize) {\n      return function(stream, state) {\n        var style = htmlLine(stream, state);\n        if (stream.eol()) state.tokenize = lastTokenize;\n        return style;\n      };\n    }\n\n    function startHtmlMode(stream, state, offset) {\n      state.stack = {\n        parent: state.stack,\n        style: \"html\",\n        indented: stream.column() + offset, // pipe + space\n        tokenize: state.line\n      };\n      state.line = state.tokenize = html;\n      return null;\n    }\n\n    function comment(stream, state) {\n      stream.skipToEnd();\n      return state.stack.style;\n    }\n\n    function commentMode(stream, state) {\n      state.stack = {\n        parent: state.stack,\n        style: \"comment\",\n        indented: state.indented + 1,\n        tokenize: state.line\n      };\n      state.line = comment;\n      return comment(stream, state);\n    }\n\n    function attributeWrapper(stream, state) {\n      if (stream.eat(state.stack.endQuote)) {\n        state.line = state.stack.line;\n        state.tokenize = state.stack.tokenize;\n        state.stack = state.stack.parent;\n        return null;\n      }\n      if (stream.match(wrappedAttributeNameRegexp)) {\n        state.tokenize = attributeWrapperAssign;\n        return \"slimAttribute\";\n      }\n      stream.next();\n      return null;\n    }\n    function attributeWrapperAssign(stream, state) {\n      if (stream.match(/^==?/)) {\n        state.tokenize = attributeWrapperValue;\n        return null;\n      }\n      return attributeWrapper(stream, state);\n    }\n    function attributeWrapperValue(stream, state) {\n      var ch = stream.peek();\n      if (ch == '\"' || ch == \"\\'\") {\n        state.tokenize = readQuoted(ch, \"string\", true, false, attributeWrapper);\n        stream.next();\n        return state.tokenize(stream, state);\n      }\n      if (ch == '[') {\n        return startRubySplat(attributeWrapper)(stream, state);\n      }\n      if (stream.match(/^(true|false|nil)\\b/)) {\n        state.tokenize = attributeWrapper;\n        return \"keyword\";\n      }\n      return startRubySplat(attributeWrapper)(stream, state);\n    }\n\n    function startAttributeWrapperMode(state, endQuote, tokenize) {\n      state.stack = {\n        parent: state.stack,\n        style: \"wrapper\",\n        indented: state.indented + 1,\n        tokenize: tokenize,\n        line: state.line,\n        endQuote: endQuote\n      };\n      state.line = state.tokenize = attributeWrapper;\n      return null;\n    }\n\n    function sub(stream, state) {\n      if (stream.match(/^#\\{/)) {\n        state.tokenize = rubyInQuote(\"}\", state.tokenize);\n        return null;\n      }\n      var subStream = new CodeMirror.StringStream(stream.string.slice(state.stack.indented), stream.tabSize);\n      subStream.pos = stream.pos - state.stack.indented;\n      subStream.start = stream.start - state.stack.indented;\n      subStream.lastColumnPos = stream.lastColumnPos - state.stack.indented;\n      subStream.lastColumnValue = stream.lastColumnValue - state.stack.indented;\n      var style = state.subMode.token(subStream, state.subState);\n      stream.pos = subStream.pos + state.stack.indented;\n      return style;\n    }\n    function firstSub(stream, state) {\n      state.stack.indented = stream.column();\n      state.line = state.tokenize = sub;\n      return state.tokenize(stream, state);\n    }\n\n    function createMode(mode) {\n      var query = embedded[mode];\n      var spec = CodeMirror.mimeModes[query];\n      if (spec) {\n        return CodeMirror.getMode(config, spec);\n      }\n      var factory = CodeMirror.modes[query];\n      if (factory) {\n        return factory(config, {name: query});\n      }\n      return CodeMirror.getMode(config, \"null\");\n    }\n\n    function getMode(mode) {\n      if (!modes.hasOwnProperty(mode)) {\n        return modes[mode] = createMode(mode);\n      }\n      return modes[mode];\n    }\n\n    function startSubMode(mode, state) {\n      var subMode = getMode(mode);\n      var subState = CodeMirror.startState(subMode);\n\n      state.subMode = subMode;\n      state.subState = subState;\n\n      state.stack = {\n        parent: state.stack,\n        style: \"sub\",\n        indented: state.indented + 1,\n        tokenize: state.line\n      };\n      state.line = state.tokenize = firstSub;\n      return \"slimSubmode\";\n    }\n\n    function doctypeLine(stream, _state) {\n      stream.skipToEnd();\n      return \"slimDoctype\";\n    }\n\n    function startLine(stream, state) {\n      var ch = stream.peek();\n      if (ch == '<') {\n        return (state.tokenize = startHtmlLine(state.tokenize))(stream, state);\n      }\n      if (stream.match(/^[|']/)) {\n        return startHtmlMode(stream, state, 1);\n      }\n      if (stream.match(/^\\/(!|\\[\\w+])?/)) {\n        return commentMode(stream, state);\n      }\n      if (stream.match(/^(-|==?[<>]?)/)) {\n        state.tokenize = lineContinuable(stream.column(), commaContinuable(stream.column(), ruby));\n        return \"slimSwitch\";\n      }\n      if (stream.match(/^doctype\\b/)) {\n        state.tokenize = doctypeLine;\n        return \"keyword\";\n      }\n\n      var m = stream.match(embeddedRegexp);\n      if (m) {\n        return startSubMode(m[1], state);\n      }\n\n      return slimTag(stream, state);\n    }\n\n    function slim(stream, state) {\n      if (state.startOfLine) {\n        return startLine(stream, state);\n      }\n      return slimTag(stream, state);\n    }\n\n    function slimTag(stream, state) {\n      if (stream.eat('*')) {\n        state.tokenize = startRubySplat(slimTagExtras);\n        return null;\n      }\n      if (stream.match(nameRegexp)) {\n        state.tokenize = slimTagExtras;\n        return \"slimTag\";\n      }\n      return slimClass(stream, state);\n    }\n    function slimTagExtras(stream, state) {\n      if (stream.match(/^(<>?|><?)/)) {\n        state.tokenize = slimClass;\n        return null;\n      }\n      return slimClass(stream, state);\n    }\n    function slimClass(stream, state) {\n      if (stream.match(classIdRegexp)) {\n        state.tokenize = slimClass;\n        return \"slimId\";\n      }\n      if (stream.match(classNameRegexp)) {\n        state.tokenize = slimClass;\n        return \"slimClass\";\n      }\n      return slimAttribute(stream, state);\n    }\n    function slimAttribute(stream, state) {\n      if (stream.match(/^([\\[\\{\\(])/)) {\n        return startAttributeWrapperMode(state, closing[RegExp.$1], slimAttribute);\n      }\n      if (stream.match(attributeNameRegexp)) {\n        state.tokenize = slimAttributeAssign;\n        return \"slimAttribute\";\n      }\n      if (stream.peek() == '*') {\n        stream.next();\n        state.tokenize = startRubySplat(slimContent);\n        return null;\n      }\n      return slimContent(stream, state);\n    }\n    function slimAttributeAssign(stream, state) {\n      if (stream.match(/^==?/)) {\n        state.tokenize = slimAttributeValue;\n        return null;\n      }\n      // should never happen, because of forward lookup\n      return slimAttribute(stream, state);\n    }\n\n    function slimAttributeValue(stream, state) {\n      var ch = stream.peek();\n      if (ch == '\"' || ch == \"\\'\") {\n        state.tokenize = readQuoted(ch, \"string\", true, false, slimAttribute);\n        stream.next();\n        return state.tokenize(stream, state);\n      }\n      if (ch == '[') {\n        return startRubySplat(slimAttribute)(stream, state);\n      }\n      if (ch == ':') {\n        return startRubySplat(slimAttributeSymbols)(stream, state);\n      }\n      if (stream.match(/^(true|false|nil)\\b/)) {\n        state.tokenize = slimAttribute;\n        return \"keyword\";\n      }\n      return startRubySplat(slimAttribute)(stream, state);\n    }\n    function slimAttributeSymbols(stream, state) {\n      stream.backUp(1);\n      if (stream.match(/^[^\\s],(?=:)/)) {\n        state.tokenize = startRubySplat(slimAttributeSymbols);\n        return null;\n      }\n      stream.next();\n      return slimAttribute(stream, state);\n    }\n    function readQuoted(quote, style, embed, unescaped, nextTokenize) {\n      return function(stream, state) {\n        finishContinue(state);\n        var fresh = stream.current().length == 0;\n        if (stream.match(/^\\\\$/, fresh)) {\n          if (!fresh) return style;\n          continueLine(state, state.indented);\n          return \"lineContinuation\";\n        }\n        if (stream.match(/^#\\{/, fresh)) {\n          if (!fresh) return style;\n          state.tokenize = rubyInQuote(\"}\", state.tokenize);\n          return null;\n        }\n        var escaped = false, ch;\n        while ((ch = stream.next()) != null) {\n          if (ch == quote && (unescaped || !escaped)) {\n            state.tokenize = nextTokenize;\n            break;\n          }\n          if (embed && ch == \"#\" && !escaped) {\n            if (stream.eat(\"{\")) {\n              stream.backUp(2);\n              break;\n            }\n          }\n          escaped = !escaped && ch == \"\\\\\";\n        }\n        if (stream.eol() && escaped) {\n          stream.backUp(1);\n        }\n        return style;\n      };\n    }\n    function slimContent(stream, state) {\n      if (stream.match(/^==?/)) {\n        state.tokenize = ruby;\n        return \"slimSwitch\";\n      }\n      if (stream.match(/^\\/$/)) { // tag close hint\n        state.tokenize = slim;\n        return null;\n      }\n      if (stream.match(/^:/)) { // inline tag\n        state.tokenize = slimTag;\n        return \"slimSwitch\";\n      }\n      startHtmlMode(stream, state, 0);\n      return state.tokenize(stream, state);\n    }\n\n    var mode = {\n      // default to html mode\n      startState: function() {\n        var htmlState = CodeMirror.startState(htmlMode);\n        var rubyState = CodeMirror.startState(rubyMode);\n        return {\n          htmlState: htmlState,\n          rubyState: rubyState,\n          stack: null,\n          last: null,\n          tokenize: slim,\n          line: slim,\n          indented: 0\n        };\n      },\n\n      copyState: function(state) {\n        return {\n          htmlState : CodeMirror.copyState(htmlMode, state.htmlState),\n          rubyState: CodeMirror.copyState(rubyMode, state.rubyState),\n          subMode: state.subMode,\n          subState: state.subMode && CodeMirror.copyState(state.subMode, state.subState),\n          stack: state.stack,\n          last: state.last,\n          tokenize: state.tokenize,\n          line: state.line\n        };\n      },\n\n      token: function(stream, state) {\n        if (stream.sol()) {\n          state.indented = stream.indentation();\n          state.startOfLine = true;\n          state.tokenize = state.line;\n          while (state.stack && state.stack.indented > state.indented && state.last != \"slimSubmode\") {\n            state.line = state.tokenize = state.stack.tokenize;\n            state.stack = state.stack.parent;\n            state.subMode = null;\n            state.subState = null;\n          }\n        }\n        if (stream.eatSpace()) return null;\n        var style = state.tokenize(stream, state);\n        state.startOfLine = false;\n        if (style) state.last = style;\n        return styleMap.hasOwnProperty(style) ? styleMap[style] : style;\n      },\n\n      blankLine: function(state) {\n        if (state.subMode && state.subMode.blankLine) {\n          return state.subMode.blankLine(state.subState);\n        }\n      },\n\n      innerMode: function(state) {\n        if (state.subMode) return {state: state.subState, mode: state.subMode};\n        return {state: state, mode: mode};\n      }\n\n      //indent: function(state) {\n      //  return state.indented;\n      //}\n    };\n    return mode;\n  }, \"htmlmixed\", \"ruby\");\n\n  CodeMirror.defineMIME(\"text/x-slim\", \"slim\");\n  CodeMirror.defineMIME(\"application/x-slim\", \"slim\");\n});\n"],"sourceRoot":"webpack:///"}